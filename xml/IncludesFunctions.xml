<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>
    <include name="HiddenHomeMenuButtonEnhancedHome">
        <control type="button">
            <visible>false</visible>
            <onfocus condition="!String.IsEmpty(Container(900).ListItem.Property(widgetPath.99))">SetProperty(SkinHelper.WidgetContainer,1508)</onfocus>
            <onfocus condition="String.IsEmpty(Container(900).ListItem.Property(widgetPath.99)) + !String.IsEmpty(Container(900).ListItem.Property(widgetPath))">$VAR[SetWidgetContainer]</onfocus>
            <onfocus condition="String.IsEmpty(Container(900).ListItem.property(widgetPath)) + String.IsEmpty(Container(900).ListItem.property(widgetPath.99))">ClearProperty(SkinHelper.WidgetContainer)</onfocus>
            <include content="WidgetsAutoRotate" condition="!String.IsEmpty(Skin.String(widgets_rotate_delay)) + !String.IsEqual(Skin.String(widgets_rotate),disabled)">
                <param name="interval" value="$INFO[Skin.String(widgets_rotate_delay)]" />
            </include>
            <include content="WidgetProperties">
                <param name="widgetid" value="999" />
            </include>
            <onunfocus>ClearProperty(SkinHelper.WidgetContainer)</onunfocus>
        </control>
    </include>

    <include name="HiddenHomeMenuButton">
        <control type="button">
            <visible>false</visible>
            <onfocus condition="String.IsEqual(Skin.String(HomeLayout),win10) | String.IsEqual(Skin.String(HomeLayout),bingie)">SetProperty(ShowViewSubMenu,show,Home)</onfocus>
            <onfocus condition="!String.IsEmpty(Container(900).ListItem.Property(widgetPath)) + !Skin.HasSetting(DisableAllWidgets) + [!String.IsEqual(Skin.String(HomeLayout),bingie) | Skin.HasSetting(UseSectionBackground)]">$VAR[SetWidgetContainer]</onfocus>
            <onfocus condition="!String.IsEmpty(Window.Property(SkinHelper.WidgetContainer)) + String.IsEmpty(Container(900).ListItem.property(widgetPath)) + [!String.IsEqual(Skin.String(HomeLayout),bingie) | Skin.HasSetting(UseSectionBackground)]">ClearProperty(SkinHelper.WidgetContainer)</onfocus>
            <onfocus condition="!Skin.HasSetting(DisableAllSubmenus)">SetProperty(submenupos,$INFO[Container(900).Position],Home)</onfocus>
            <onfocus condition="!Skin.HasSetting(DisableAllSubmenus) + Skin.HasSetting(AutoShowSubmenu) + Integer.IsGreater(Container(4445).NumItems,0) + !Control.IsVisible(4446)">SetProperty(submenu,show,Home)</onfocus>
            <onfocus condition="!Skin.HasSetting(DisableAllSubmenus) + Skin.HasSetting(AutoShowSubmenu) + Integer.IsGreater(Container(4445).NumItems,0) + !Control.IsVisible(4446) + Skin.String(SubmenuLayout, vertical)">SetFocus(4444,0)</onfocus>
            <onfocus condition="!Skin.HasSetting(AutoShowSubmenu) | Control.IsVisible(4446) | !Integer.IsGreater(Container(4445).NumItems,0)">ClearProperty(submenu,Home)</onfocus>
            <onfocus condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">ClearProperty(KeepPlayingPreview,Home)</onfocus>
            <!--<onfocus>SetProperty(widgetstyle, $INFO[Skin.String(widgetstyle)])</onfocus>-->
            <onfocus condition="!String.IsEqual(Skin.String(HomeLayout),bingie) | Skin.HasSetting(UseSectionBackground)">SetProperty(flushWidgetProps,1,Home)</onfocus>
            <include content="WidgetsAutoRotate" condition="!String.IsEmpty(Skin.String(widgets_rotate_delay)) + !String.IsEqual(Skin.String(widgets_rotate),disabled)">
                <param name="interval" value="$INFO[Skin.String(widgets_rotate_delay)]" />
            </include>
        </control>
    </include>

    <include name="HiddenWidgetButton">
        <param name="widget" default="Default" />
        <param name="groupid" default="77777" />
        <definition>
            <control type="button">
                <visible>false</visible>
                <include content="SetWidgetProps">
                    <param name="widgetid" value="$PARAM[widgetid]" />
                    <param name="widgetstyle" value="$PARAM[widgetstyle]" />
                </include>
                <include content="Bingie_$PARAM[widget]_AutoPreview" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + [Skin.HasSetting(BingieAutoTrailer) | Skin.HasSetting(SpotLightTrailers) | Skin.HasSetting(PVRPreview)]">
                    <param name="widgetid" value="$PARAM[widgetid]" />
                    <param name="groupid" value="$PARAM[groupid]" />
                </include>
                <include content="WidgetProperties">
                    <param name="widgetid" value="$PARAM[widgetid]" />
                </include>
                <include content="WidgetRotatePause" condition="!String.IsEmpty(Skin.String(widgets_rotate_delay)) + !String.IsEqual(Skin.String(widgets_rotate),disabled) + [String.IsEqual(Skin.String(HomeLayout),bingie) | String.IsEqual(Skin.String(HomeLayout),win10)]">
                    <param name="widgetid" value="$PARAM[widgetid]" />
                </include>
            </control>
        </definition>
    </include>

    <include name="SetWidgetProps">
        <onfocus condition="!Skin.HasSetting(AutoShowSubmenu)">ClearProperty(submenu,Home)</onfocus>
        <onfocus>ClearProperty(ShowViewSubMenu,Home)</onfocus>
        <onfocus>SetProperty(ShowWidget,1,Home)</onfocus>
        <onfocus>SetProperty(widgetstyle,$PARAM[widgetstyle],Home)</onfocus>
        <onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[widgetid])</onfocus>
        <onfocus>SetProperty(LastFocusWidgetPos,$INFO[Container($PARAM[widgetid]).CurrentItem],Home)</onfocus>
    </include>

    <include name="WidgetRotatePause">
        <onfocus condition="System.HasAlarm(WidgetRotate$PARAM[widgetid]) + [Skin.HasSetting(widgets_rotate_pause) | $EXP[IsPlayingUnrecognizedContent]]">CancelAlarm(WidgetRotate$PARAM[widgetid],true)</onfocus>
    </include>

    <!-- Auto Trailer Function -->
    <include name="Bingie_Default_AutoPreview">
        <include content="Bingie_Trailer_Action" condition="Skin.HasSetting(BingieAutoTrailer)">
            <param name="interval" value="$INFO[Skin.String(main_auto_trailer_interval)]" />
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="groupid" value="$PARAM[groupid]" />
        </include>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">ClearProperty(KeepPlayingPreview,Home)</onfocus>
        <onunfocus condition="System.HasAlarm(preview_delay)">CancelAlarm(preview_delay,silent)</onunfocus>
        <onunfocus condition="$EXP[IsPlayingUnrecognizedContent] + String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">PlayerControl(Stop)</onunfocus>
    </include>

    <include name="Bingie_Spotlight_AutoPreview">
        <onfocus condition="String.IsEmpty(Window(Home).Property(SpotlightTrailerInterval)) + [Window.IsVisible(1103) | !String.IsEmpty(Window(Home).Property(StartupMask))]">SetProperty(SpotlightTrailerInterval,10,Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(SpotlightTrailerInterval)) + !Window.IsVisible(1103) + String.IsEmpty(Window(Home).Property(StartupMask))">SetProperty(SpotlightTrailerInterval,1,Home)</onfocus>
        <include content="Bingie_Trailer_Action" condition="Skin.HasSetting(SpotLightTrailers)">
            <param name="interval" value="$INFO[Window(Home).Property(SpotlightTrailerInterval)]" />
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="groupid" value="$PARAM[groupid]" />
        </include>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">ClearProperty(KeepPlayingPreview,Home)</onfocus>
        <onunfocus condition="System.HasAlarm(preview_delay)">CancelAlarm(preview_delay,silent)</onunfocus>
        <onunfocus condition="$EXP[IsPlayingUnrecognizedContent] + String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">PlayerControl(Stop)</onunfocus>
        <onunfocus>SetProperty(SpotlightTrailerInterval,$INFO[Skin.String(main_auto_trailer_interval)],Home)</onunfocus>
    </include>

    <include name="Bingie_PVR_AutoPreview">
        <onfocus condition="!String.IsEmpty(Window(Home).Property(AllowPVRPreview)) + ControlGroup(77777).HasFocus() + !Player.HasVideo">AlarmClock(preview_delay,PlayMedia($ESCINFO[ListItem.FileNameAndPath],1),00:03,silent)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(AllowPVRPreview))">SetProperty(PlayingPVRPreview,1,Home)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">ClearProperty(KeepPlayingPreview,Home)</onfocus>
        <onunfocus condition="!String.IsEmpty(Window(Home).Property(PlayingPVRPreview))">ClearProperty(PlayingPVRPreview,Home)</onunfocus>
        <onunfocus condition="System.HasAlarm(preview_delay)">CancelAlarm(preview_delay,silent)</onunfocus>
        <onunfocus condition="Player.HasVideo + !String.IsEmpty(Window(Home).Property(AllowPVRPreview)) + String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">PlayerControl(Stop)</onunfocus>
    </include>

    <!-- 1,2) movie trailer local/plugin with fallback 3) tvshow trailer local/youtube 4) non-library movie/tvshow trailer -->
    <include name="Bingie_Trailer_Action">
        <onfocus condition="[ControlGroup($PARAM[groupid]).HasFocus() | Control.HasFocus($PARAM[groupid])] + !Player.HasVideo + !String.IsEmpty(ListItem.Trailer) + [String.IsEqual(Skin.String(AutoYoutubeTrailer),true) | !String.Contains(ListItem.Trailer, plugin)] + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),Container($PARAM[widgetid]).ListItem.DBID)">
            AlarmClock(preview_delay,PlayMedia($ESCINFO[ListItem.Trailer],1),00:$PARAM[interval],silent)</onfocus>
        <onfocus condition="[ControlGroup($PARAM[groupid]).HasFocus() | Control.HasFocus($PARAM[groupid])] + !Player.HasVideo + String.IsEmpty(ListItem.Trailer) + String.IsEqual(ListItem.DBType,movie) + String.IsEqual(Skin.String(AutoYoutubeTrailer),true) + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),Container($PARAM[widgetid]).ListItem.DBID)">
            AlarmClock(preview_delay,RunScript(script.bingie.helper,action=playtrailer,title=$INFO[ListItem.Title]),00:$PARAM[interval],silent)</onfocus>
        <onfocus condition="[ControlGroup($PARAM[groupid]).HasFocus() | Control.HasFocus($PARAM[groupid])] + !Player.HasVideo + Skin.HasSetting(AllowTVShowsTrailer) + !String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + [String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,episode)] + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),Container($PARAM[widgetid]).ListItem.DBID)">
            AlarmClock(preview_delay,RunScript(script.bingie.helper,action=playtrailer,title=$VAR[TVShowTitle],tvshow=true,youtube=$INFO[Skin.String(AutoYoutubeTrailer)]),00:$PARAM[interval],silent)</onfocus>
        <onfocus condition="[ControlGroup($PARAM[groupid]).HasFocus() | Control.HasFocus($PARAM[groupid])] + !Player.HasVideo + Skin.HasSetting(AllowAddonTrailer) + String.IsEqual(Skin.String(AutoYoutubeTrailer),true) + String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID) + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,episode)] + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),Container($PARAM[widgetid]).ListItem.Label)">
            AlarmClock(preview_delay,RunScript(script.bingie.helper,action=playtrailer,title=$INFO[ListItem.Title]),00:$PARAM[interval],silent)</onfocus>
        <onfocus condition="!String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID)">SetProperty(LastPlayedTrailer, $INFO[Container($PARAM[widgetid]).ListItem.DBID],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Container($PARAM[widgetid]).ListItem.DBID)">SetProperty(LastPlayedTrailer, $ESCINFO[Container($PARAM[widgetid]).ListItem.Label],Home)</onfocus>
    </include>

    <include name="LibraryAutoTrailerButton">
        <control type="button">
            <visible>false</visible>
            <onfocus condition="!Player.HasVideo + !String.IsEmpty(ListItem.DBID) + [String.IsEqual(ListItem.DBType,movie) | Container.Content(movies)] + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),ListItem.DBID)">AlarmClock(preview_delay,RunScript(script.skin.helper.service,ACTION=playtrailer,MODE=windowed,YOUTUBE=$INFO[Skin.String(AutoYoutubeTrailer)]),00:$PARAM[interval],silent)</onfocus>
            <onfocus condition="!Player.HasVideo + !String.IsEmpty(ListItem.DBID) + Skin.HasSetting(AllowTVShowsTrailer) + [String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),ListItem.DBID)">AlarmClock(preview_delay,RunScript(script.bingie.helper,action=playtrailer,title=$VAR[TVShowTitle],tvshow=true,youtube=$INFO[Skin.String(AutoYoutubeTrailer)]),00:$PARAM[interval],silent)</onfocus>
            <onfocus condition="!Player.HasVideo + String.IsEmpty(ListItem.DBID) + Skin.HasSetting(AllowAddonTrailer) + String.IsEqual(Skin.String(AutoYoutubeTrailer),true) + [String.IsEqual(ListItem.DBType,movie) | Container.Content(movies) | String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEqual(Window(Home).Property(LastPlayedTrailer),ListItem.Label)">AlarmClock(preview_delay,RunScript(script.bingie.helper,action=playtrailer,title=$INFO[ListItem.Title]),00:$PARAM[interval],silent)</onfocus>
            <onfocus condition="!String.IsEmpty(ListItem.DBID)">SetProperty(LastPlayedTrailer, $INFO[ListItem.DBID],Home)</onfocus>
            <onfocus condition="String.IsEmpty(ListItem.DBID)">SetProperty(LastPlayedTrailer, $ESCINFO[ListItem.Label],Home)</onfocus>
            <onunfocus condition="System.HasAlarm(preview_delay)">CancelAlarm(preview_delay,silent)</onunfocus>
            <onunfocus condition="$EXP[IsPlayingUnrecognizedContent]">PlayerControl(Stop)</onunfocus>
        </control>
    </include>

    <!-- IMPORTANT - USE ESCINFO TO AVOID COMMAS IN INFOLABEL -->
    <include name="WidgetProperties">
        <onfocus>SetProperty(ListItem.ClearLogo, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(clearlogo)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Art.tvshow.clearlogo, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(tvshow.clearlogo)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Plot, $ESCINFO[Container($PARAM[widgetid]).ListItem.Plot],Home)</onfocus>
        <onfocus>SetProperty(ListItem.PlotOutline, $ESCINFO[Container($PARAM[widgetid]).ListItem.PlotOutline],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Title, $ESCINFO[Container($PARAM[widgetid]).ListItem.Title],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Year, $ESCINFO[Container($PARAM[widgetid]).ListItem.Year],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Genre, $ESCINFO[Container($PARAM[widgetid]).ListItem.Genre],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Label, $ESCINFO[Container($PARAM[widgetid]).ListItem.Label],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Duration, $ESCINFO[Container($PARAM[widgetid]).ListItem.Duration],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Duration.Mins, $ESCINFO[Container($PARAM[widgetid]).ListItem.Duration(mins)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Duration.M, $ESCINFO[Container($PARAM[widgetid]).ListItem.Duration(m)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Duration.Hours, $ESCINFO[Container($PARAM[widgetid]).ListItem.Duration(h)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.PercentPlayed, $INFO[Container($PARAM[widgetid]).ListItem.PercentPlayed],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Label2, $ESCINFO[Container($PARAM[widgetid]).ListItem.Label2],Home)</onfocus>
        <onfocus>SetProperty(ListItem.DBTYPE, $ESCINFO[Container($PARAM[widgetid]).ListItem.DBTYPE],Home)</onfocus>
        <onfocus>SetProperty(ListItem.TvShowTitle, $ESCINFO[Container($PARAM[widgetid]).ListItem.TvShowTitle],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Premiered, $ESCINFO[Container($PARAM[widgetid]).ListItem.Premiered],Home)</onfocus>
        <onfocus>SetProperty(ListItem.VideoResolution, $ESCINFO[Container($PARAM[widgetid]).ListItem.VideoResolution],Home)</onfocus>
        <onfocus>SetProperty(ListItem.AudioChannels, $ESCINFO[Container($PARAM[widgetid]).ListItem.AudioChannels],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Art.fanart, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(fanart)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.TotalEpisodes, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(TotalEpisodes)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.TotalSeasons, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(TotalSeasons)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.UnWatchedEpisodes, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(UnWatchedEpisodes)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.VideoCodec, $ESCINFO[Container($PARAM[widgetid]).ListItem.VideoCodec],Home)</onfocus>
        <onfocus>SetProperty(ListItem.VideoAspect, $ESCINFO[Container($PARAM[widgetid]).ListItem.VideoAspect],Home)</onfocus>
        <onfocus>SetProperty(ListItem.SubtitleLanguage, $ESCINFO[Container($PARAM[widgetid]).ListItem.SubtitleLanguage],Home)</onfocus>
        <onfocus>SetProperty(ListItem.AudioCodec, $ESCINFO[Container($PARAM[widgetid]).ListItem.AudioCodec],Home)</onfocus>
        <onfocus>SetProperty(ListItem.AudioLanguage, $ESCINFO[Container($PARAM[widgetid]).ListItem.AudioLanguage],Home)</onfocus>
        <onfocus>SetProperty(ListItem.MPAA, $ESCINFO[Container($PARAM[widgetid]).ListItem.MPAA],Home)</onfocus>
        <onfocus>SetProperty(ListItem.IsStereoScopic, $ESCINFO[Container($PARAM[widgetid]).ListItem.IsStereoScopic],Home)</onfocus>
        <onfocus>SetProperty(ListItem.TagLine, $ESCINFO[Container($PARAM[widgetid]).ListItem.TagLine],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Rating, $ESCINFO[Container($PARAM[widgetid]).ListItem.Rating],Home)</onfocus>
        <onfocus>SetProperty(ListItem.UserRating, $ESCINFO[Container($PARAM[widgetid]).ListItem.UserRating],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Season, $ESCINFO[Container($PARAM[widgetid]).ListItem.Season],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Episode, $ESCINFO[Container($PARAM[widgetid]).ListItem.Episode],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Artist, $ESCINFO[Container($PARAM[widgetid]).ListItem.Artist],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Album, $ESCINFO[Container($PARAM[widgetid]).ListItem.Album],Home)</onfocus>
        <onfocus>SetProperty(ListItem.StartTime, $ESCINFO[Container($PARAM[widgetid]).ListItem.StartTime],Home)</onfocus>
        <onfocus>SetProperty(ListItem.ChannelName, $ESCINFO[Container($PARAM[widgetid]).ListItem.ChannelName],Home)</onfocus>
        <onfocus>SetProperty(ListItem.ChannelNumberLabel, $ESCINFO[Container($PARAM[widgetid]).ListItem.ChannelNumberLabel],Home)</onfocus>
        <onfocus>SetProperty(ListItem.StartDate, $ESCINFO[Container($PARAM[widgetid]).ListItem.StartDate],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Art.Poster, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(poster)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Art.landscape, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(landscape)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Thumb, $ESCINFO[Container($PARAM[widgetid]).ListItem.Art(thumb)],Home)</onfocus>
        <onfocus>SetProperty(ListItem.Icon, $ESCINFO[Container($PARAM[widgetid]).ListItem.Icon],Home)</onfocus>
        <onfocus>SetProperty(ListItem.ChannelLogo, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(ChannelLogo)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.Plot))">SetProperty(ListItem.Plot, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(Plot)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.DBTYPE))">SetProperty(ListItem.DBTYPE, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(dbtype)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.Art.Poster))">SetProperty(ListItem.Art.Poster, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(Poster)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.Clearlogo))">SetProperty(ListItem.ClearLogo, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(logo)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.Art.fanart))">SetProperty(ListItem.Art.fanart, $ESCINFO[Container($PARAM[widgetid]).ListItem.Property(fanart)],Home)</onfocus>

        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.Clearlogo))">SetProperty(ListItem.ClearLogo, $ESCINFO[Control.GetLabel(90005)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.Art.fanart))">SetProperty(ListItem.Art.fanart, $ESCINFO[Control.GetLabel(99004)],Home)</onfocus>
        <onfocus condition="String.IsEmpty(Window(Home).Property(ListItem.Plot))">SetProperty(ListItem.Plot, $ESCINFO[Control.GetLabel(90009)],Home)</onfocus>
    </include>

    <variable name="SetWidgetContainer">
        <value condition="Control.IsVisible(1510)">SetProperty(SkinHelper.WidgetContainer,1510)</value>
        <value condition="Control.IsVisible(1520)">SetProperty(SkinHelper.WidgetContainer,1520)</value>
        <value condition="Control.IsVisible(1530)">SetProperty(SkinHelper.WidgetContainer,1530)</value>
        <value condition="Control.IsVisible(1540)">SetProperty(SkinHelper.WidgetContainer,1540)</value>
        <value condition="Control.IsVisible(1550)">SetProperty(SkinHelper.WidgetContainer,1550)</value>
        <value condition="Control.IsVisible(1560)">SetProperty(SkinHelper.WidgetContainer,1560)</value>
        <value condition="Control.IsVisible(1570)">SetProperty(SkinHelper.WidgetContainer,1570)</value>
        <value condition="Control.IsVisible(1580)">SetProperty(SkinHelper.WidgetContainer,1580)</value>
        <value condition="Control.IsVisible(2510)">SetProperty(SkinHelper.WidgetContainer,2510)</value>
        <value condition="Control.IsVisible(2520)">SetProperty(SkinHelper.WidgetContainer,2520)</value>
        <value condition="Control.IsVisible(2530)">SetProperty(SkinHelper.WidgetContainer,2530)</value>
        <value condition="Control.IsVisible(2540)">SetProperty(SkinHelper.WidgetContainer,2540)</value>
        <value condition="Control.IsVisible(2550)">SetProperty(SkinHelper.WidgetContainer,2550)</value>
        <value condition="Control.IsVisible(2560)">SetProperty(SkinHelper.WidgetContainer,2560)</value>
        <value condition="Control.IsVisible(2570)">SetProperty(SkinHelper.WidgetContainer,2570)</value>
        <value condition="Control.IsVisible(2580)">SetProperty(SkinHelper.WidgetContainer,2580)</value>
        <value condition="Control.IsVisible(3510)">SetProperty(SkinHelper.WidgetContainer,3510)</value>
        <value condition="Control.IsVisible(3520)">SetProperty(SkinHelper.WidgetContainer,3520)</value>
        <value condition="Control.IsVisible(3530)">SetProperty(SkinHelper.WidgetContainer,3530)</value>
        <value condition="Control.IsVisible(3540)">SetProperty(SkinHelper.WidgetContainer,3540)</value>
        <value condition="Control.IsVisible(3550)">SetProperty(SkinHelper.WidgetContainer,3550)</value>
        <value condition="Control.IsVisible(3560)">SetProperty(SkinHelper.WidgetContainer,3560)</value>
        <value condition="Control.IsVisible(3570)">SetProperty(SkinHelper.WidgetContainer,3570)</value>
        <value condition="Control.IsVisible(3580)">SetProperty(SkinHelper.WidgetContainer,3580)</value>
        <value condition="Control.IsVisible(4510)">SetProperty(SkinHelper.WidgetContainer,4510)</value>
        <value condition="Control.IsVisible(4520)">SetProperty(SkinHelper.WidgetContainer,4520)</value>
        <value condition="Control.IsVisible(4530)">SetProperty(SkinHelper.WidgetContainer,4530)</value>
        <value condition="Control.IsVisible(4540)">SetProperty(SkinHelper.WidgetContainer,4540)</value>
        <value condition="Control.IsVisible(4550)">SetProperty(SkinHelper.WidgetContainer,4550)</value>
        <value condition="Control.IsVisible(4560)">SetProperty(SkinHelper.WidgetContainer,4560)</value>
        <value condition="Control.IsVisible(4570)">SetProperty(SkinHelper.WidgetContainer,4570)</value>
        <value condition="Control.IsVisible(4580)">SetProperty(SkinHelper.WidgetContainer,4580)</value>
        <value condition="Control.IsVisible(5510)">SetProperty(SkinHelper.WidgetContainer,5510)</value>
        <value condition="Control.IsVisible(5520)">SetProperty(SkinHelper.WidgetContainer,5520)</value>
        <value condition="Control.IsVisible(5530)">SetProperty(SkinHelper.WidgetContainer,5530)</value>
        <value condition="Control.IsVisible(5540)">SetProperty(SkinHelper.WidgetContainer,5540)</value>
        <value condition="Control.IsVisible(5550)">SetProperty(SkinHelper.WidgetContainer,5550)</value>
        <value condition="Control.IsVisible(5560)">SetProperty(SkinHelper.WidgetContainer,5560)</value>
        <value condition="Control.IsVisible(5570)">SetProperty(SkinHelper.WidgetContainer,5570)</value>
        <value condition="Control.IsVisible(5580)">SetProperty(SkinHelper.WidgetContainer,5580)</value>
        <value condition="Control.IsVisible(6510)">SetProperty(SkinHelper.WidgetContainer,6510)</value>
        <value condition="Control.IsVisible(6520)">SetProperty(SkinHelper.WidgetContainer,6520)</value>
        <value condition="Control.IsVisible(6530)">SetProperty(SkinHelper.WidgetContainer,6530)</value>
        <value condition="Control.IsVisible(6540)">SetProperty(SkinHelper.WidgetContainer,6540)</value>
        <value condition="Control.IsVisible(6550)">SetProperty(SkinHelper.WidgetContainer,6550)</value>
        <value condition="Control.IsVisible(6560)">SetProperty(SkinHelper.WidgetContainer,6560)</value>
        <value condition="Control.IsVisible(6570)">SetProperty(SkinHelper.WidgetContainer,6570)</value>
        <value condition="Control.IsVisible(6580)">SetProperty(SkinHelper.WidgetContainer,6580)</value>
        <value condition="Control.IsVisible(6510)">SetProperty(SkinHelper.WidgetContainer,6510)</value>
        <value condition="Control.IsVisible(6520)">SetProperty(SkinHelper.WidgetContainer,6520)</value>
        <value condition="Control.IsVisible(6530)">SetProperty(SkinHelper.WidgetContainer,6530)</value>
        <value condition="Control.IsVisible(6540)">SetProperty(SkinHelper.WidgetContainer,6540)</value>
        <value condition="Control.IsVisible(6550)">SetProperty(SkinHelper.WidgetContainer,6550)</value>
        <value condition="Control.IsVisible(6560)">SetProperty(SkinHelper.WidgetContainer,6560)</value>
        <value condition="Control.IsVisible(6570)">SetProperty(SkinHelper.WidgetContainer,6570)</value>
        <value condition="Control.IsVisible(6580)">SetProperty(SkinHelper.WidgetContainer,6580)</value>
        <value condition="Control.IsVisible(8510)">SetProperty(SkinHelper.WidgetContainer,8510)</value>
        <value condition="Control.IsVisible(8520)">SetProperty(SkinHelper.WidgetContainer,8520)</value>
        <value condition="Control.IsVisible(8530)">SetProperty(SkinHelper.WidgetContainer,8530)</value>
        <value condition="Control.IsVisible(8540)">SetProperty(SkinHelper.WidgetContainer,8540)</value>
        <value condition="Control.IsVisible(8550)">SetProperty(SkinHelper.WidgetContainer,8550)</value>
        <value condition="Control.IsVisible(8560)">SetProperty(SkinHelper.WidgetContainer,8560)</value>
        <value condition="Control.IsVisible(8570)">SetProperty(SkinHelper.WidgetContainer,8570)</value>
        <value condition="Control.IsVisible(8580)">SetProperty(SkinHelper.WidgetContainer,8580)</value>
        <value>RunScript(script.skin.helper.service,ACTION=SETWIDGETCONTAINER,CONTROLS=$INFO[Container(900).ListItem.Property(id)]510-$INFO[Container(900).ListItem.Property(id)]520-$INFO[Container(900).ListItem.Property(id)]530-$INFO[Container(900).ListItem.Property(id)]540-$INFO[Container(900).ListItem.Property(id)]550-$INFO[Container(900).ListItem.Property(id)]560-$INFO[Container(900).ListItem.Property(id)]570-$INFO[Container(900).ListItem.Property(id)]580)</value>
    </variable>

    <include name="WidgetsAutoRotate">
        <onfocus condition="!System.HasAlarm(WidgetRotate1508) + Control.IsVisible(1508) + !Control.HasFocus(1508) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,spotlight) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.99))]]">AlarmClock(WidgetRotate1508,Control.Move(1508,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate1508) + ![Control.IsVisible(1508) + !Control.HasFocus(1508) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,spotlight) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.99))]]]">CancelAlarm(WidgetRotate1508,true)</onfocus>

        <onfocus condition="!System.HasAlarm(WidgetRotate1510) + Control.IsVisible(1510) + !Control.HasFocus(1510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate1510,Control.Move(1510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate1510) + ![Control.IsVisible(1510) + !Control.HasFocus(1510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate1510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate2510) + Control.IsVisible(2510) + !Control.HasFocus(2510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate2510,Control.Move(2510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate2510) + ![Control.IsVisible(2510) + !Control.HasFocus(2510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate2510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate3510) + Control.IsVisible(3510) + !Control.HasFocus(3510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate3510,Control.Move(3510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate3510) + ![Control.IsVisible(3510) + !Control.HasFocus(3510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate3510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate4510) + Control.IsVisible(4510) + !Control.HasFocus(4510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate4510,Control.Move(4510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate4510) + ![Control.IsVisible(4510) + !Control.HasFocus(4510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate4510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate5510) + Control.IsVisible(5510) + !Control.HasFocus(5510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate5510,Control.Move(5510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate5510) + ![Control.IsVisible(5510) + !Control.HasFocus(5510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate5510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate6510) + Control.IsVisible(6510) + !Control.HasFocus(6510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate6510,Control.Move(6510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate6510) + ![Control.IsVisible(6510) + !Control.HasFocus(6510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate6510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate7510) + Control.IsVisible(7510) + !Control.HasFocus(7510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate7510,Control.Move(7510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate7510) + ![Control.IsVisible(7510) + !Control.HasFocus(7510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate7510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate8510) + Control.IsVisible(8510) + !Control.HasFocus(8510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate8510,Control.Move(8510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate8510) + ![Control.IsVisible(8510) + !Control.HasFocus(8510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate8510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate9510) + Control.IsVisible(9510) + !Control.HasFocus(9510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate9510,Control.Move(9510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate9510) + ![Control.IsVisible(9510) + !Control.HasFocus(9510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate9510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate10510) + Control.IsVisible(10510) + !Control.HasFocus(10510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate10510,Control.Move(10510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate10510) + ![Control.IsVisible(10510) + !Control.HasFocus(10510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate10510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate11510) + Control.IsVisible(11510) + !Control.HasFocus(11510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate11510,Control.Move(11510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate11510) + ![Control.IsVisible(11510) + !Control.HasFocus(11510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate11510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate12510) + Control.IsVisible(12510) + !Control.HasFocus(12510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate12510,Control.Move(12510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate12510) + ![Control.IsVisible(12510) + !Control.HasFocus(12510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate12510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate13510) + Control.IsVisible(13510) + !Control.HasFocus(13510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate13510,Control.Move(13510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate13510) + ![Control.IsVisible(13510) + !Control.HasFocus(13510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate13510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate14510) + Control.IsVisible(14510) + !Control.HasFocus(14510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate14510,Control.Move(14510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate14510) + ![Control.IsVisible(14510) + !Control.HasFocus(14510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate14510,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate15510) + Control.IsVisible(15510) + !Control.HasFocus(15510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]">AlarmClock(WidgetRotate15510,Control.Move(15510,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate15510) + ![Control.IsVisible(15510) + !Control.HasFocus(15510) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,510) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate))]]]">CancelAlarm(WidgetRotate15510,true)</onfocus>

        <onfocus condition="!System.HasAlarm(WidgetRotate1520) + Control.IsVisible(1520) + !Control.HasFocus(1520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate1520,Control.Move(1520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate1520) + ![Control.IsVisible(1520) + !Control.HasFocus(1520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate1520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate2520) + Control.IsVisible(2520) + !Control.HasFocus(2520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate2520,Control.Move(2520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate2520) + ![Control.IsVisible(2520) + !Control.HasFocus(2520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate2520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate3520) + Control.IsVisible(3520) + !Control.HasFocus(3520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate3520,Control.Move(3520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate3520) + ![Control.IsVisible(3520) + !Control.HasFocus(3520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate3520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate4520) + Control.IsVisible(4520) + !Control.HasFocus(4520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate4520,Control.Move(4520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate4520) + ![Control.IsVisible(4520) + !Control.HasFocus(4520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate4520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate5520) + Control.IsVisible(5520) + !Control.HasFocus(5520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate5520,Control.Move(5520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate5520) + ![Control.IsVisible(5520) + !Control.HasFocus(5520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate5520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate6520) + Control.IsVisible(6520) + !Control.HasFocus(6520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate6520,Control.Move(6520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate6520) + ![Control.IsVisible(6520) + !Control.HasFocus(6520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate6520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate7520) + Control.IsVisible(7520) + !Control.HasFocus(7520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate7520,Control.Move(7520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate7520) + ![Control.IsVisible(7520) + !Control.HasFocus(7520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate7520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate8520) + Control.IsVisible(8520) + !Control.HasFocus(8520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate8520,Control.Move(8520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate8520) + ![Control.IsVisible(8520) + !Control.HasFocus(8520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate8520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate9520) + Control.IsVisible(9520) + !Control.HasFocus(9520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate9520,Control.Move(9520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate9520) + ![Control.IsVisible(9520) + !Control.HasFocus(9520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate9520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate10520) + Control.IsVisible(10520) + !Control.HasFocus(10520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate10520,Control.Move(10520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate10520) + ![Control.IsVisible(10520) + !Control.HasFocus(10520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate10520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate11520) + Control.IsVisible(11520) + !Control.HasFocus(11520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate11520,Control.Move(11520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate11520) + ![Control.IsVisible(11520) + !Control.HasFocus(11520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate11520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate12520) + Control.IsVisible(12520) + !Control.HasFocus(12520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate12520,Control.Move(12520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate12520) + ![Control.IsVisible(12520) + !Control.HasFocus(12520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate12520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate13520) + Control.IsVisible(13520) + !Control.HasFocus(13520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate13520,Control.Move(13520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate13520) + ![Control.IsVisible(13520) + !Control.HasFocus(13520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate13520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate14520) + Control.IsVisible(14520) + !Control.HasFocus(14520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate14520,Control.Move(14520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate14520) + ![Control.IsVisible(14520) + !Control.HasFocus(14520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate14520,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate15520) + Control.IsVisible(15520) + !Control.HasFocus(15520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]">AlarmClock(WidgetRotate15520,Control.Move(15520,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate15520) + ![Control.IsVisible(15520) + !Control.HasFocus(15520) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,520) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.1))]]]">CancelAlarm(WidgetRotate15520,true)</onfocus>

        <onfocus condition="!System.HasAlarm(WidgetRotate1530) + Control.IsVisible(1530) + !Control.HasFocus(1530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate1530,Control.Move(1530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate1530) + ![Control.IsVisible(1530) + !Control.HasFocus(1530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate1530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate2530) + Control.IsVisible(2530) + !Control.HasFocus(2530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate2530,Control.Move(2530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate2530) + ![Control.IsVisible(2530) + !Control.HasFocus(2530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate2530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate3530) + Control.IsVisible(3530) + !Control.HasFocus(3530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate3530,Control.Move(3530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate3530) + ![Control.IsVisible(3530) + !Control.HasFocus(3530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate3530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate4530) + Control.IsVisible(4530) + !Control.HasFocus(4530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate4530,Control.Move(4530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate4530) + ![Control.IsVisible(4530) + !Control.HasFocus(4530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate4530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate5530) + Control.IsVisible(5530) + !Control.HasFocus(5530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate5530,Control.Move(5530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate5530) + ![Control.IsVisible(5530) + !Control.HasFocus(5530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate5530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate6530) + Control.IsVisible(6530) + !Control.HasFocus(6530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate6530,Control.Move(6530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate6530) + ![Control.IsVisible(6530) + !Control.HasFocus(6530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate6530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate7530) + Control.IsVisible(7530) + !Control.HasFocus(7530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate7530,Control.Move(7530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate7530) + ![Control.IsVisible(7530) + !Control.HasFocus(7530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate7530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate8530) + Control.IsVisible(8530) + !Control.HasFocus(8530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate8530,Control.Move(8530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate8530) + ![Control.IsVisible(8530) + !Control.HasFocus(8530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate8530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate9530) + Control.IsVisible(9530) + !Control.HasFocus(9530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate9530,Control.Move(9530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate9530) + ![Control.IsVisible(9530) + !Control.HasFocus(9530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate9530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate10530) + Control.IsVisible(10530) + !Control.HasFocus(10530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate10530,Control.Move(10530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate10530) + ![Control.IsVisible(10530) + !Control.HasFocus(10530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate10530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate11530) + Control.IsVisible(11530) + !Control.HasFocus(11530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate11530,Control.Move(11530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate11530) + ![Control.IsVisible(11530) + !Control.HasFocus(11530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate11530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate12530) + Control.IsVisible(12530) + !Control.HasFocus(12530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate12530,Control.Move(12530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate12530) + ![Control.IsVisible(12530) + !Control.HasFocus(12530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate12530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate13530) + Control.IsVisible(13530) + !Control.HasFocus(13530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate13530,Control.Move(13530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate13530) + ![Control.IsVisible(13530) + !Control.HasFocus(13530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate13530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate14530) + Control.IsVisible(14530) + !Control.HasFocus(14530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate14530,Control.Move(14530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate14530) + ![Control.IsVisible(14530) + !Control.HasFocus(14530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate14530,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate15530) + Control.IsVisible(15530) + !Control.HasFocus(15530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]">AlarmClock(WidgetRotate15530,Control.Move(15530,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate15530) + ![Control.IsVisible(15530) + !Control.HasFocus(15530) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,530) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.2))]]]">CancelAlarm(WidgetRotate15530,true)</onfocus>

        <onfocus condition="!System.HasAlarm(WidgetRotate1540) + Control.IsVisible(1540) + !Control.HasFocus(1540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate1540,Control.Move(1540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate1540) + ![Control.IsVisible(1540) + !Control.HasFocus(1540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate1540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate2540) + Control.IsVisible(2540) + !Control.HasFocus(2540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate2540,Control.Move(2540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate2540) + ![Control.IsVisible(2540) + !Control.HasFocus(2540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate2540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate3540) + Control.IsVisible(3540) + !Control.HasFocus(3540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate3540,Control.Move(3540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate3540) + ![Control.IsVisible(3540) + !Control.HasFocus(3540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate3540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate4540) + Control.IsVisible(4540) + !Control.HasFocus(4540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate4540,Control.Move(4540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate4540) + ![Control.IsVisible(4540) + !Control.HasFocus(4540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate4540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate5540) + Control.IsVisible(5540) + !Control.HasFocus(5540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate5540,Control.Move(5540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate5540) + ![Control.IsVisible(5540) + !Control.HasFocus(5540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate5540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate6540) + Control.IsVisible(6540) + !Control.HasFocus(6540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate6540,Control.Move(6540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate6540) + ![Control.IsVisible(6540) + !Control.HasFocus(6540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate6540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate7540) + Control.IsVisible(7540) + !Control.HasFocus(7540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate7540,Control.Move(7540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate7540) + ![Control.IsVisible(7540) + !Control.HasFocus(7540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate7540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate8540) + Control.IsVisible(8540) + !Control.HasFocus(8540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate8540,Control.Move(8540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate8540) + ![Control.IsVisible(8540) + !Control.HasFocus(8540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate8540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate9540) + Control.IsVisible(9540) + !Control.HasFocus(9540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate9540,Control.Move(9540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate9540) + ![Control.IsVisible(9540) + !Control.HasFocus(9540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate9540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate10540) + Control.IsVisible(10540) + !Control.HasFocus(10540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate10540,Control.Move(10540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate10540) + ![Control.IsVisible(10540) + !Control.HasFocus(10540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate10540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate11540) + Control.IsVisible(11540) + !Control.HasFocus(11540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate11540,Control.Move(11540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate11540) + ![Control.IsVisible(11540) + !Control.HasFocus(11540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate11540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate12540) + Control.IsVisible(12540) + !Control.HasFocus(12540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate12540,Control.Move(12540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate12540) + ![Control.IsVisible(12540) + !Control.HasFocus(12540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate12540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate13540) + Control.IsVisible(13540) + !Control.HasFocus(13540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate13540,Control.Move(13540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate13540) + ![Control.IsVisible(13540) + !Control.HasFocus(13540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate13540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate14540) + Control.IsVisible(14540) + !Control.HasFocus(14540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate14540,Control.Move(14540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate14540) + ![Control.IsVisible(14540) + !Control.HasFocus(14540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate14540,true)</onfocus>
        <onfocus condition="!System.HasAlarm(WidgetRotate15540) + Control.IsVisible(15540) + !Control.HasFocus(15540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]">AlarmClock(WidgetRotate15540,Control.Move(15540,1),00:$PARAM[interval],silent,loop)</onfocus>
        <onfocus condition="System.HasAlarm(WidgetRotate15540) + ![Control.IsVisible(15540) + !Control.HasFocus(15540) + [Skin.String(widgets_rotate,all) | Skin.String(widgets_rotate,540) | [Skin.String(widgets_rotate,override) + !String.IsEmpty(Container(900).ListItem.Property(widgetAutoRotate.3))]]]">CancelAlarm(WidgetRotate15540,true)</onfocus>
    </include>

    <include name="WidgetsAutoRotateUnload">
        <onunload condition="System.HasAlarm(WidgetRotate1508)">CancelAlarm(WidgetRotate1508,true)</onunload>

        <onunload condition="System.HasAlarm(WidgetRotate510)">CancelAlarm(WidgetRotate510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate1510)">CancelAlarm(WidgetRotate1510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate2510)">CancelAlarm(WidgetRotate2510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate3510)">CancelAlarm(WidgetRotate3510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate4510)">CancelAlarm(WidgetRotate4510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate5510)">CancelAlarm(WidgetRotate5510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate6510)">CancelAlarm(WidgetRotate6510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate7510)">CancelAlarm(WidgetRotate7510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate8510)">CancelAlarm(WidgetRotate8510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate9510)">CancelAlarm(WidgetRotate9510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate10510)">CancelAlarm(WidgetRotate10510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate11510)">CancelAlarm(WidgetRotate11510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate12510)">CancelAlarm(WidgetRotate12510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate13510)">CancelAlarm(WidgetRotate13510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate14510)">CancelAlarm(WidgetRotate14510,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate15510)">CancelAlarm(WidgetRotate15510,true)</onunload>

        <onunload condition="System.HasAlarm(WidgetRotate520)">CancelAlarm(WidgetRotate520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate1520)">CancelAlarm(WidgetRotate1520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate2520)">CancelAlarm(WidgetRotate2520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate3520)">CancelAlarm(WidgetRotate3520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate4520)">CancelAlarm(WidgetRotate4520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate5520)">CancelAlarm(WidgetRotate5520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate6520)">CancelAlarm(WidgetRotate6520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate7520)">CancelAlarm(WidgetRotate7520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate8520)">CancelAlarm(WidgetRotate8520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate9520)">CancelAlarm(WidgetRotate9520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate10520)">CancelAlarm(WidgetRotate10520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate11520)">CancelAlarm(WidgetRotate11520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate12520)">CancelAlarm(WidgetRotate12520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate13520)">CancelAlarm(WidgetRotate13520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate14520)">CancelAlarm(WidgetRotate14520,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate15520)">CancelAlarm(WidgetRotate15520,true)</onunload>

        <onunload condition="System.HasAlarm(WidgetRotate530)">CancelAlarm(WidgetRotate530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate1530)">CancelAlarm(WidgetRotate1530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate2530)">CancelAlarm(WidgetRotate2530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate3530)">CancelAlarm(WidgetRotate3530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate4530)">CancelAlarm(WidgetRotate4530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate5530)">CancelAlarm(WidgetRotate5530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate6530)">CancelAlarm(WidgetRotate6530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate7530)">CancelAlarm(WidgetRotate7530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate8530)">CancelAlarm(WidgetRotate8530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate9530)">CancelAlarm(WidgetRotate9530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate10530)">CancelAlarm(WidgetRotate10530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate11530)">CancelAlarm(WidgetRotate11530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate12530)">CancelAlarm(WidgetRotate12530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate13530)">CancelAlarm(WidgetRotate13530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate14530)">CancelAlarm(WidgetRotate14530,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate15530)">CancelAlarm(WidgetRotate15530,true)</onunload>

        <onunload condition="System.HasAlarm(WidgetRotate540)">CancelAlarm(WidgetRotate540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate1540)">CancelAlarm(WidgetRotate1540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate2540)">CancelAlarm(WidgetRotate2540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate3540)">CancelAlarm(WidgetRotate3540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate4540)">CancelAlarm(WidgetRotate4540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate5540)">CancelAlarm(WidgetRotate5540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate6540)">CancelAlarm(WidgetRotate6540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate7540)">CancelAlarm(WidgetRotate7540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate8540)">CancelAlarm(WidgetRotate8540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate9540)">CancelAlarm(WidgetRotate9540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate10540)">CancelAlarm(WidgetRotate10540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate11540)">CancelAlarm(WidgetRotate11540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate12540)">CancelAlarm(WidgetRotate12540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate13540)">CancelAlarm(WidgetRotate13540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate14540)">CancelAlarm(WidgetRotate14540,true)</onunload>
        <onunload condition="System.HasAlarm(WidgetRotate15540)">CancelAlarm(WidgetRotate15540,true)</onunload>
    </include>

    <include name="WidgetPlaybackFocus">
        <onload condition="!String.IsEmpty(Window(Home).Property(LastFocusWidget))">RunScript(script.skin.helper.service,action=setfocus,control=$INFO[Window(Home).Property(LastFocusWidget)],relativeposition=$INFO[Window(Home).Property(LastFocusWidgetPos)],fallback=300)</onload>
        <onunload condition="Control.HasFocus(77777) | ControlGroup(77777).HasFocus()">SetProperty(LastFocusWidget,$INFO[Window(Home).Property(SkinHelper.WidgetContainer)],Home)</onunload>
        <onunload condition="!Control.HasFocus(77777) + !ControlGroup(77777).HasFocus()">ClearProperty(LastFocusWidget,Home)</onunload>
    </include>
</includes>
