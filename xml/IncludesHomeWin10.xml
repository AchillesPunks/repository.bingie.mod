<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>
    
    <include name="HomeWin10">
        <!-- Header -->
		<include>Header</include>
		<control type="group" id="9000">
            <!-- all widgets -->
            <control type="grouplist" id="77777">
                <posx>30</posx>
                <height>930</height>
                <right>0</right>
                <bottom>0</bottom>
                <ondown>77777</ondown>
                <onleft condition="!Skin.HasSetting(EnhancedHome_Circular)">SetFocus(900)</onleft>
                <onleft condition="Skin.HasSetting(EnhancedHome_Circular)">77777</onleft>
                <onup>5555</onup>
                <onback>900</onback>
                <orientation>horizontal</orientation>
                <pagecontrol>317</pagecontrol>
                <itemgap>8</itemgap>
                <onfocus>ClearProperty(ShowViewSubMenu)</onfocus>
                <include>animation_window_open_close</include>
                <animation effect="slide" end="420" time="300" delay="0" tween="cubic" easing="inout" condition="Control.HasFocus(900) | String.IsEqual(Window(Home).Property(ShowViewSubMenu),show)">Conditional</animation>
                <animation effect="slide" end="0,30" time="300" delay="0" tween="cubic" easing="inout" condition="Window.IsActive(notification) | Window.IsActive(extendedprogressdialog) | Control.IsVisible(88888)">Conditional</animation>
                
                <!-- submenu -->
                <include condition="!Skin.HasSetting(Win10SubmenuRight)">HomeWin10Submenu</include>
                
                <!--white space -->
                <control type="group" id="4447">
                    <width>25</width>
                    <visible>Integer.IsGreater(Container(4445).NumItems,0)</visible>
                </control>
                
                <!-- widgets -->
                <include>skinshortcuts-template-Widgets</include>
                
                <!-- submenu -->
                <include condition="Skin.HasSetting(Win10SubmenuRight)">HomeWin10Submenu</include>
                
                <!-- hidden button to focus when there are no widgets or submenus -->
                <control type="button" id="3331">
                    <texturefocus />
                    <texturenofocus />
                    <visible>String.IsEmpty(Container(900).ListItem.Property(widget)) + !Integer.IsGreater(Container(4445).NumItems,0)</visible>
                </control>
                
            </control>
            
            <!--horizontal Scrollbar-->
            <control type="group">
                <control type="scrollbar" id="317">
                    <left>40</left>
                    <bottom>0</bottom>
                    <width>1840</width>
                    <height>15</height>
                    <onup>52</onup>
                    <onleft>317</onleft>
                    <onright>317</onright>
                    <orientation>horizontal</orientation>
                    <animation effect="slide" end="0,20" time="300" delay="0" tween="cubic" easing="inout" condition="Window.IsActive(notification) | Window.IsActive(extendedprogressdialog) | Control.IsVisible(88888)">Conditional</animation>
                         <animation effect="fade" start="0" end="100" time="400" condition="Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)">Conditional</animation>
                    <animation effect="fade" start="100" end="0" time="400" condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
                </control>
            </control>
            
        </control>
		<!--Side Menu-->
        <include>SideBladeMainMenu</include>
    </include>
    
    <include name="HomeWin10Submenu">
    
        <control type="group" id="4443">
            <width>1</width>
            <height>1</height>
            <animation effect="slide" end="10,-50" time="0" condition="true">Conditional</animation>
            <visible>Integer.IsGreater(Container(4445).NumItems,0)</visible>
            <control type="label">
                <height>40</height>
                <width>440</width>
                <font>Reg28</font>
                <align>left</align>
                <aligny>top</aligny>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <label>$VAR[submenuheader]</label>
            </control>
        </control>
        <control type="panel" id="4444">
            <viewtype label="31436">icons</viewtype>
            <width>440</width>
            <height>880</height>
            <onfocus>ClearProperty(ShowViewSubMenu)</onfocus>
            <orientation>vertical</orientation>
            <preloaditems>4</preloaditems>
            <scrolltime tween="quadratic" easing="out">300</scrolltime>
            <visible>Integer.IsGreater(Container(4445).NumItems,0)</visible>
            <itemlayout height="220" width="220">
                <control type="group">
                    <width>220</width>
                    <height>220</height>
                    <include>SquarePosterPanelLayout</include>
                    <control type="group">
                        <description>label overlay</description>
                        <include>SquarePosterTagOverlay</include>
                        <visible>![Skin.HasSetting(NoTitleOnHomeMenuTiles) + !String.IsEmpty(ListItem.Property(defaultID))] + !String.IsEqual(ListItem.Property(disableLabel), disable)</visible>
                    </control>
                </control>
            </itemlayout>
            <focusedlayout height="220" width="220">
              <control type="group">
                    <width>220</width>
                    <height>220</height>
                    <include>SquarePosterPanelLayoutFocus</include>
                    <control type="group">
                        <description>label overlay</description>
                        <include>SquarePosterTagOverlay</include>
                        <visible>![Skin.HasSetting(NoTitleOnHomeMenuTiles) + !String.IsEmpty(ListItem.Property(defaultID))] + !String.IsEqual(ListItem.Property(disableLabel), disable)</visible>
                    </control>
                </control>
                <control type="button">
                <visible>false</visible>
                <onfocus>ClearProperty(ShowViewSubMenu)</onfocus>
            </control>
            </focusedlayout>
            <content>
                <include>skinshortcuts-submenu</include>
            </content>
        </control>
    </include>
    
    <include name="SideBladeMainMenu">
        <control type="group" id="9001">
            <posx>-660</posx>
			<posy>0</posy>
			<visible>!Window.IsActive(virtualkeyboard)</visible>
			<animation type="Conditional" condition="$EXP[IsMainMenuOpened]">
                <effect type="slide" start="0" end="660" time="300" delay="0" tween="cubic" easing="inout" />
            </animation>
			<!--Panel-->
            <control type="image">
                <posy>-5%</posy>
                <posx>-20</posx>
                <width>425</width>
                <height>110%</height>
                <texture>colors/color_white.png</texture>
                <colordiffuse>$INFO[Skin.String(MainMenuPanelColor)]</colordiffuse>
                <aspectratio>stretch</aspectratio>
            </control>

            <!-- menu button -->
            <control type="button" id="1">
                <label/>
                <posx>40</posx>
                <top>20</top>
                <include>animation_fade_visible_hidden</include>
                <width>60</width>
                <height>60</height>
                <font/>
                <onright>2</onright>
                <ondown>900</ondown>
                <onleft>77777</onleft>
                <onback>77777</onback>
                <onup>900</onup>
                <texturefocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">common/menu.png</texturefocus>
                <texturenofocus colordiffuse="$INFO[Skin.String(MainMenuTextColor)]">common/menu.png</texturenofocus>
                <onclick>ClearProperty(ShowViewSubMenu,Home)</onclick>
                <onclick>SetFocus(9000)</onclick>
                <visible>!Window.IsActive(notification) + !Window.IsActive(extendedprogressdialog) + !Control.IsVisible(88888)</visible>
            </control>
            
            <control type="button" id="2">
				<description>powerbutton</description>
				<posx>115</posx>
				<top>25</top>
				<width>50</width>
				<height>50</height>
				<onup>900</onup>
                <ondown>900</ondown>
				<onleft>1</onleft>
                <onright>77777</onright>
                <onback>77777</onback>
				<texturefocus colordiffuse="$INFO[Skin.String(HomeViewDetailsFocusColor)]">common/shutdown2.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(MainMenuTextColor)]">common/shutdown2.png</texturenofocus>
				<onclick>ActivateWindow(111)</onclick>
				<visible>!Skin.HasSetting(DisablePowerMenu)</visible>
                <visible allowhiddenfocus="true">!Skin.HasSetting(HidePowerMenu)</visible>
				<include>animation_fade_visible_hidden</include>		
			</control>

            <!--main menu 300-->
			<control type="list" id="900">
				<posx>15</posx>
				<posy>15%</posy>
				<width>370</width>
				<height>85%</height>
				<itemgap>0</itemgap>
				<onleft>1</onleft>
                <onright condition="Integer.IsGreater(Container(4445).NumItems,0)">4444</onright>
				<onright condition="!Integer.IsGreater(Container(4445).NumItems,0)">77777</onright>
				<onright condition="!Integer.IsGreater(Container(4445).NumItems,0)">ClearProperty(ShowViewSubMenu,Home)</onright>
                <onback>ClearProperty(ShowViewSubMenu,Home)</onback>
				<onback>77777</onback>
				<onup>900</onup>
				<ondown>900</ondown>
				<orientation>vertical</orientation>
				<itemlayout height="70" width="370">
					<control type="label">
						<width>100%</width>
						<left>25</left>
						<align>left</align>
						<font>Reg24</font>
						<textcolor>$INFO[Skin.String(MainMenuTextColor)]</textcolor>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
				<focusedlayout height="70" width="370">
					<control type="button">
						<include>SideBladeMenuButton</include>
					</control>
                    <control type="image">
                        <texture>colors/color_white.png</texture>
                        <colordiffuse>$INFO[Skin.String(HomeViewDetailsFocusColor)]</colordiffuse>
                    </control>
					<control type="label">
						<width>100%</width>
						<left>25</left>
						<align>left</align>
						<font>Reg24</font>
						<textcolor>$INFO[Skin.String(MainMenuFocusTextColor)]</textcolor>
						<label>$INFO[ListItem.Label]</label>
					</control>
                    <include>HiddenHomeMenuButton</include>
				</focusedlayout>
				<include condition="Window.IsActive(Home)">MainMenuContent</include>
			</control>
        </control>
    </include>
    
    <include name="HomeWin10SpotlightPanel">
        <control type="group" id="$PARAM[widgetid]6">
            <width>1</width>
            <visible>Control.IsVisible($PARAM[widgetid])</visible>
            <control type="group">
                <height>440</height>
                <width>659</width>
                <left>17</left>
                <animation effect="slide" end="0,440" time="0" condition="Skin.String(CompareTxtBottom, $PARAM[position])">Conditional</animation>
                <control type="image">
                    <texture background="true">diffuse/wide.png</texture>
                    <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                    <include>thumbsborder_unfocused</include>
                </control>
                <control type="image">
                    <width>100%</width>
                    <height>100%</height>
                    <bordersize>8</bordersize>
                    <texture background="true" diffuse="diffuse/wide.png">$INFO[Container($PARAM[widgetid]).ListItem.Art(fanart)]</texture>
                    <aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
                    <visible>!String.IsEmpty(Container($PARAM[widgetid]).ListItem.Art(fanart))</visible>
                </control>
                <control type="image">
                    <width>100%</width>
                    <height>100%</height>
                    <bordersize>8</bordersize>
                    <texture background="true" diffuse="diffuse/wide.png">$INFO[Container($PARAM[widgetid]).ListItem.Property(fanart)]</texture>
                    <aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
                    <visible>!String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(fanart)) + String.IsEmpty(Container($PARAM[widgetid]).ListItem.Art(fanart))</visible>
                </control>
                <control type="image">
                    <width>100%</width>
                    <height>100%</height>
                    <bordersize>8</bordersize>
                    <texture background="true" diffuse="diffuse/wide.png">$INFO[Container($PARAM[widgetid]).ListItem.Icon]</texture>
                    <aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
                    <visible>String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(fanart)) + String.IsEmpty(Container($PARAM[widgetid]).ListItem.Art(fanart))</visible>
                </control>
                <control type="image">
                    <bottom>0</bottom>
                    <height>185</height>
                    <bordersize>8</bordersize>
                    <colordiffuse>$INFO[Skin.String(TagOverlaysPanelColor)]</colordiffuse>
                    <texture border="5">colors/color_white.png</texture>
                </control>
                <control type="label">
                    <bottom>121</bottom>
                    <posx>20</posx>
                    <width>95%</width>
                    <height>45</height>
                    <align>left</align>
                    <label>[B][COLOR=$INFO[Skin.String(ViewDetailsFocusColor)]]$VAR[widgetinfolabel-$PARAM[widgetid]][/COLOR][CR]$VAR[widgetsubtitle-$PARAM[widgetid]][/B]</label>
                    <textcolor>$INFO[Skin.String(TagOverlaysTextColor)]</textcolor>
                    <font>Reg24</font>
                </control>
                <control type="textbox">
                    <bottom>12</bottom>
                    <posx>20</posx>
                    <width>95%</width>
                    <height>97</height>
                    <align>left</align>
                    <label>$INFO[Container($PARAM[widgetid]).ListItem.Plot]</label>
                    <textcolor>$INFO[Skin.String(TagOverlaysTextColor)]</textcolor>
                    <font>Reg24</font>
                    <autoscroll delay="5000" time="3000" repeat="10000">Control.HasFocus($PARAM[widgetid])</autoscroll>
                    <visible>!String.IsEmpty(Container($PARAM[widgetid]).ListItem.Plot)</visible>
                </control>
                <control type="textbox">
                    <bottom>12</bottom>
                    <posx>20</posx>
                    <width>95%</width>
                    <height>97</height>
                    <align>left</align>
                    <label>$INFO[Container($PARAM[widgetid]).ListItem.Property(Plot)]</label>
                    <textcolor>$INFO[Skin.String(TagOverlaysTextColor)]</textcolor>
                    <font>Reg24</font>
                    <autoscroll delay="5000" time="3000" repeat="10000">Control.HasFocus($PARAM[widgetid])</autoscroll>
                    <visible>String.IsEmpty(Container($PARAM[widgetid]).ListItem.Plot)</visible>
                </control>
            </control>
        </control>
    </include>
    <include name="HomeWin10SpotlightPanelLarge">
        <control type="group" id="$PARAM[widgetid]60">
            <height>880</height>
            <width>687</width>
            <animation effect="slide" end="-25" time="0" condition="true">Conditional</animation>
            <visible>Control.IsVisible($PARAM[widgetid])</visible>
            <control type="image">
                <texture background="true">diffuse/wide.png</texture>
                <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                <include>thumbsborder_unfocused</include>
            </control>
            <control type="image">
                <texture background="true">diffuse/wide.png</texture>
                <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                <include>thumbsborder_unfocused</include>
            </control>
            <control type="image">
                <height>385</height>
                <width>100%</width>
                <bordersize>15</bordersize>
                <texture background="true" diffuse="diffuse/wide.png">$INFO[Container($PARAM[widgetid]).ListItem.Art(fanart)]</texture>
                <aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
                <visible>!String.IsEmpty(Container($PARAM[widgetid]).ListItem.Art(fanart))</visible>
            </control>
            <control type="image">
                <width>100%</width>
                <height>395</height>
                <bordersize>15</bordersize>
                <texture background="true" diffuse="diffuse/wide.png">$INFO[Container($PARAM[widgetid]).ListItem.Property(fanart)]</texture>
                <aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
                <visible>!String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(fanart)) + String.IsEmpty(Container($PARAM[widgetid]).ListItem.Art(fanart))</visible>
            </control>
            <control type="image">
                <width>100%</width>
                <height>395</height>
                <bordersize>15</bordersize>
                <texture background="true" diffuse="diffuse/wide.png">$INFO[Container($PARAM[widgetid]).ListItem.Icon]</texture>
                <aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
                <visible>String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(fanart)) + String.IsEmpty(Container($PARAM[widgetid]).ListItem.Art(fanart))</visible>
            </control>
            <control type="textbox">
                <top>410</top>
                <left>15</left>
                <right>15</right>
                <height>60</height>
                <align>left</align>
                <label>[B][COLOR=$INFO[Skin.String(ViewDetailsFocusColor)]]$VAR[widgetinfolabel-$PARAM[widgetid]][/COLOR][CR]$VAR[widgetsubtitle-$PARAM[widgetid]][/B]</label>
                <textcolor>$INFO[Skin.String(TagOverlaysTextColor)]</textcolor>
                <font>Reg26</font>
            </control>
            <control type="textbox">
                <bottom>15</bottom>
                <top>490</top>
                <left>15</left>
                <right>15</right>
                <align>left</align>
                <label>$INFO[Container($PARAM[widgetid]).ListItem.Plot]</label>
                <textcolor>$INFO[Skin.String(TagOverlaysTextColor)]</textcolor>
                <font>Reg24</font>
                <autoscroll delay="5000" time="3000" repeat="10000">Control.HasFocus($PARAM[widgetid])</autoscroll>
                <visible>!String.IsEmpty(Container($PARAM[widgetid]).ListItem.Plot)</visible>
            </control>
            <control type="textbox">
                <bottom>15</bottom>
                <top>490</top>
                <left>15</left>
                <right>15</right>
                <align>left</align>
                <label>$INFO[Container($PARAM[widgetid]).ListItem.Property(Plot)]</label>
                <textcolor>$INFO[Skin.String(TagOverlaysTextColor)]</textcolor>
                <font>Reg24</font>
                <autoscroll delay="5000" time="3000" repeat="10000">Control.HasFocus($PARAM[widgetid])</autoscroll>
                <visible>String.IsEmpty(Container($PARAM[widgetid]).ListItem.Plot)</visible>
            </control>
        </control>
    </include>
    
    <!-- supported widget styles -->
    <include name="win10_widget_layout_square">
        <itemlayout height="220" width="220">
            <include>SquarePosterPanelLayout</include>
            <control type="group">
                <description>widget label overlay</description>
                <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SquarePosterTagOverlay</include>
                <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">SquarePosterTagOverlayVisibility</include>
                <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                    <param name="prefix" value="SquarePoster" />
                </include>
            </control>
        </itemlayout>
        <focusedlayout height="220" width="220">
            <include>SquarePosterPanelLayoutFocus</include>
            <control type="group">
                <description>widget label overlay</description>
                <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SquarePosterTagOverlay</include>
                <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">SquarePosterTagOverlayVisibility</include>
                <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                    <param name="prefix" value="SquarePoster" />
                </include>
            </control>
            <control type="button">
                <visible>false</visible>
                <onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[widgetid])</onfocus>
                <onfocus>ClearProperty(ShowViewSubMenu)</onfocus>
            </control>
        </focusedlayout>
    </include>
    <include name="win10_widget_layout_small_poster">
        <itemlayout height="220" width="165">
            <include>SmallPosterPanelLayout</include>
            <control type="group">
                <description>widget label overlay</description>
                <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SmallPosterTagOverlay</include>
                <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
                <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                    <param name="prefix" value="Poster" />
                </include>
            </control>
        </itemlayout>
        <focusedlayout height="220" width="165">
            <include>SmallPosterPanelLayoutFocus</include>
            <control type="group">
                <description>widget label overlay</description>
                <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SmallPosterTagOverlay</include>
                <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
                <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                    <param name="prefix" value="Poster" />
                </include>
            </control>
            <control type="button">
                <visible>false</visible>
                <onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[widgetid])</onfocus>
                <onfocus>ClearProperty(ShowViewSubMenu)</onfocus>
            </control>
        </focusedlayout>
    </include>
    <include name="win10_widget_layout_landscape">
        <itemlayout height="220" width="330">
            <include>ThumbsViewLayout</include>
            <control type="group">
                <description>widget label overlay</description>
                <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                    <param name="prefix" value="Landscape" />
                </include>
            </control>
        </itemlayout>
        <focusedlayout height="220" width="330">
            <include>ThumbsViewLayoutFocus</include>
            <control type="group">
                <description>widget label overlay</description>
                <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                    <param name="prefix" value="Landscape" />
                </include>
            </control>
            <control type="button">
                <visible>false</visible>
                <onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[widgetid])</onfocus>
                <onfocus>ClearProperty(ShowViewSubMenu)</onfocus>
            </control>
        </focusedlayout>
    </include>
    <include name="win10_widget_layout_banner">
        <itemlayout height="146" width="660">
            <control type="image">
                <texture border="5">diffuse/banner.png</texture>
                <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                <include>thumbsborder_unfocused</include>
            </control>
            <include>BannerLayout</include>
        </itemlayout>
        <focusedlayout height="146" width="660">
            <control type="image">
                <texture border="5">diffuse/banner.png</texture>
                <colordiffuse>$INFO[Skin.String(HomeViewDetailsBorderFocusColor)]</colordiffuse>
                <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                <include>thumbsborder_focused</include>
            </control>
            <include>BannerLayout</include>
            <control type="button">
                <visible>false</visible>
                <onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[widgetid])</onfocus>
                <onfocus>ClearProperty(ShowViewSubMenu)</onfocus>
            </control>
        </focusedlayout>
    </include>
    
    <!-- unsupported widget styles: use substitute -->
    <include name="win10_widget_layout_default">
        <include content="win10_widget_layout_square">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
        </include>
    </include>
    <include name="win10_widget_layout_None">
        <include content="win10_widget_layout_square">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
        </include>
    </include>
    <include name="win10_widget_layout_minisquare">
        <include content="win10_widget_layout_square">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
        </include>
    </include>
    <include name="win10_widget_layout_poster">
        <include content="win10_widget_layout_small_poster">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
        </include>
    </include>
    <include name="win10_widget_layout_smallposter">
        <include content="win10_widget_layout_small_poster">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
        </include>
    </include>
    <include name="win10_widget_layout_posterdetails">
        <include content="win10_widget_layout_small_poster">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
        </include>
    </include>
    <include name="win10_widget_layout_landscapedetails">
        <include content="win10_widget_layout_landscape">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
        </include>
    </include>
    <include name="win10_widget_layout_landscapesmall">
        <include content="win10_widget_layout_landscape">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
        </include>
    </include>
    <include name="win10_widget_layout_landscapelarge">
        <include content="win10_widget_layout_landscape">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
        </include>
    </include>
    <include name="win10_widget_layout_singlebox">
        <include content="win10_widget_layout_square">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
        </include>
    </include>
    <include name="win10_widget_layout_widebox">
        <include content="win10_widget_layout_square">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
        </include>
    </include>
</includes>