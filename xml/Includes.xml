<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>
    <include file="Defaults.xml" />
    <include file="IncludesVariables.xml" />
    <include file="IncludesBingie.xml" />
    <include file="IncludesHomeWidgets.xml" />
    <include file="IncludesFunctions.xml" />
    <include file="IncludesAnimations.xml" />
    <include file="IncludesNowPlaying.xml" />
    <include file="IncludesDialogVideoInfo.xml" />
    <include file="View_10_SimplePVR.xml" />
    <include file="View_50_List.xml" />
	<include file="View_51_BigList.xml" />
    <include file="View_55_BannerList.xml" />
    <include file="View_524_Showcase.xml" />
	<include file="View_52_HorizontalPanel.xml" />
    <include file="View_53_PanelDetails.xml" />
	<include file="View_54_Panel.xml" />
	<include file="View_56_BannerPlex.xml" />
	<include file="View_57_BigPanel.xml" />
	<include file="View_58_LargePoster.xml" />
	<include file="View_59_BigPanelDetails.xml" />
	<include file="View_501_Landscape.xml" />
	<include file="View_502_LandscapeSingle.xml" />
	<include file="View_503_Logos.xml" />
    <include file="View_504_BigList2.xml" />
    <include file="View_505_LandscapeDetails.xml" />
	<include file="View_506_ExtendedList.xml" />
	<include file="View_507_FanArt.xml" />
	<include file="View_508_SinglePoster.xml" />
	<include file="View_509_PanelSquare.xml" />
	<include file="View_510_PanelSquareDetails.xml"/>
	<include file="View_511_Thumbs.xml"/>
	<include file="View_512_ThumbsDetails.xml" />
	<include file="View_513_PosterRow.xml" />
	<include file="View_514_PosterShift.xml" />
	<include file="View_515_LowList.xml" />
	<include file="View_516_SlimList.xml" />
    <include file="View_517_Cards.xml" />
    <include file="View_518_Wide.xml" />
    <include file="View_519_BigPanel_Wall.xml" />
    <include file="View_520_Panel_Wall.xml" />
    <include file="View_521_Panel_Low.xml" />
    <include file="View_522_RightList.xml" />
    <include file="View_523_BingieMainLandscape.xml" />
    <include file="View_526_BingieMainPoster.xml" />
    <include file="View_525_Bingie_Episodes.xml" />
    <include file="IncludesViews.xml" />
    <include file="IncludesMediaFlags.xml" />
    <include file="IncludesViewsLayoutPoster.xml" />
    <include file="IncludesViewsLayoutLandscape.xml" />
    <include file="IncludesViewsLayoutSquare.xml" />
    <include file="IncludesViewsLayoutBanner.xml" />
    <include file="IncludesOSD.xml" />
    <include file="IncludesSkinSettings.xml" />
    <include file="IncludesContextMenu.xml" />
    <include file="IncludesHomeBingie.xml"/>
    <include file="IncludesHubs.xml" />
    <include file="IncludesBingieKeyboard.xml"/>
    <include file="IncludesBingieSearch.xml"/>
    <include file="IncludesHomeTitanTiles.xml" />
    <include file="IncludesHomeTitanTilesSubMenu.xml" />
	<include file="IncludesHomeEnhanced.xml" />
	<include file="IncludesHomeHorizontal.xml" />
	<include file="IncludesHomeVertical.xml" />
    <include file="IncludesHomeWin10.xml"/>
    <include file="IncludesSkinShortcuts.xml" />
	<include file="IncludesDefaultSkinSettings.xml" />
    <include file="IncludesDefaultSkinHubs.xml" />
	<include file="IncludesBackgroundBuilding.xml" />
	<include file="IncludesWeather.xml" />
    <include file="IncludesHeader.xml" />
    <include file="IncludesFooter.xml" />
    <include file="IncludesOSDDialogs.xml" />
	<include file="script-skinshortcuts-includes.xml"/>
    <include file="IncludesTouchSupport.xml" condition="Skin.HasSetting(EnableTouchSupport)" />
    <include file="IncludesDebugInfo.xml" condition="Skin.HasSetting(DebugGrid) | Skin.HasSetting(DebugInfo)" />

    <!-- Constants -->
    <constant name="landscape_width">366</constant>
    <constant name="bingie_no_circular_posx">130</constant>
    <constant name="bingie_no_circular_left_diff">65</constant>
    <constant name="search_widget_height">275</constant>
    <constant name="search_widget_thumb_width">396</constant>
    <constant name="search_key_size">80</constant>
    <constant name="search_radiokey_width">220</constant>
    <constant name="bingie_menu_width">360</constant>
    <constant name="episodes_thumb_height">266</constant>
    <constant name="episodes_thumb_width">456</constant>

    <!-- expressions -->
    <expression name="IsBingieViewsActive">Window.IsActive(Home) | Window.IsActive(1109) | Window.IsActive(1110) | Window.IsActive(1111) | Window.IsActive(1112) | Window.IsActive(1113) | Window.IsActive(1114) | Window.IsActive(1115) | Window.IsActive(1116)</expression>

    <expression name="IsBingieHubsActive">Window.IsActive(1110) | Window.IsActive(1111) | Window.IsActive(1112) | Window.IsActive(1113) | Window.IsActive(1116)</expression>

    <expression name="IsBingieListsActive">Window.IsActive(1114) | Window.IsActive(1115)</expression>

    <expression name="IsBingieCategoriesActive">Window.IsActive(1117)</expression>

    <expression name="IsPreviousWindowHub">Window.Previous(1110) | Window.Previous(1111) | Window.Previous(1112) | Window.Previous(1113)</expression>

    <expression name="IsBingieViewsVisible">Window.IsVisible(Home) | Window.IsVisible(1109) | Window.IsVisible(1110) | Window.IsVisible(1111) | Window.IsVisible(1112) | Window.IsVisible(1113) | Window.IsVisible(1114) | Window.IsVisible(1115) | Window.IsVisible(1116)</expression>

    <expression name="IsRecognizedVideoContent">VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(livetv) | VideoPlayer.Content(musicvideos) | Pvr.IsPlayingRecording</expression>

    <expression name="IsPlayingUnrecognizedContent">Player.HasVideo + Player.Playing + ![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos) | VideoPlayer.Content(livetv) | Pvr.IsPlayingRecording]</expression>

    <expression name="IsPlayingRecognizedContent">Player.HasVideo + Player.Playing + [VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(livetv) | VideoPlayer.Content(musicvideos) | Pvr.IsPlayingRecording]</expression>

    <expression name="IsMainMenuOpened">ControlGroup(9001).HasFocus() | Control.HasFocus(900) | String.IsEqual(Window(Home).Property(ShowViewSubMenu),show)</expression>

    <expression name="IsTVShowInLastEpisodes">String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.Title)</expression>

    <expression name="IsTVShowInLastEpisodesBasedOnProps">String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),Window(Home).Property(ListItem.Title)) | String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),Window(Home).Property(ListItem.Title)) | String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),Window(Home).Property(ListItem.Title)) | String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),Window(Home).Property(ListItem.Title)) | String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),Window(Home).Property(ListItem.Title)) | String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),Window(Home).Property(ListItem.Title)) | String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),Window(Home).Property(ListItem.Title)) | String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),Window(Home).Property(ListItem.Title)) | String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),Window(Home).Property(ListItem.Title)) | String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),Window(Home).Property(ListItem.Title))</expression>

    <expression name="IsTvShowDBType">String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.Property(DBTYPE),tvshow) | String.IsEqual(Window(Home).Property(ListItem.DBTYPE),tvshow)</expression>

    <expression name="IsTvShowDBTypeNoFallback">String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.Property(DBTYPE),tvshow)</expression>

    <expression name="IsMovieDBType">String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.Property(DBTYPE),movie) | String.IsEqual(Window(Home).Property(ListItem.DBTYPE),movie)</expression>

    <expression name="IsMovieDBTypeNoFallback">String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.Property(DBTYPE),movie)</expression>

    <expression name="IsEpisodeDBType">String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode) | String.IsEqual(Window(Home).Property(ListItem.DBTYPE),episode)</expression>

    <expression name="IsEpisodeDBTypeNoFallback">String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)</expression>

    <expression name="IsCategoryDBType">String.IsEmpty(ListItem.DBType) + [String.IsEqual(ListItem.Property(DBTYPE),genre) | String.IsEqual(ListItem.Property(DBTYPE),category) | String.IsEqual(ListItem.Property(DBTYPE),categorie) | String.IsEqual(Window(Home).Property(ListItem.DBTYPE),category)]</expression>

    <expression name="IsMenuEntryActive">[Window.IsActive(Home) + String.IsEqual(ListItem.Property(path), ActivateWindow(home,return))] | [Window.IsActive(1110) + String.IsEqual(ListItem.Property(path), ActivateWindow(1110,return))] | [Window.IsActive(1111) + String.IsEqual(ListItem.Property(path), ActivateWindow(1111,return))] | [Window.IsActive(1112) + String.IsEqual(ListItem.Property(path), ActivateWindow(1112,return))] | [Window.IsActive(1113) + String.IsEqual(ListItem.Property(path), ActivateWindow(1113,return))] | [Window.IsActive(1114) + String.IsEqual(ListItem.Property(path), ActivateWindow(1114,return))] | [Window.IsActive(1115) + String.IsEqual(ListItem.Property(path), ActivateWindow(1115,return))] | [Window.IsActive(1109) + String.IsEqual(ListItem.Property(path), ActivateWindow(1109,return))] | [Window.IsActive(1116) + String.IsEqual(ListItem.Property(path), ActivateWindow(1116,return))]</expression>

    <expression name="IsKnownMenuEntryPath">String.IsEqual(ListItem.Property(path), ActivateWindow(home,return)) | String.IsEqual(ListItem.Property(path), ActivateWindow(1110,return)) | String.IsEqual(ListItem.Property(path), ActivateWindow(1111,return)) | String.IsEqual(ListItem.Property(path), ActivateWindow(1112,return)) | String.IsEqual(ListItem.Property(path), ActivateWindow(1113,return)) | String.IsEqual(ListItem.Property(path), ActivateWindow(1114,return)) | String.IsEqual(ListItem.Property(path), ActivateWindow(1115,return)) | String.IsEqual(ListItem.Property(path), ActivateWindow(1109,return))</expression>

    <expression name="IsVerticalLayout">String.IsEqual(Skin.String(HomeLayout),simplever) | String.IsEqual(Skin.String(HomeLayout),simplever_tiles) | String.IsEqual(Skin.String(HomeLayout),verticalbig)</expression>

    <expression name="IsHorizontalLayout">String.IsEqual(Skin.String(HomeLayout),simplehor) | String.IsEqual(Skin.String(HomeLayout),lowhorizontal) | String.IsEqual(Skin.String(HomeLayout),lowhorizontal_big)</expression>

    <expression name="IsTilesLayout">String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),3) | String.IsEqual(Skin.String(HomeLayout),1small) | String.IsEqual(Skin.String(HomeLayout),2small) | String.IsEqual(Skin.String(HomeLayout),3small)</expression>

    <expression name="IsSupportedFixedFrameLayout">String.IsEqual(Skin.String(widgetstyle),landscape) | String.IsEqual(Skin.String(widgetstyle),poster) | String.IsEqual(Skin.String(widgetstyle),landscapelarge) | String.IsEqual(Skin.String(widgetstyle),landscapesmall) | String.IsEqual(Skin.String(widgetstyle),smallposter)</expression>

    <expression name="IsFirstRun">!Skin.HasSetting(BingieFirstStartupDone) | !Skin.HasSetting(BingieSecondStartupDone)</expression>

    <expression name="IsActualKeyboardActive">Window.IsActive(virtualkeyboard) + String.IsEmpty(Window(Home).Property(SpaceSearchTerm)) + String.IsEmpty(Window(Home).Property(BackspaceSearchTerm))</expression>

    <expression name="IsCurrentWidgetSpotlight">Control.HasFocus(1508) | [Skin.HasSetting(EnableFixedFocusWidgets) + Control.IsVisible(1508) + Container(77777).Position(0)] | [!Skin.HasSetting(EnableFixedFocusWidgets) + Control.IsVisible(1508) + String.IsEqual(Container(77777).CurrentItem,1)]</expression>

    <!--Common-->
    <!--BINGIE Version-->
    <include name="BingieVersion">
        <control type="group">
            <bottom>30</bottom>
            <right>174</right>
            <width>180</width>
            <height>190</height>
            <align>right</align>
            <control type="image">
                <width>320</width>
                <height>320</height>
                <aspectratio align="left">keep</aspectratio>
                <texture background="true">bingie_logo.png</texture>
            </control>
        </control>
    </include>

    <include name="HiddenObject">
        <left>-3000</left>
        <top>-3000</top>
        <width>1</width>
        <height>1</height>
        <texturefocus />
        <texturenofocus />
        <label/>
        <font/>
    </include>

    <include name="FullscreenDimensions">
        <posx>0</posx>
        <posy>0</posy>
        <width>100%</width>
        <height>100%</height>
    </include>

    <include name="navigation_horizontal">
        <orientation>horizontal</orientation>
    </include>

    <include name="align_right">
        <align>right</align>
    </include>

    <include name="align_left">
        <align>left</align>
    </include>

    <include name="align_center">
        <align>center</align>
    </include>

    <include name="left">
        <left>$PARAM[left]</left>
    </include>

    <include name="right">
        <right>$PARAM[right]</right>
    </include>

    <include name="height">
        <height>$PARAM[height]</height>
    </include>

    <include name="width">
        <width>$PARAM[width]</width>
    </include>

    <include name="top">
        <top>$PARAM[top]</top>
    </include>

    <include name="posx">
        <posx>$PARAM[posx]</posx>
    </include>

    <include name="ButtonMovementAction">
        <onleft>$PARAM[action]</onleft>
        <onright>$PARAM[action]</onright>
        <onup>$PARAM[action]</onup>
        <ondown>$PARAM[action]</ondown>
        <onback>$PARAM[action]</onback>
    </include>

    <include name="textoffsetx">
        <textoffsetx>$PARAM[textoffsetx]</textoffsetx>
    </include>

    <include name="ImageAlignCenter">
        <aspectratio align="center">keep</aspectratio>
    </include>
    <include name="ImageAlignLeft">
        <aspectratio align="left">keep</aspectratio>
    </include>

    <include name="ScrollTime">
        <scrolltime tween="cubic" easing="out">600</scrolltime>
    </include>

    <include name="BingieLeftDefs">
        <include condition="!Skin.HasSetting(EnhancedHome_Circular)">No_Circular_Left</include>
        <left>65</left>
    </include>

    <!-- bounce up animation -->
    <include name="Bounce_Up">
        <animation condition="Window.IsVisible(1150)" reversible="false" type="Conditional">
            <effect easing="out" end="0,-30" start="0,0" time="60" tween="sine" type="slide" />
            <effect delay="80" easing="out" end="0,30" start="0,0" time="120" tween="sine" type="slide" />
        </animation>
    </include>
    <!-- bounce down animation -->
    <include name="Bounce_Down">
        <animation condition="Window.IsVisible(1149)" reversible="false" type="Conditional">
            <effect easing="out" end="0,30" start="0,0" time="60" tween="sine" type="slide" />
            <effect delay="80" easing="out" end="0,-30" start="0,0" time="120" tween="sine" type="slide" />
        </animation>
    </include>

    <!--Dialog Color/Font-->
    <include name="DialogHeader">
        <!--Dialog Header-->
        <font>Bold38</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
    </include>
	<include name="DialogHeader_Alt">
        <!--Dialog Header-->
        <font>Bold38</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
    </include>
    <include name="DialogButton">
        <!--Dialog Button-->
        <font>Reg28</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
		<texturenofocus></texturenofocus>
		<texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="5">diffuse/panel.png</texturefocus>
    </include>

    <include name="DialogButtonBig">
        <!--Dialog Button Big-->
        <font>Reg30</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
    </include>
    <include name="DialogButtonSmall">
        <!--Dialog Button Small-->
        <font>Reg26</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
    </include>
    <include name="DialogListNF">
        <!--Dialog List NF-->
        <font>Reg28</font>
        <textcolor fallback="white">$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
    </include>
	
    <include name="DialogListFO">
        <!--Dialog List FO-->
        <font>Reg28</font>
        <textcolor>$INFO[Skin.String(ButtonFocusTextColor)]</textcolor>
        <selectedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</selectedcolor>
    </include>

    <include name="DialogLabel">
        <!--Dialog Label-->
        <font>Reg28</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
    </include>
	
	<include name="DialogButtonOther">
        <!--Dialog Button OK Cancel-->
        <height>80</height>
        <width>350</width>
        <include>Key</include>
    </include>

    <!-- Busy Spinner -->
    <include name="Busy_Spinner">
        <param name="centertop" default="50%"/>
        <param name="centerleft" default="50%"/>
        <param name="size" default="100"/>
        <param name="visibility" default="true"/>
        <definition>
            <control type="multiimage">
                <nested/>
                <visible>$PARAM[visibility]</visible>
                <animation effect="fade" start="0" end="100" time="0">WindowOpen</animation>
                <animation effect="fade" start="100" end="0" time="500" delay="500">WindowClose</animation>
                <centertop>$PARAM[centertop]</centertop>
                <centerleft>$PARAM[centerleft]</centerleft>
                <width>$PARAM[size]</width>
                <height>$PARAM[size]</height>
                <aspectratio>keep</aspectratio>
                <imagepath>$VAR[DialogBusySpinnerPath]</imagepath>
                <timeperimage>100</timeperimage>
                <colordiffuse>$INFO[Skin.String(SpinnerTexture.Color)]</colordiffuse>
                <fadetime>0</fadetime>
            </control>
        </definition>
    </include>

    <!--Keyboard-->
    <include name="EditTextKeyboard">
        <font>Light45</font>
        <align>center</align>
        <textoffsetx>0</textoffsetx>
        <texturenofocus/>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
        <pulseonselect>false</pulseonselect>
        <texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="5">diffuse/panel.png</texturefocus>
    </include>
    <include name="KeyBoardKey">
        <height>70</height>
        <width>130</width>
        <align>center</align>
        <font>Reg30</font>
        <textoffsetx>0</textoffsetx>
        <selectedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</selectedcolor>
        <textcolor>$INFO[Skin.String(ButtonTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
        <pulseonselect>false</pulseonselect>
        <texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="15">dialogs/keyboard/key.png</texturefocus>
        <texturenofocus colordiffuse="$INFO[Skin.String(ButtonColor)]" border="15">dialogs/keyboard/key.png</texturenofocus>
     </include>
    <include name="KeyBoardKeyRadio">
        <align>left</align>
        <textoffsetx>20</textoffsetx>
        <radioposx/>
        <radioposy>15</radioposy>
        <radiowidth>28</radiowidth>
        <radioheight>28</radioheight>
        <textureradiofocus>dialogs/keyboard/radio-on.png</textureradiofocus>
        <textureradionofocus>dialogs/keyboard/radio-off.png</textureradionofocus>
        <font>Reg26</font>
        <include>KeyBoardKey</include>
    </include>
    
    <include name="Key">
        <height>110</height>
        <align>center</align>
        <font>Reg28</font>
        <textoffsetx>0</textoffsetx>
        <selectedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</selectedcolor>
        <textcolor>$INFO[Skin.String(ButtonTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
        <pulseonselect>false</pulseonselect>
        <texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="20">dialogs/keyboard/key-nf.png</texturefocus>
        <texturenofocus colordiffuse="$INFO[Skin.String(ButtonColor)]" border="20">dialogs/keyboard/key-nf.png</texturenofocus>
        <alttexturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="20">dialogs/keyboard/key-nf.png</alttexturefocus>
        <alttexturenofocus colordiffuse="$INFO[Skin.String(ButtonColor)]" border="20">dialogs/keyboard/key-nf.png</alttexturenofocus>
    </include>

    <include name="SmallKey">
        <width>130</width>
        <font>Reg34</font>
        <include>Key</include>
    </include>
	<include name="ExtraSmallKey">
        <width>70</width>
		<height>70</height>
        <include>Key</include>
    </include>
    <include name="BigKey">
        <width>250</width>
        <font>Reg28</font>
        <include>Key</include>
    </include>
    <include name="SpaceBar">
        <width>735</width>
        <include>Key</include>
    </include>
    <include name="BackSpace">
        <width>490</width>
        <include>Key</include>
    </include>
    <include name="DialogButtonBrowseAdd">
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/plus.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(GeneralTextColor)]">dialogs/keyboard/plus.png</textureradionofocus>
        <radiowidth>30</radiowidth>
        <radioheight>30</radioheight>
        <radioposx>10</radioposx>
        <textoffsetx>60</textoffsetx>
        <width>260</width>
        <height>55</height>
        <include>DialogButton</include>
    </include>
    <include name="DialogButtonBrowseRemove">
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/remove.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(GeneralTextColor)]">dialogs/keyboard/remove.png</textureradionofocus>
        <radiowidth>30</radiowidth>
        <radioheight>30</radioheight>
        <radioposx>10</radioposx>
        <textoffsetx>60</textoffsetx>
        <width>260</width>
        <height>55</height>
        <include>DialogButton</include>
    </include>
    <include name="DialogButtonBrowseEdit">
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/edit.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(GeneralTextColor)]">dialogs/keyboard/edit.png</textureradionofocus>
        <radiowidth>30</radiowidth>
        <radioheight>30</radioheight>
        <radioposx>10</radioposx>
        <textoffsetx>60</textoffsetx>
        <width>260</width>
        <height>55</height>
        <include>DialogButton</include>
    </include>
    <include name="DialogButtonBrowse">
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/mediasource/browse-nf.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(GeneralTextColor)]">dialogs/mediasource/browse-nf.png</textureradionofocus>
        <radiowidth>230</radiowidth>
        <radioheight>230</radioheight>
        <radioposx>-5</radioposx>
        <textoffsetx>60</textoffsetx>
        <width>260</width>
        <height>55</height>
        <include>DialogButton</include>
    </include>
    <include name="KeyLeft">
        <width>130</width>
        <include>Key</include>
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/left.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">dialogs/keyboard/left.png</textureradionofocus>
        <radiowidth>70</radiowidth>
        <radioheight>70</radioheight>
        <radioposx>30</radioposx>
    </include>
    <include name="KeyRight">
        <width>130</width>
        <include>Key</include>
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/right.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">dialogs/keyboard/right.png</textureradionofocus>
        <radiowidth>70</radiowidth>
        <radioheight>70</radioheight>
        <radioposx>30</radioposx>
    </include>
    <include name="KeyBack">
        <width>130</width>
        <include>Key</include>
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/back.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">dialogs/keyboard/back.png</textureradionofocus>
        <radiowidth>70</radiowidth>
        <radioheight>70</radioheight>
        <radioposx>30</radioposx>
    </include>
    <include name="KeyDone">
        <width>130</width>
        <include>Key</include>
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">dialogs/keyboard/done.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">dialogs/keyboard/done.png</textureradionofocus>
        <radiowidth>70</radiowidth>
        <radioheight>70</radioheight>
        <radioposx>30</radioposx>
    </include>
    <include name="DoubleKeyDone">
        <width>250</width>
        <height>90</height>
        <include>Key</include>
    </include>
    <include name="DoubleKeyCancel">
        <width>250</width>
        <height>90</height>
        <include>Key</include>
    </include>
    <include name="ListDetailsBtn">
        <width>580</width>
        <height>40</height>
        <align>left</align>
        <disabledcolor fallback="white">$INFO[Skin.String(ViewDetailsTextColor)]</disabledcolor>
        <texturefocus/>
        <texturenofocus>dialogs/default/separator.png</texturenofocus>
        <textoffsetx>0</textoffsetx>
        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
        <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
        <enable>false</enable>
    </include>
</includes>