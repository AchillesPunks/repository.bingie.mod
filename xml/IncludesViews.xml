<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>

    <include name="allViewIds">
        <views>10,50,51,52,501,502,503,504,505,53,54,55,506,56,57,58,59,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526</views>
        <menucontrol>9000</menucontrol>
        <onunload condition="Skin.HasSetting(DetailsAutoTrailer) + !String.IsEmpty(Window(Home).Property(TrailerPlaying)) + !String.IsEqual(Window(Home).Property(TrailerPlaying),fullscreen)">PlayerControl(Stop)</onunload>
    </include>

    <include name="playlistViewId">
        <views>5000</views>
    </include>

    <include name="altEpgOnScreen7">
        <top>780</top>
        <height>395</height>
    </include>
    <include name="altEpgOnScreen9">
        <top>800</top>
        <height>385</height>
    </include>
    <include name="altEpgOnScreen10">
        <top>775</top>
        <height>413</height>
    </include>

    <include name="allViews">
        
        <!-- footer bar (in back) -->
        <control type="group">
            <visible>![Control.IsVisible(507) | Control.IsVisible(513) | Control.IsVisible(514) | Control.IsVisible(519) | Control.IsVisible(520) | Control.IsVisible(525) |  Control.IsVisible(523) |  Control.IsVisible(526)]</visible>
            <include condition="!Skin.HasSetting(nofooterbar)">Footer</include>
        </control>
        
        <!--Views-->
        <control type="group" id="5000">
            <visible>!Window.IsActive(virtualkeyboard)</visible>
            <include>animation_window_open_close</include>
            <animation effect="slide" end="0,100" time="0" condition="Skin.HasSetting(nofooterbar) + ![Control.IsVisible(519) | Control.IsVisible(520) | Control.IsVisible(507) | Control.IsVisible(523) |  Control.IsVisible(526) | Control.IsVisible(525)]">Conditional</animation>
            <animation effect="slide" end="0,-80" time="0" condition="Skin.String(general_header,disable) + String.IsEqual(Skin.AspectRatio,16:10) + ![Control.IsVisible(519) | Control.IsVisible(520) | Control.IsVisible(507) | Control.IsVisible(515) | Control.IsVisible(521) | Control.IsVisible(508) | Control.IsVisible(58) | Control.IsVisible(523) |  Control.IsVisible(526) | Control.IsVisible(525)]">Conditional</animation>
            
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.50)">View_50_List</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.10) + [Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRSearch.xml) | Window.IsActive(MyPVRTimers.xml)]">View_10_SimplePVR</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.51)">View_51_BigList</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.504)">View_504_BigList2</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.515)">View_515_LowList</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.516)">View_516_SlimList</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.522)">View_522_RightList</include>
            
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.52)">View_52_HorizontalPanel</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.53)">View_53_PanelDetails</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.54)">View_54_Panel</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.57)">View_57_BigPanel</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.59)">View_59_BigPanelDetails</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.519)">View_519_BigPanel_Wall</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.520)">View_520_Panel_Wall</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.521)">View_521_Panel_Low</include>
            
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.506)">ViewExtendedList</include>

            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.501)">View_501_Landscape</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.505)">View_505_LandscapeDetails</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.502)">View_502_LandscapeSingle</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.511)">View_511_Thumbs</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.512)">View_512_ThumbsDetails</include>
            
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.509)">View_509_PanelSquare</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.510)">View_510_PanelSquareDetails</include>
            
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.513) + Window.IsActive(MyVideoNav.xml)">View_513_PosterRow</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.514) + Window.IsActive(MyVideoNav.xml)">View_514_PosterShift</include>
            
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.58) + Window.IsActive(MyVideoNav.xml)">View_58_LargePoster</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.508) + Window.IsActive(MyVideoNav.xml)">View_508_SinglePoster</include>
            
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.517)">View_517_Cards</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.518)">View_518_Wide</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.507) + [Window.IsActive(MyVideoNav.xml) | Window.IsActive(MyPics.xml)]">View_507_FanArt</include>
            
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.524) + Window.IsActive(MyVideoNav.xml)">View_524_Showcase</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.56) + Window.IsActive(MyVideoNav.xml)">View_56_BannerPlex</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.55) + Window.IsActive(MyVideoNav.xml)">View_55_BannerList</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.503) + Window.IsActive(MyVideoNav.xml)">View_503_Logos</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.523) + Window.IsActive(MyVideoNav.xml)">View_523_Bingie_Main_Landscape</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.526) + Window.IsActive(MyVideoNav.xml)">View_526_Bingie_Main_Poster</include>
            <include condition="!Skin.HasSetting(SkinHelper.View.Disabled.525) + Window.IsActive(MyVideoNav.xml)">View_525_Episodes</include>
        </control>
        
        <!-- footer bar (in front) -->
        <control type="group">
            <visible>Control.IsVisible(507) | Control.IsVisible(513) | Control.IsVisible(514)</visible>
            <include condition="!Skin.HasSetting(nofooterbar)">Footer</include>
        </control>
            
        <!-- clearlogo -->
        <control type="group">
            <visible>![Control.IsVisible(519) | Control.IsVisible(520) | Control.IsVisible(523) | Control.IsVisible(526) | Control.IsVisible(525)]</visible>
            <include condition="Skin.String(ClearLogoLocation) + ![Skin.HasSetting(nofooterbar) + Skin.String(ClearLogoLocation,footer)]">ClearLogo</include>
        </control>
            
        <!--Scrolling Letter-->
        <control type="group">
            <visible>!Skin.HasSetting(DisableScrollingLetters)</visible>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
            <visible>Container.Scrolling + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556])]</visible>
            <animation effect="fade" start="0" end="100" time="400" delay="30">Visible</animation>
            <animation effect="fade" start="100" end="0" time="400" delay="150">Hidden</animation>
            <control type="image">
                <posx>910</posx>
                <posy>480</posy>
                <width>100</width>
                <height>100</height>
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
            </control>
            <control type="image">
                <posx>910</posx>
                <posy>480</posy>
                <width>100</width>
                <height>100</height>
                <texture border="5">diffuse/panel.png</texture>
                <bordersize>8</bordersize>
                <colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
            </control>
            <control type="label">
                <posx>910</posx>
                <posy>480</posy>
                <width>100</width>
                <height>100</height>
                <align>center</align>
                <aligny>center</aligny>
                <font>Bold55</font>
                <textcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</textcolor>
                <label>$INFO[ListItem.SortLetter]</label>
            </control>
        </control>
        
        <!-- alphabet scrollbar -->
        <include condition="Skin.HasSetting(EnableQuickJump)">AlphabetScrollbar</include>
    
    </include>
    
    <include name="AlphabetScrollbar">
        
        <!-- scrollbar vertical -->
        <control type="group" id="6000">
            <visible>![Control.IsVisible(52) | Control.IsVisible(58) | Control.IsVisible(502) | Control.IsVisible(503) | Control.IsVisible(506) | Control.IsVisible(507) | Control.IsVisible(508) | Control.IsVisible(513) | Control.IsVisible(514) | [Control.IsVisible(523) + Skin.HasSetting(View_523_HorizontalNavigation)]| [Control.IsVisible(526) + Skin.HasSetting(View_526_HorizontalNavigation)] | Control.IsVisible(524)]</visible>
            <control type="button" id="6001">
                <width>1</width>
                <right>-1</right>
                <bottom>0</bottom>
                <height>1</height>
                <onfocus>SetFocus(60)</onfocus>
                <visible>!Control.IsVisible(6002)</visible>
            </control>
            
            <control type="image">
                <texture>colors/color_white.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
                <width>40</width>
                <right>0</right>
                <visible>Control.IsVisible(6002) + !Control.HasFocus(60)</visible>
                <animation effect="fade" start="0" end="100" time="400" condition="[Control.HasFocus(6002) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
                <animation effect="fade" start="100" end="0" time="400" condition="![Control.HasFocus(6002) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
            </control>
            
            <control type="panel" id="6002">
                <width>40</width>
                <right>0</right>
                <bottom>0</bottom>
                <height>100%</height>
                <onleft>5000</onleft>
                <onright>60</onright>
                <onup>6002</onup>
                <ondown>6002</ondown>
                <onback>5000</onback>
                <orientation>vertical</orientation>
                <itemlayout height="40" width="40">
                    <control type="label">
                        <width>100%</width>
                        <height>100%</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <textcolor>$INFO[Skin.String(ViewDetailsListItemTextColor)]</textcolor>
                        <font>Reg26</font>
                        <animation effect="fade" start="100" end="20" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
                    </control>
                    <control type="label">
                        <width>100%</width>
                        <height>100%</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <textcolor>$INFO[Skin.String(ButtonFocusColor)]</textcolor>
                        <font>Reg26</font>
                        <visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter)</visible>
                    </control>
                </itemlayout>
                <focusedlayout height="40" width="40">
                    <control type="image">
                        <texture>colors/color_white.png</texture>
                        <colordiffuse>$INFO[Skin.String(ButtonFocusColor)]</colordiffuse>
                        <animation effect="fade" start="100" end="20" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
                    </control>
                    <control type="label">
                        <width>100%</width>
                        <height>100%</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <textcolor>$INFO[Skin.String(ButtonFocusTextColor)]</textcolor>
                        <animation effect="fade" start="100" end="20" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
                        <font>Reg26</font>
                    </control>
                    <control type="button">
                        <visible>false</visible>
                        <onfocus condition="!String.IsEmpty(Container(6002).ListItem.Property(NotAvailable)) + Container(6002).OnNext">Control.Move(6002,1)</onfocus>
                        <onfocus condition="!String.IsEmpty(Container(6002).ListItem.Property(NotAvailable)) + Container(6002).OnPrevious">Control.Move(6002,-1)</onfocus>
                    </control>
                </focusedlayout>
                <content>plugin://script.skin.helper.service/?action=alphabet&amp;reload=$INFO[Container.NumItems]</content>
                <visible>Skin.HasSetting(EnableQuickJump) + Integer.IsGreater(Container.NumPages,1) + !Control.HasFocus(60)</visible>
                <visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556])</visible>
                <animation effect="fade" start="0" end="100" time="400" condition="[Control.HasFocus(6002) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
                <animation effect="fade" start="100" end="0" time="400" condition="![Control.HasFocus(6002) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
            </control>
        </control>
    
        <!-- scrollbar horizontal -->
        <control type="group" id="7000">
            <animation effect="slide" start="0" end="0,110" time="0" condition="Skin.HasTheme(classic) | Control.IsVisible(523) | Control.IsVisible(526)">Conditional</animation>
            <visible>[Control.IsVisible(52) | Control.IsVisible(58) | Control.IsVisible(502) | Control.IsVisible(503) | Control.IsVisible(506) | Control.IsVisible(507) | Control.IsVisible(508) | Control.IsVisible(513) | Control.IsVisible(514) | [Control.IsVisible(523) + Skin.HasSetting(View_523_HorizontalNavigation)] | [Control.IsVisible(526) + Skin.HasSetting(View_526_HorizontalNavigation)] | Control.IsVisible(524)]</visible>
            <control type="button" id="7001">
                <width>1</width>
                <right>-1</right>
                <bottom>0</bottom>
                <height>1</height>
                <onfocus>SetFocus(60)</onfocus>
                <visible>!Control.IsVisible(7002)</visible>
            </control>
            
            <control type="image">
                <texture>colors/color_white.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
                <left>0</left>
                <width>100%</width>
                <bottom>110</bottom>
                <height>40</height>
                <visible>Control.IsVisible(7002) + !Control.HasFocus(60)</visible>
                <animation effect="fade" start="0" end="100" time="400" condition="[Control.HasFocus(7002) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
                <animation effect="fade" start="100" end="0" time="400" condition="![Control.HasFocus(7002) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
            </control>
            <control type="image">
                <texture>colors/color_white.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
                <left>0</left>
                <width>100%</width>
                <bottom>110</bottom>
                <height>40</height>
                <visible>Control.IsVisible(7002) + !Control.HasFocus(60)</visible>
                <animation effect="fade" start="0" end="100" time="400" condition="[Control.HasFocus(7002) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
                <animation effect="fade" start="100" end="0" time="400" condition="![Control.HasFocus(7002) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
            </control>
            
            <control type="panel" id="7002">
                <left>60</left>
                <width>1800</width>
                <bottom>110</bottom>
                <height>40</height>
                <onleft>7002</onleft>
                <onright>7002</onright>
                <onup>5000</onup>
                <ondown>60</ondown>
                <onback>5000</onback>
                <orientation>horizontal</orientation>
                <itemlayout height="40" width="66">
                    <control type="label">
                        <width>100%</width>
                        <height>100%</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <textcolor>$INFO[Skin.String(ViewDetailsListItemTextColor)]</textcolor>
                        <font>Reg26</font>
                        <animation effect="fade" start="100" end="20" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
                    </control>
                    <control type="label">
                        <width>100%</width>
                        <height>100%</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <textcolor>$INFO[Skin.String(ButtonFocusColor)]</textcolor>
                        <font>Reg26</font>
                        <visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter)</visible>
                    </control>
                </itemlayout>
                <focusedlayout height="40" width="66">
                    <control type="image">
                        <texture>colors/color_white.png</texture>
                        <colordiffuse>$INFO[Skin.String(ButtonFocusColor)]</colordiffuse>
                        <animation effect="fade" start="100" end="20" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
                    </control>
                    <control type="label">
                        <width>100%</width>
                        <height>100%</height>
                        <align>center</align>
                        <aligny>center</aligny>
                        <label>$INFO[ListItem.Label]</label>
                        <textcolor>$INFO[Skin.String(ButtonFocusTextColor)]</textcolor>
                        <animation effect="fade" start="100" end="20" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
                        <font>Reg26</font>
                    </control>
                </focusedlayout>
                <content>plugin://script.skin.helper.service/?action=alphabet&amp;reload=$INFO[Container.NumItems]</content>
                <visible>Skin.HasSetting(EnableQuickJump) + Integer.IsGreater(Container.NumPages,1) + !Control.HasFocus(60)</visible>
                <visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556])</visible>
                <animation effect="fade" start="0" end="100" time="400" condition="[Control.HasFocus(7002) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
                <animation effect="fade" start="100" end="0" time="400" condition="![Control.HasFocus(7002) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
            </control>
        
        </control>
    
    </include>

  	<!-- TV Shows Next Aired script -->
	<include name="TVNextAiredListCommonLayout">
		<posy>0</posy>
		<posx>0</posx>
		<width>1338</width>
		<height>630</height>
		<onup>5000</onup>
		<ondown>5000</ondown>
		<onleft>5000</onleft>
		<orientation>horizontal</orientation>
		<scrolltime tween="quadratic">300</scrolltime>
		<pagecontrol>60</pagecontrol>
		<itemlayout width="446" height="630">
			<control type="group">
				<width>430</width>
				<height>630</height>
				
				<control type="image">
					<texture border="5">diffuse/panel.png</texture>
					<colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
				</control>
				
				<control type="image">
					<!--Panel icon image-->
					<bordersize>8</bordersize>
					<height>240</height>
					<texture background="true" diffuse="home/home_matte2.png" fallback="resource://resource.images.skinicons.wide/video.png">$VAR[LandscapeImage]</texture>
					<aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
				</control>
				
				<control type="label">
					<posx>15</posx>
					<posy>280</posy>
					<width>400</width>
					<height>80</height>
					<label>$INFO[ListItem.Label]</label>
					<font>Bold32</font>
					<textcolor>$VAR[ViewDetailsTextColor]</textcolor>
					<aligny>top</aligny>
				</control>
								
				<control type="textbox">
					<posx>15</posx>
					<posy>360</posy>
					<width>400</width>
					<height>270</height>
					<label>[B]$LOCALIZE[31212]:[/B][CR]$INFO[ListItem.Property(NextNumber),,. ]$INFO[ListItem.Property(NextTitle)][CR][CR][B]$LOCALIZE[31213]:[/B][CR]$INFO[ListItem.Property(NextDate)] $INFO[ListItem.Property(ShortTime)]$INFO[ListItem.Property(Network), @ ][CR][CR][B]$LOCALIZE[126]:[/B][CR]$INFO[ListItem.Property(Status)]</label>
					<font>Reg24</font>
					<textcolor>$VAR[ViewDetailsTextColor]</textcolor>
					<aligny>top</aligny>
				</control>

				</control>
		</itemlayout>
		<focusedlayout width="446" height="630">
			<control type="group">
				<width>430</width>
				<height>630</height>
				
				<control type="image">
					<texture border="4">diffuse/cover_panel_matte_fo.png</texture>
					<colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
				</control>
				
				<control type="image">
					<bordersize>8</bordersize>
					<texture border="5">diffuse/panel.png</texture>
					<colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
				</control>
				
				<control type="image">
					<!--Panel icon image-->
					<bordersize>8</bordersize>
					<height>240</height>
					<texture background="true" diffuse="home/home_matte2.png" fallback="resource://resource.images.skinicons.wide/video.png">$VAR[LandscapeImage]</texture>
					<aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
				</control>
				
				<control type="label">
					<posx>15</posx>
					<posy>280</posy>
					<width>400</width>
					<height>80</height>
					<label>$INFO[ListItem.Label]</label>
					<font>Bold32</font>
					<textcolor>$VAR[ViewDetailsTextColor]</textcolor>
					<aligny>top</aligny>
				</control>
								
				<control type="textbox">
					<posx>15</posx>
					<posy>360</posy>
					<width>400</width>
					<height>270</height>
					<label>[B]$LOCALIZE[31212]:[/B][CR]$INFO[ListItem.Property(NextNumber),,. ]$INFO[ListItem.Property(NextTitle)][CR][CR][B]$LOCALIZE[31213]:[/B][CR]$INFO[ListItem.Property(NextDate)] $INFO[ListItem.Property(ShortTime)]$INFO[ListItem.Property(Network), @ ][CR][CR][B]$LOCALIZE[126]:[/B][CR]$INFO[ListItem.Property(Status)]</label>
					<font>Reg24</font>
					<textcolor>$VAR[ViewDetailsTextColor]</textcolor>
					<aligny>top</aligny>
					
				</control>
					
					
				</control>
		</focusedlayout>
	</include>

    <include name="EpgProgressIndicatorNormal">
        <progresstexture colordiffuse="$INFO[Skin.String(ViewDetailsHighlightTextColor)]" border="0,48,18,14">pvr/PVR-EpgProgressIndicator.png</progresstexture>
    </include>
   
    <include name="EpgProgressIndicatorAlt">
        <progresstexture>pvr/guide_diffuse.png</progresstexture>
    </include>

    <include name="panelPosModern">
        <posx>-80</posx>
        <width>2137</width>
    </include>
    
    <include name="MovieDetailsTop">
        <!-- movie details TOP -->
        <control type="group" id="888">
            <include>animation_view_change</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
            <animation effect="slide" start="0,-100" end="0" time="0" condition="Control.IsVisible(513)">Conditional</animation>
            <height>765</height>
			<bottom>13%</bottom>
            <control type="image">
                <visible>!String.IsEmpty(ListItem.Label)</visible>
                <posx>50</posx>
                <width>1820</width>
                <texture border="15">diffuse/bgpanel.png</texture>
                <visible>!Skin.HasSetting(DetailsTopHidepanel)</visible>
				<colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
			</control>
			
            <!--Info-->
            <control type="grouplist">
                <posx>60</posx>
                <posy>10</posy>
                <width>1200</width>
                <height>700</height>
                <orientation>vertical</orientation>
				<!-- title -->
				<control type="group">
					 <height>40</height>
					<control type="label">
						<posx>7</posx>
						<posy>0</posy>
						<width>920</width>
						<align>left</align>
						<label>[UPPERCASE]$VAR[mediatitle][/UPPERCASE]</label>
						
						<textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
                        <shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
						<scroll>true</scroll>
						<font>Bold30</font>
					</control>
				</control>
                <control type="group">
                    <!--Year: Movies-->
                    <width>800</width>
                    <height>40</height>
                    <visible>[!String.IsEmpty(ListItem.Year) | !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Years))] + !Container.Content(episodes)</visible>
                    <control type="image">
                        <posx>0</posx>
                        <posy>3</posy>
                        <width>49</width>
                        <height>49</height>
                        <texture>dialogs/videoinfo/premiered-icon.png</texture>
                        <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                    </control>
                    <control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>600</width>
                        <align>left</align>
                        <label>$INFO[ListItem.Year]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <scroll>false</scroll>
						<visible>!String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                    </control>
					<control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>600</width>
                        <align>left</align>
                        <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Years)]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <scroll>false</scroll>
						<visible>String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                    </control>
                </control>
                <control type="group">
                    <!--Episodes-->
                    <width>800</width>
                    <height>40</height>
                    <visible>Container.Content(episodes) + !String.IsEmpty(ListItem.Premiered)</visible>
                    <control type="image">
                        <posx>0</posx>
                        <posy>3</posy>
                        <width>49</width>
                        <height>49</height>
                        <texture>dialogs/videoinfo/premiered-icon.png</texture>
                        <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                    </control>
                    <control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>600</width>
                        <align>left</align>
                        <label>$INFO[ListItem.Premiered]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <scroll>false</scroll>
                    </control>
                </control>
                <control type="group">
                    <!--Runtime: Movie, Episodes-->
                    <width>600</width>
                    <height>40</height>
                    <visible>!String.IsEmpty(ListItem.Duration) | !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Runtime))</visible>
                    <control type="image">
                        <posx>0</posx>
                        <posy>3</posy>
                        <width>49</width>
                        <height>49</height>
                        <texture>dialogs/videoinfo/time-icon.png</texture>
                        <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                    </control>
                    <control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>600</width>
                        <label>$VAR[ListItemDurationWithEndTime]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <scroll>false</scroll>
                    </control>
                </control>
                <control type="group">
                    <!--Genre-->
                    <width>800</width>
                    <height>40</height>
                    <visible>!String.IsEmpty(ListItem.Genre) | !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Genre))</visible>
                    <control type="image">
                        <posx>0</posx>
                        <posy>3</posy>
                        <width>49</width>
                        <height>49</height>
                        <texture>dialogs/videoinfo/genre-icon.png</texture>
                        <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                    </control>
                    <control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>800</width>
                        <align>left</align>
                        <label>$INFO[ListItem.Genre]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
						<visible>!String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                        <scroll>false</scroll>
                    </control>
					<control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>800</width>
                        <align>left</align>
                        <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <scroll>false</scroll>
						<visible>String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                    </control>
                </control>
                <control type="group">
                    <!--Director: Movies, Episodes-->
                    <width>800</width>
                    <height>40</height>
                    <visible>!Container.Content(tvshows)</visible>
                    <visible>!String.IsEmpty(ListItem.Director) | !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Director))</visible>
                    <control type="image">
                        <posx>0</posx>
                        <posy>5</posy>
                        <width>49</width>
                        <height>49</height>
                        <texture>dialogs/videoinfo/director-icon.png</texture>
                        <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                    </control>
                    <control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>800</width>
                        <align>left</align>
                        <label>$INFO[ListItem.Director]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <scroll>false</scroll>
						<visible>!String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                    </control>
					<control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>800</width>
                        <align>left</align>
                        <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Director)]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <scroll>false</scroll>
						<visible>String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                    </control>
                </control>
                <control type="group">
                    <!--Writer: Movies, Episodes-->
                    <width>800</width>
                    <height>40</height>
                    <visible>!Container.Content(tvshows)</visible>
                    <visible>!String.IsEmpty(ListItem.Writer) | !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Writer))</visible>
                    <control type="image">
                        <posx>0</posx>
                        <posy>2</posy>
                        <width>49</width>
                        <height>49</height>
                        <texture>dialogs/videoinfo/writer-icon.png</texture>
                        <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                    </control>
                    <control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>800</width>
                        <align>left</align>
                        <label>$INFO[ListItem.Writer]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <scroll>false</scroll>
						<visible>!String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                    </control>
					<control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>800</width>
                        <align>left</align>
                        <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Writer)]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <scroll>false</scroll>
						<visible>String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                    </control>
                </control>
                <control type="group">
					<!--Studio: TV-Shows-->
					<width>1200</width>
					<height>40</height>
					<visible>!String.IsEmpty(ListItem.Studio) | !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Studio))</visible>
					
					<control type="image">
                        <posx>0</posx>
                        <posy>2</posy>
                        <width>49</width>
                        <height>49</height>
                        <texture>dialogs/videoinfo/tvstudio-icon.png</texture>
                        <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                    </control>
                    <control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>800</width>
                        <align>left</align>
                        <label>$INFO[ListItem.Studio,, ]$INFO[Window(Home).Property(SkinHelper.ListItem.Status),  •   [B]$LOCALIZE[126]: [/B]]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <scroll>false</scroll>
						<visible>!String.IsEmpty(ListItem.Studio)</visible>
                    </control>
					<control type="label">
                        <posx>60</posx>
                        <posy>0</posy>
                        <width>800</width>
                        <align>left</align>
                        <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Studio)]$INFO[Window(Home).Property(SkinHelper.ListItem.Status),  •   [B]$LOCALIZE[126]: [/B]]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <scroll>false</scroll>
						<visible>String.IsEmpty(ListItem.Studio)</visible>
                    </control>

				</control>
				<control type="group">
					<!--Total: Episodes-->
					<width>950</width>
					<height>40</height>
					<visible>Container.Content(TVShows) + !String.IsEmpty(ListItem.Property(TotalEpisodes))</visible>
					<control type="label">
						<posx>8</posx>
						<posy>0</posy>
						<width>950</width>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
						<align>left</align>
						<label>$INFO[ListItem.Property(TotalEpisodes),[B]$LOCALIZE[20360]:[/B] ,  •  ]$INFO[ListItem.Property(unWatchedepisodes),[B]$LOCALIZE[31092]:[/B] ,]</label>
						<scroll>false</scroll>
					</control>
				</control>
				<control type="group">
					<!--NextAired Status-->
					<width>1300</width>
					<height>40</height>
					<visible>Container.Content(TVShows) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Lastepisode.Label))</visible>
					<control type="label">
						<posx>8</posx>
						<posy>0</posy>
						<width>1300</width>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
						<align>left</align>
						<label>[B]$LOCALIZE[31214]:[/B] $INFO[Window(Home).Property(SkinHelper.ListItem.Lastepisode.Label)]</label>
						<scroll>false</scroll>
					</control>
				</control>
				<control type="group">
					<!--NextAired Status-->
					<width>1300</width>
					<height>40</height>
					<visible>Container.Content(TVShows) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.NextEpisode.Label))</visible>
					<control type="label">
						<posx>8</posx>
						<posy>0</posy>
						<width>1300</width>
						<font>Reg28</font>
						<align>left</align>
						<label>[B]$LOCALIZE[31212]:[/B] $INFO[Window(Home).Property(SkinHelper.ListItem.NextEpisode.Label)]</label>
						<shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
						<scroll>false</scroll>
					</control>
				</control>
				<!-- empty label -->
				<control type="label">
					<height>20</height>
				</control>
			</control>
     			
			<!-- Plot -->
            <control type="group">
                <right>60</right>
                <posy>10</posy>
                <width>830</width>
                <height>530</height>
                <control type="textbox">
                    <posx>0</posx>
                    <posy>0</posy>
                    <width>830</width>
                    <height>305</height>
                    <label>$VAR[Plots]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <align>justify</align>
                </control>
            </control>
        </control>
    </include>
	
    <include name="MovieDetailsTop2">
        <!-- movie details TOP -->
        <control type="group" id="9888">
            <include>animation_view_change</include>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
            <height>270</height>
			<top>0</top>
            <control type="image">
                <visible>!String.IsEmpty(ListItem.Label)</visible>
                <posx>0</posx>
                <width>1920</width>
                <texture border="15">diffuse/bgpanel.png</texture>
                <visible>!Skin.HasSetting(DetailsTopHidepanel)</visible>
				<colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
			</control>
            
            <control type="group">
                <right>60</right>
                <top>10</top>
                <left>60</left>
                <height>233</height>
                
                <!-- Title -->
                <control type="label">
                    <width>100%</width>
                    <height>35</height>
                    <align>left</align>
                    <label>[UPPERCASE]$VAR[mediatitle][/UPPERCASE]</label>
                    <textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
                    <scroll>true</scroll>
                    <font>Bold30</font>
                </control>
                
                <!-- Plot -->
                <control type="textbox">
                    <width>100%</width>
                    <height>193</height>
                    <posy>50</posy>
                    <label>[B]$VAR[Details][/B][CR]$VAR[Plots]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
					<textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <align>justify</align>
                </control>
            </control>
			
        </control>
    </include>
	
    <include name="MovieDetailsLeft_Small">
        <control type="group">
            <visible>Control.IsVisible(504) | Control.IsVisible(522)</visible>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
            <width>550</width>
            <include>MovieDetailsLeft_Layout</include>
        </control>
    </include>
  
  <include name="MovieDetailsLeft">
    <control type="group">
        <visible>Control.IsVisible(53) | Control.IsVisible(55) | Control.IsVisible(59) | Control.IsVisible(505) | Control.IsVisible(510) | Control.IsVisible(512) | [Skin.HasSetting(SlimListViewShowInfo) + Control.IsVisible(516)] | [Skin.HasSetting(BigListViewShowInfo) + Control.IsVisible(51)]</visible>
        <visible>Integer.IsGreater(Container.NumItems,0)</visible>
        <width>675</width>
        <animation effect="slide" end="1193" time="0" condition="Skin.HasSetting(View512_ShowInfoRight) + Control.IsVisible(512)">Conditional</animation>
        <animation effect="slide" end="1193" time="0" condition="Skin.HasSetting(View59_ShowInfoRight) + Control.IsVisible(59)">Conditional</animation>
        <animation effect="slide" end="1193" time="0" condition="Skin.HasSetting(View53_ShowInfoRight) + Control.IsVisible(53)">Conditional</animation>
        <animation effect="slide" end="1193" time="0" condition="Skin.HasSetting(View55_ShowInfoRight) + Control.IsVisible(55)">Conditional</animation>
        <animation effect="slide" end="1193" time="0" condition="Skin.HasSetting(View505_ShowInfoRight) + Control.IsVisible(505)">Conditional</animation>
        <animation effect="slide" end="1193" time="0" condition="Skin.HasSetting(View510_ShowInfoRight) + Control.IsVisible(510)">Conditional</animation>
        <animation effect="slide" end="1193" time="0" condition="Skin.HasSetting(View516_ShowInfoRight) + Control.IsVisible(516)">Conditional</animation>
        <animation effect="slide" end="1193" time="0" condition="Skin.HasSetting(View51_ShowInfoRight) + Control.IsVisible(51)">Conditional</animation>
        <include>MovieDetailsLeft_Layout</include>
    </control>
  </include>

  <include name="MovieDetailsLeft_Layout">
    <control type="group">
      <visible>
        ![[Control.IsVisible(512) + Skin.HasSetting(View512_DetailsShowFanart)] |
        [Control.IsVisible(516) + Skin.HasSetting(View516_DetailsShowFanart)] |
        [Control.IsVisible(510) + Skin.HasSetting(View510_DetailsShowFanart)] |
        [Control.IsVisible(505) + Skin.HasSetting(View505_DetailsShowFanart)] |
        [Control.IsVisible(51) + Skin.HasSetting(View51_DetailsShowFanart)] |
        [Control.IsVisible(59) + Skin.HasSetting(View59_DetailsShowFanart)] |
        [Control.IsVisible(55) + Skin.HasSetting(View55_DetailsShowFanart)] |
        [Control.IsVisible(504) + Skin.HasSetting(View504_DetailsShowFanart)] |
        [Control.IsVisible(53) + Skin.HasSetting(View53_DetailsShowFanart)]]
        </visible>
        <visible>![!String.IsEmpty(Window(Home).Property(TrailerPlaying)) + Skin.HasSetting(DetailsAutoTrailer)]</visible>
        <animation effect="slide" end="0,-8" time="0" condition="[Skin.HasSetting(DetailsLeftHidepanel) + !Control.IsVisible(516) + !Control.IsVisible(51) + !Control.IsVisible(504)] | [Skin.HasSetting(View516_HidePanel) + Control.IsVisible(516)] | [Skin.HasSetting(View51_HidePanel) + Control.IsVisible(51)] | [Skin.HasSetting(View504_HidePanel) + Control.IsVisible(504)]">Conditional</animation>
        <posx>50</posx>
        <bottom>13%</bottom>
        <height>736</height>
        <control type="image">
            <texture border="15">diffuse/bgpanel.png</texture>
            <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
            <visible>!Control.IsVisible(522)</visible>
            <visible>[!Skin.HasSetting(DetailsLeftHidepanel) + !Control.IsVisible(516) + !Control.IsVisible(51) + !Control.IsVisible(504)] | [!Skin.HasSetting(View516_HidePanel) + Control.IsVisible(516)] | [!Skin.HasSetting(View51_HidePanel) + Control.IsVisible(51)] | [!Skin.HasSetting(View504_HidePanel) + Control.IsVisible(504)]</visible>
        </control>
    
        <control type="grouplist">
            <left>8</left>
            <top>0</top>
            <width>98%</width>
            <height>330</height>
            <orientation>vertical</orientation>
            <control type="image">
                <!-- channel logo -->
                <width>200</width>
                <height>150</height>
                <texture background="true">$VAR[channellogo]</texture>
                <aspectratio align="left" aligny="top">keep</aspectratio>
                <visible>Window.IsActive(tvchannels) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch)</visible>
            </control>
            <!-- title -->
            <control type="group">
                <height>40</height>
                <control type="label">
                    <posx>7</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>[UPPERCASE]$VAR[mediatitle][/UPPERCASE]</label>
                    <textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
                    <scroll>false</scroll>
                    <font>Bold30</font>
                </control>
            </control>
            <control type="group">
                <!--Year: Movies-->
                <height>40</height>
                <visible>[Container.Content(Movies) | [Container.Content(sets) | String.IsEqual(Container.Folderpath,videodb://movies/sets/)]] + !String.IsEmpty(ListItem.Year)</visible>
                <control type="image">
                    <posx>0</posx>
                    <posy>3</posy>
                    <width>49</width>
                    <height>49</height>
                    <texture>dialogs/videoinfo/premiered-icon.png</texture>
                    <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                </control>
                <control type="label">
                    <posx>60</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$INFO[ListItem.Year]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                    <visible>!String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                </control>
                <control type="label">
                    <posx>60</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Years)]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                    <visible>String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                </control>
            </control>
            <control type="group">
                <!--Premiered: TV-Shows, Episodes-->
                <height>40</height>
                <visible>[Container.Content(TVShows) | Container.Content(episodes) | Container.Content(sets) | String.IsEqual(Container.Folderpath,videodb://movies/sets/)] + !String.IsEmpty(ListItem.Premiered)</visible>
                <control type="image">
                    <posx>0</posx>
                    <posy>3</posy>
                    <width>49</width>
                    <height>49</height>
                    <texture>dialogs/videoinfo/premiered-icon.png</texture>
                    <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                </control>
                <control type="label">
                    <posx>60</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$INFO[ListItem.Premiered]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                </control>
            </control>
            <control type="group">
                <!--Runtime: Movie, Episodes-->
                <height>40</height>
                <visible>[Container.Content(Movies) | Container.Content(episodes) | [Container.Content(sets) | String.IsEqual(Container.Folderpath,videodb://movies/sets/)]] + [!String.IsEmpty(ListItem.Duration) | !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Runtime))]</visible>
                <control type="image">
                    <posx>0</posx>
                    <posy>3</posy>
                    <width>49</width>
                    <height>49</height>
                    <texture>dialogs/videoinfo/time-icon.png</texture>
                    <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                </control>
                <control type="label">
                    <posx>60</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$VAR[ListItemDurationWithEndTime]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                </control>
            </control>
            <control type="group">
                <!--Genre-->
                <width>100%</width>
                <height>40</height>
                <visible>!String.IsEmpty(ListItem.Genre) | !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Genre))</visible>
                <control type="image">
                    <posx>0</posx>
                    <posy>3</posy>
                    <width>49</width>
                    <height>49</height>
                    <texture>dialogs/videoinfo/genre-icon.png</texture>
                    <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                </control>
                <control type="label">
                    <posx>60</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$VAR[listitem_genre]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                </control>
            </control>
            <control type="group">
                <!--Director: Movies, Episodes-->
                <width>100%</width>
                <height>40</height>
                <visible>[Container.Content(Movies) | Container.Content(episodes) | [Container.Content(sets) | String.IsEqual(Container.Folderpath,videodb://movies/sets/)]] + [!String.IsEmpty(ListItem.Director) | !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Director))]</visible>
                <control type="image">
                    <posx>0</posx>
                    <posy>5</posy>
                    <width>49</width>
                    <height>49</height>
                    <texture>dialogs/videoinfo/director-icon.png</texture>
                    <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                </control>
                <control type="label">
                    <posx>60</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$INFO[ListItem.Director]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                    <visible>!String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                </control>
                <control type="label">
                    <posx>60</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Director)]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                    <visible>String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                </control>
            </control>
            <control type="group">
                <!--Writer: Movies, Episodes-->
                <width>100%</width>
                <height>40</height>
                <visible>[Container.Content(Movies) | Container.Content(episodes) | [Container.Content(sets) | String.IsEqual(Container.Folderpath,videodb://movies/sets/)]] + [!String.IsEmpty(ListItem.Writer) | !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Writer))]</visible>
                <control type="image">
                    <posx>0</posx>
                    <posy>2</posy>
                    <width>49</width>
                    <height>49</height>
                    <texture>dialogs/videoinfo/writer-icon.png</texture>
                    <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                </control>
                <control type="label">
                    <posx>60</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$INFO[ListItem.Writer]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                    <visible>!String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                </control>
                <control type="label">
                    <posx>60</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Writer)]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                    <visible>String.Contains(ListItem.Path,videodb://movies/sets/)</visible>
                </control>
            </control>
            <control type="group">
                <!--Studio: TV-Shows-->
                <width>100%</width>
                <height>40</height>
                <visible>!String.IsEmpty(ListItem.Studio)</visible>
                <control type="image">
                    <posx>0</posx>
                    <posy>3</posy>
                    <width>49</width>
                    <height>49</height>
                    <texture>dialogs/videoinfo/tvstudio-icon.png</texture>
                    <colordiffuse>$INFO[Skin.String(ViewDetailsTextColor)]</colordiffuse>
                </control>
                <control type="label">
                    <posx>60</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$INFO[ListItem.Studio]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                </control>
            </control>
            <control type="group">
                <!--Addons: author-->
                <width>100%</width>
                <height>40</height>
                <visible>Container.Content(Addons)</visible>
                <control type="label">
                    <posx>5</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$LOCALIZE[21863]:</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                </control>
                <control type="label">
                    <right>10</right>
                    <posy>0</posy>
                    <align>right</align>
                    <width>250</width>
                    <label>$INFO[ListItem.AddonCreator]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                </control>
            </control>
            <control type="group">
                <!--Addons: version-->
                <width>100%</width>
                <height>40</height>
                <visible>Container.Content(Addons)</visible>
                <control type="label">
                    <posx>5</posx>
                    <posy>0</posy>
                    <align>left</align>
                    <label>$LOCALIZE[24051]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                </control>
                <control type="label">
                    <right>10</right>
                    <posy>0</posy>
                    <align>right</align>
                    <width>250</width>
                    <label>$INFO[ListItem.AddonVersion]</label>
                    <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                    <scroll>false</scroll>
                </control>
            </control>
        </control>
        <!-- horizontal line -->
        <control type="image">
            <top>350</top>
            <height>1</height>
            <texture>diffuse/panel.png</texture>
            <colordiffuse>grey</colordiffuse>
        </control>
        <!-- plot -->
        <control type="textbox">
            <top>360</top>
            <left>7</left>
            <right>7</right>
            <bottom>10</bottom>
            <label>$VAR[Plots]</label>
            <font>Light28</font>
            <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
            <align>justify</align>
        </control>

    </control>
    <control type="group">
        <visible>
        [Control.IsVisible(512) + Skin.HasSetting(View512_DetailsShowFanart)] |
        [Control.IsVisible(516) + Skin.HasSetting(View516_DetailsShowFanart)] |
        [Control.IsVisible(510) + Skin.HasSetting(View510_DetailsShowFanart)] |
        [Control.IsVisible(505) + Skin.HasSetting(View505_DetailsShowFanart)] |
        [Control.IsVisible(51) + Skin.HasSetting(View51_DetailsShowFanart)] |
        [Control.IsVisible(59) + Skin.HasSetting(View59_DetailsShowFanart)] |
        [Control.IsVisible(55) + Skin.HasSetting(View55_DetailsShowFanart)] |
        [Control.IsVisible(504) + Skin.HasSetting(View504_DetailsShowFanart)] |
        [Control.IsVisible(53) + Skin.HasSetting(View53_DetailsShowFanart)] | 
        [!String.IsEmpty(Window(Home).Property(TrailerPlaying)) + Skin.HasSetting(DetailsAutoTrailer)]
        </visible>

        <posx>50</posx>
        <bottom>13%</bottom>
        <height>736</height>
        <control type="image">
            <texture border="15">diffuse/bgpanel.png</texture>
            <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
            <visible>!Control.IsVisible(522)</visible>
            <visible>[!Skin.HasSetting(DetailsLeftHidepanel) + !Control.IsVisible(516) + !Control.IsVisible(51) + !Control.IsVisible(504)] | [!Skin.HasSetting(View516_HidePanel) + Control.IsVisible(516)] | [!Skin.HasSetting(View51_HidePanel) + Control.IsVisible(51)] | [!Skin.HasSetting(View504_HidePanel) + Control.IsVisible(504)]</visible>
        </control>

        <control type="image">
            <height>360</height>
            <bordersize>8</bordersize>
            <aspectratio align="center" aligny="top" scalediffuse="true">keep</aspectratio>
            <texture background="true" diffuse="diffuse/bgpanel.png" border="0" fallback="DefaultVideo.png">$VAR[DetailsFanArtImage]</texture>
            <visible>!Window.IsActive(Music)</visible>
            <visible>!Skin.HasTheme(skindefault)</visible>
        </control>
        <control type="image">
            <height>360</height>
            <bordersize>8</bordersize>
            <aspectratio align="center" aligny="top" scalediffuse="true">keep</aspectratio>
            <texture background="true" diffuse="diffuse/landscape.png" fallback="DefaultVideo.png">$VAR[DetailsFanArtImage]</texture>
            <visible>!Window.IsActive(Music)</visible>
            <visible>Skin.HasTheme(skindefault)</visible>
        </control>
         <control type="image">
            <!--cdart image music-->
            <width>360</width>
            <height>360</height>
            <left>180</left>
            <bordersize>10</bordersize>
            <texture background="true" diffuse="diffuse/cdmask_new.png" fallback="defaultcovers/cd_big.png">$VAR[DiscArtImage]</texture>
            <aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
            <animation effect="rotate" end="-90" center="auto" time="20000" loop="false" reversible="false" condition="Skin.HasSetting(AnimateDiscArt)">Conditional</animation>
            <visible>!String.IsEmpty(ListItem.Art(thumb)) | !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb))</visible>
            <visible>Window.IsActive(Music)</visible>
            <visible>
                [Control.IsVisible(51) + Skin.HasSetting(View51_ShowCDart)] | 
                [Control.IsVisible(52) + Skin.HasSetting(View52_ShowCDart)] | 
                [Control.IsVisible(58) + Skin.HasSetting(View58_ShowCDart)] | 
                [Control.IsVisible(502) + Skin.HasSetting(View502_ShowCDart)] | 
                [Control.IsVisible(504) + Skin.HasSetting(View504_ShowCDart)] | 
                [Control.IsVisible(508) + Skin.HasSetting(View508_ShowCDart)] | 
                [Control.IsVisible(513) + Skin.HasSetting(View513_ShowCDart)] | 
                [Control.IsVisible(514) + Skin.HasSetting(View514_ShowCDart)] | 
                [Control.IsVisible(522) + Skin.HasSetting(View522_ShowCDart)] |
                [Control.IsVisible(523) + Skin.HasSetting(View523_ShowCDart)]
            </visible>
        </control>

        <!-- music cover -->
        <control type="image">
            <height>360</height>
            <width>360</width>
            <bordersize>8</bordersize>
            <aspectratio align="center" aligny="center" scalediffuse="true">scale</aspectratio>
            <texture background="true" diffuse="diffuse/landscape.png" fallback="DefaultAddonArtistInfo.png" border="0">$VAR[MusicCoverImage]</texture>
            <visible>Window.IsActive(Music)</visible>
        </control>
        <!--Video Window -->
        <control type="group">
            <posx>8</posx>
            <posy>8</posy>
            <width>609</width>
            <height>344</height>
            <visible>
                    [Window.IsActive(tvchannels) + VideoPlayer.Content(livetv) + Skin.HasSetting(PVRShowPreview)] | 
                    [Player.HasVideo + !String.IsEmpty(Window(Home).Property(TrailerPlaying)) + Skin.HasSetting(DetailsAutoTrailer)]
            </visible>
            <visible>!Skin.HasTheme(classic)</visible>
            <control type="image">
                <texture>colors/color_black.png</texture>
            </control>
            <control type="videowindow">
            </control>
        </control>

        <control type="label">
            <posy>370</posy>
            <posx>8</posx>
            <height>33</height>
            <width>98%</width>
            <font>Bold28</font>
            <textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
            <label>[UPPERCASE]$VAR[mediatitle][/UPPERCASE]</label>
            <scroll>true</scroll>
        </control>
        <control type="label">
            <posy>405</posy>
            <posx>8</posx>
            <height>33</height>
            <width>98%</width>
            <font>Bold28</font>
            <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
            <label>[UPPERCASE]$INFO[ListItem.Artist][/UPPERCASE]</label>
            <visible>Container.Content(songs)</visible>
        </control>
        <control type="label">
              <posy>410</posy>
              <posx>8</posx>
              <height>33</height>
              <width>98%</width>
              <font>Reg26</font>
              <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
              <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
              <label>$VAR[Details]</label>
              <animation effect="slide" end="0,45" time="0" condition="Container.Content(songs)">Conditional</animation>
        </control>
        <control type="textbox">
          <left>8</left>
          <right>8</right>
          <posy>460</posy>
          <height>230</height>
          <align>justify</align>
          <font>Reg24</font>
          <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
          <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
          <label>$VAR[Plots]</label>
          <animation effect="slide" end="0,45" time="0" condition="Container.Content(songs)">Conditional</animation>
        </control>
     </control>
  </include>

    <include name="thumbsborder_unfocused">
        <include condition="String.IsEqual(Skin.String(thumbsborder_unfocused),0)">thumbborder_0</include>
        <include condition="String.IsEqual(Skin.String(thumbsborder_unfocused),2)">thumbborder_2</include>
        <include condition="String.IsEqual(Skin.String(thumbsborder_unfocused),4)">thumbborder_4</include>
        <include condition="String.IsEqual(Skin.String(thumbsborder_unfocused),6)">thumbborder_6</include>
    </include>

    <include name="thumbsborder_focused">
        <include condition="String.IsEqual(Skin.String(thumbsborder_focused),2)">thumbborder_2</include>
        <include condition="String.IsEqual(Skin.String(thumbsborder_focused),4)">thumbborder_4</include>
        <include condition="String.IsEqual(Skin.String(thumbsborder_focused),6)">thumbborder_6</include>
    </include>

    <include name="thumbborder_0">
        <bordersize>9</bordersize>   
    </include>
    <include name="thumbborder_2">
        <bordersize>6</bordersize>   
    </include>
    <include name="thumbborder_4">
        <bordersize>4</bordersize>   
    </include>
    <include name="thumbborder_6">
        <bordersize>2</bordersize>   
    </include>
    
    <include name="poster_shadow">
        <bordertexture border="20" colordiffuse="black">diffuse/poster_shadow.png</bordertexture>
    </include>
    
	<include name="WatchedIndicatorLayout">
        <control type="group">
            <visible>!String.IsEqual(ListItem$PARAM[listitem].Label,..)</visible>
            <width>$PARAM[width]</width>
            <height>$PARAM[height]</height>
            <right>0</right>
            <top>0</top>
            <control type="group">
                <description>Watched Overlay</description>
                <visible>Integer.IsGreater(ListItem$PARAM[listitem].PlayCount,0) + Skin.HasSetting(WatchedIndicator.Watched) + !ListItem$PARAM[listitem].IsResumable</visible>
                <visible>!ListItem$PARAM[listitem].IsPlaying + !ListItem$PARAM[listitem].IsRecording</visible>
                <visible>![String.IsEqual(ListItem.DBTYPE, song) | String.IsEqual(ListItem.Property(DBTYPE), song) | Container.Content(songs)]</visible>
                <visible>![String.IsEqual(ListItem.DBTYPE, album) | String.IsEqual(ListItem.Property(DBTYPE), album) | Container.Content(albums)]</visible>
                <control type="image">
                    <texture background="true">$PARAM[overlay_texture]</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.Watched.Color)]</colordiffuse>
                </control>
                <control type="image">
                    <texture>overlays/$PARAM[overlay]/watched.png</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.Watched.TextColor)]</colordiffuse>
                </control>
            </control>
            <control type="group">
                <description>Unwatched Overlay</description>
                <visible>!ListItem$PARAM[listitem].IsPlaying + !ListItem$PARAM[listitem].IsRecording</visible>
                <visible>String.IsEqual(ListItem$PARAM[listitem].Overlay,OverlayUnWatched.png) + Skin.HasSetting(WatchedIndicator.UnWatched) + !ListItem$PARAM[listitem].IsResumable</visible>
                <visible>![String.IsEqual(ListItem.DBTYPE, song) | String.IsEqual(ListItem.Property(DBTYPE), song) | Container.Content(songs)]</visible>
                <control type="image">
                    <texture background="true">$PARAM[overlay_texture]</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.UnWatched.Color)]</colordiffuse>
                </control>
                <control type="image">
                    <texture>overlays/$PARAM[overlay]/unwatched.png</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.UnWatched.TextColor)]</colordiffuse>
                </control>
            </control>
            <control type="group">
                <description>In progress Overlay</description>
                <visible>ListItem$PARAM[listitem].IsResumable + Skin.HasSetting(WatchedIndicator.Progress)</visible>
                <visible>!ListItem$PARAM[listitem].IsPlaying + !ListItem$PARAM[listitem].IsRecording</visible>
                <control type="image">
                    <texture background="true">$PARAM[overlay_texture]</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.Progress.Color)]</colordiffuse>
                </control>
                <control type="label">
                    <right>0</right>
                    <top>0</top>
                    <align>center</align>
                    <font>$PARAM[font]</font>
                    <width>65%</width>
                    <height>45%</height>
                    <label>$INFO[ListItem$PARAM[listitem].PercentPlayed]%</label>
                    <textcolor>$INFO[Skin.String(WatchedIndicator.Progress.TextColor)]</textcolor>
                </control>
            </control>
            <control type="group">
                <description>Episodes count Overlay</description>
                <visible>Integer.IsGreater(ListItem$PARAM[listitem].Property(UnWatchedEpisodes),0) + Skin.HasSetting(WatchedIndicator.Episodes)</visible>
                <visible>!ListItem$PARAM[listitem].IsPlaying + !ListItem$PARAM[listitem].IsRecording</visible>
                <control type="image">
                    <texture background="true">$PARAM[overlay_texture]</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.Episodes.Color)]</colordiffuse>
                </control>
                <control type="label">
                    <right>0</right>
                    <top>0</top>
                    <align>center</align>
                    <font>$PARAM[font]</font>
                    <width>65%</width>
                    <height>45%</height>
                    <label>$INFO[ListItem$PARAM[listitem].Property(UnWatchedEpisodes)]</label>
                    <textcolor>$INFO[Skin.String(WatchedIndicator.Episodes.TextColor)]</textcolor>
                </control>
            </control>
            <control type="group">
                <description>Movieset Overlay</description>
                <visible>[ListItem$PARAM[listitem].IsCollection | String.Contains(ListItem$PARAM[listitem].Path,videodb://movies/sets/)] + Skin.HasSetting(WatchedIndicator.Sets)</visible>
                <visible>!ListItem$PARAM[listitem].IsPlaying + !ListItem$PARAM[listitem].IsRecording</visible>
                <control type="image">
                    <texture background="true">$PARAM[overlay_texture]</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.Sets.Color)]</colordiffuse>
                </control>
                <control type="image">
                    <texture>overlays/$PARAM[overlay]/discset.png</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.Sets.TextColor)]</colordiffuse>
                </control>
            </control>
            
            <control type="group">
                <description>Is Playing</description>
                <visible>Skin.HasSetting(WatchedIndicator.Playing)</visible>
                <visible>ListItem$PARAM[listitem].IsPlaying + !ListItem$PARAM[listitem].IsRecording</visible>
                <control type="image">
                    <texture background="true">$PARAM[overlay_texture]</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.Playing.Color)]</colordiffuse>
                </control>
                <control type="image">
                    <texture>osd/slim/Play.png</texture>
                    <left>35%</left>
                    <top>-10%</top>
                    <width>78%</width>
                    <height>78%</height>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.Playing.TextColor)]</colordiffuse>
                </control>
            </control>
            <control type="group">
                <description>Is Recording</description>
                <visible>Skin.HasSetting(WatchedIndicator.Playing)</visible>
                <visible>!ListItem$PARAM[listitem].IsPlaying + ListItem$PARAM[listitem].IsRecording</visible>
                <control type="image">
                    <texture background="true">$PARAM[overlay_texture]</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.Playing.Color)]</colordiffuse>
                </control>
                <control type="image">
                    <left>35%</left>
                    <top>-10%</top>
                    <width>78%</width>
                    <height>78%</height>
                    <texture>pvr/icons/pvr_record.png</texture>
                </control>
            </control>
            <control type="group">
                <description>Is single timer</description>
                <visible>Skin.HasSetting(WatchedIndicator.Playing)</visible>
                <visible>String.IsEqual(ListItem.Comment,$LOCALIZE[305]) | String.IsEmpty(ListItem.Comment)</visible>
                <visible>!ListItem$PARAM[listitem].IsPlaying + !ListItem$PARAM[listitem].IsRecording</visible>
                <visible>[ListItem$PARAM[listitem].HasTimer + !ListItem$PARAM[listitem].HasTimerSchedule] | [!String.IsEmpty(ListItem$PARAM[listitem].TimerType) + !ListItem$PARAM[listitem].IsFolder]</visible>
                <control type="image">
                    <texture background="true">$PARAM[overlay_texture]</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.Playing.Color)]</colordiffuse>
                </control>
                <control type="image">
                    <left>35%</left>
                    <top>-10%</top>
                    <width>78%</width>
                    <height>78%</height>
                    <texture>pvr/icons/pvr_timer.png</texture>
                </control>
            </control>
            <control type="group">
                <description>PVR recurring timer</description>
                <visible>Skin.HasSetting(WatchedIndicator.Playing)</visible>
                <visible>String.IsEqual(ListItem.Comment,$LOCALIZE[305]) | String.IsEmpty(ListItem.Comment)</visible>
                <visible>!ListItem$PARAM[listitem].IsPlaying + !ListItem$PARAM[listitem].IsRecording</visible>
                <visible>[ListItem$PARAM[listitem].HasTimer + ListItem$PARAM[listitem].HasTimerSchedule] | [!String.IsEmpty(ListItem$PARAM[listitem].TimerType) + ListItem$PARAM[listitem].IsFolder]</visible>
                <control type="image">
                    <texture background="true">$PARAM[overlay_texture]</texture>
                    <colordiffuse>$INFO[Skin.String(WatchedIndicator.Watched.Color)]</colordiffuse>
                </control>
                <control type="image">
                    <right>-11</right>
                    <top>-5</top>
                    <width>73%</width>
                    <height>70%</height>
                    <texture>pvr/icons/pvr_record.png</texture>
                    <animation effect="fade" start="100" end="60" time="0" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <right>-3</right>
                    <top>-5</top>
                    <width>73%</width>
                    <height>70%</height>
                    <texture>pvr/icons/pvr_record.png</texture>
                    <animation effect="fade" start="100" end="80" time="0" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <right>5</right>
                    <top>-5</top>
                    <width>73%</width>
                    <height>70%</height>
                    <texture>pvr/icons/pvr_record.png</texture>
                </control>
            </control>
        </control>
    </include>
            
    <include name="WatchedIndicatorNormal">
        <include content="WatchedIndicatorLayout">
            <param name="width" value="80" />
            <param name="height" value="80" />
            <param name="font" value="indicator_normal" />
            <param name="overlay" value="normal" />
            <param name="overlay_texture" value="diffuse/icon_overlay.png" />
        </include>
    </include>
    
	<include name="WatchedIndicatorSmall">
        <include content="WatchedIndicatorLayout">
            <param name="width" value="60" />
            <param name="height" value="60" />
            <param name="font" value="indicator_small" />
            <param name="overlay" value="normal" />
            <param name="overlay_texture" value="diffuse/icon_overlay.png" />
        </include>
	</include>
	
	<include name="WatchedIndicatorLarge">
		<include content="WatchedIndicatorLayout">
            <param name="width" value="120" />
            <param name="height" value="120" />
            <param name="font" value="indicator_big" />
            <param name="overlay" value="big" />
            <param name="overlay_texture" value="diffuse/icon_overlay.png" />
        </include>

	</include>

	<variable name="WatchedLabel">
        <value condition="[Container.Content(TVShows) | Container.Content(Seasons) | ListItem.IsFolder] + [Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !Skin.HasSetting(HideWatchedCounts)]">$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
		<value condition="ListItem.IsResumable + !String.IsEmpty(ListItem.Property(complete_percentage))">$INFO[ListItem.Property(complete_percentage)]%</value>
		<value condition="ListItem.IsResumable">$INFO[ListItem.PercentPlayed]%</value>
		<value>??</value>
    </variable>
    
    <include name="Font_Reg24">
        <font>Reg24</font>
    </include>
    <include name="Font_Reg26">
        <font>Reg26</font>
    </include>
    <include name="Font_Reg31">
        <font>Reg31</font>
    </include>
    
    <include name="PVRWatchedIndicator">
        <control type="group">
            <visible>!String.StartsWith(ListItem.Label,..)</visible>
            <width>65</width>
            <height>65</height>
            <posx>-5</posx>
            <top>4</top>
            <control type="image">
                <description>PVR is recording</description>
                <right>0</right>
                <top>0</top>
                <width>65</width>
                <height>60</height>
                <texture>pvr/icons/pvr_record.png</texture>
                <visible>ListItem.IsRecording</visible>
            </control>
            <control type="image">
                <description>PVR single timer</description>
                <right>0</right>
                <top>0</top>
                <width>65</width>
                <height>60</height>
                <texture>pvr/icons/pvr_timer.png</texture>
                <visible>!ListItem.IsRecording + ListItem.HasTimer + !ListItem.HasTimerSchedule</visible>
            </control>
            <control type="image">
                <description>Is Playing</description>
                <right>0</right>
                <top>0</top>
                <width>65</width>
                <height>60</height>
                <texture>pvr/icons/pvr_play.png</texture>
                <visible>ListItem.IsPlaying + !ListItem.IsRecording</visible>
            </control>
            <control type="group">
                <description>PVR recurring timer</description>
                <visible>ListItem.HasTimerSchedule</visible>
                <control type="image">
                    <right>-4</right>
                    <top>5</top>
                    <width>55</width>
                    <height>50</height>
                    <texture>pvr/icons/pvr_record.png</texture>
                    <animation effect="fade" start="100" end="60" time="0" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <right>4</right>
                    <top>5</top>
                    <width>55</width>
                    <height>50</height>
                    <texture>pvr/icons/pvr_record.png</texture>
                    <animation effect="fade" start="100" end="80" time="0" condition="true">Conditional</animation>
                </control>
                <control type="image">
                    <right>12</right>
                    <top>5</top>
                    <width>55</width>
                    <height>50</height>
                    <texture>pvr/icons/pvr_record.png</texture>
                </control>
            </control>
        </control>
    </include>
      
    <variable name="PVRGuideGenreColorsVar">
        <value condition="!String.IsEmpty(ListItem.Genre) + Skin.String(pvrgenretype,genre) + !Skin.HasSetting(CustomEPGGenreImages)">epg-genres/$INFO[ListItem.Genre].png</value>
        <value condition="!String.IsEmpty(ListItem.Property(GenreType)) + Skin.String(pvrgenretype,genretype) + !Skin.HasSetting(CustomEPGGenreImages)">epg-genres/$INFO[ListItem.Property(GenreType)].png</value>
        <value condition="!String.IsEmpty(ListItem.Genre) + Skin.String(pvrgenretype,genre) + Skin.HasSetting(CustomEPGGenreImages)">special://profile/addon_data/custom-epg-genres/$INFO[ListItem.Genre].png</value>
        <value condition="!String.IsEmpty(ListItem.Property(GenreType)) + Skin.String(pvrgenretype,genretype) + Skin.HasSetting(CustomEPGGenreImages)">special://profile/addon_data/custom-epg-genres/$INFO[ListItem.Property(GenreType)].png</value>
    </variable>
    
    <include name="PVRGuideItemLayout">
        <!--EPG UNFOCUS-->
        <control type="image" id="14">
            <!--Button NF-->
            <posx>1</posx>
            <posy>0</posy>
            <width>50</width>
            <height>92%</height>
            <texture colordiffuse="$INFO[Skin.String(PVRGuideItemColorUnfocus)]" border="5">diffuse/panel.png</texture>
            <visible>!Skin.HasSetting(ShowEpgGenreColors)</visible>
        </control>
        <control type="image" id="14">
            <!--Button NF epg genre-->
            <posx>1</posx>
            <posy>0</posy>
            <width>50</width>
            <height>92%</height>
            <visible>Skin.HasSetting(ShowEpgGenreColors)</visible>
            <texture border="6" fallback="epg-genres/0.png">$VAR[PVRGuideGenreColorsVar]</texture>
            <visible>!Skin.HasSetting(CustomEPGGenreImages)</visible>
        </control>
        <control type="image" id="14">
            <!--Button NF epg genre-->
            <posx>1</posx>
            <posy>0</posy>
            <width>50</width>
            <height>92%</height>
            <visible>Skin.HasSetting(ShowEpgGenreColors)</visible>
            <texture border="6" fallback="special://profile/addon_data/custom-epg-genres/0.png">$VAR[PVRGuideGenreColorsVar]</texture>
            <visible>Skin.HasSetting(CustomEPGGenreImages)</visible>
        </control>
        
        <!--Watched Overlay-->
        <include>PVRWatchedIndicator</include>
        
        <control type="label" id="1">
            <!--Channel Now Playing (with recording or timer active)-->
            <visible>[ListItem.IsRecording | ListItem.HasTimer | ListItem.IsPlaying]</visible>
            <posx>0</posx>
            <posy>0</posy>
            <width>0</width>
            <height>92%</height>
            <include condition="!String.IsEqual(Skin.String(GuideRows),7)">Font_Reg24</include>
            <include condition="Skin.String(GuideRows, 7)">Font_Reg31</include>
            <aligny>center</aligny>
            <textoffsetx>55</textoffsetx>
            <textcolor>$INFO[Skin.String(PVRGuideItemTextColorUnfocus)]</textcolor>
            <label>$INFO[ListItem.Label]</label>
        </control>
        
        <control type="label" id="1">
            <!--Channel Now Playing-->
            <visible>![ListItem.IsRecording | ListItem.HasTimer | ListItem.IsPlaying]</visible>
            <posx>0</posx>
            <posy>0</posy>
            <width>0</width>
            <height>92%</height>
            <include condition="!String.IsEqual(Skin.String(GuideRows),7)">Font_Reg24</include>
            <include condition="Skin.String(GuideRows, 7)">Font_Reg31</include>
            <aligny>center</aligny>
            <textoffsetx>15</textoffsetx>
            <textcolor>$INFO[Skin.String(PVRGuideItemTextColorUnfocus)]</textcolor>
            <label>$INFO[ListItem.Label]</label>
        </control>
    </include>
    
    <include name="PVRGuideItemLayoutFocus">
        <!--EPG FOCUS-->
        <control type="image" id="14">
            <!--Button FO-->
            <posx>1</posx>
            <posy>0</posy>
            <width>50</width>
            <height>92%</height>
            <texture border="5" colordiffuse="$INFO[Skin.String(PVRGuideItemColorFocus)]">diffuse/panel.png</texture>
        </control>
        
        <include>PVRWatchedIndicator</include>
        
        <control type="label" id="1">
            <!--Channel Now Playing (with recording or timer active)-->
            <visible>[ListItem.IsRecording | ListItem.HasTimer | ListItem.IsPlaying]</visible>
            <posx>0</posx>
            <posy>0</posy>
            <width>0</width>
            <height>92%</height>
            <include condition="!String.IsEqual(Skin.String(GuideRows),7)">Font_Reg24</include>
            <include condition="Skin.String(GuideRows, 7)">Font_Reg31</include>
            <aligny>center</aligny>
            <textoffsetx>55</textoffsetx>
            <textcolor>$INFO[Skin.String(PVRGuideItemTextColorFocus)]</textcolor>
            <label>$INFO[ListItem.Label]</label>
            <scroll>true</scroll>
        </control>
        
        <control type="label" id="1">
            <!--Channel Now Playing-->
            <visible>![ListItem.IsRecording | ListItem.HasTimer | ListItem.IsPlaying]</visible>
            <posx>0</posx>
            <posy>0</posy>
            <width>0</width>
            <height>92%</height>
            <include condition="!String.IsEqual(Skin.String(GuideRows),7)">Font_Reg24</include>
            <include condition="Skin.String(GuideRows, 7)">Font_Reg31</include>
            <aligny>center</aligny>
            <textoffsetx>15</textoffsetx>
            <textcolor>$INFO[Skin.String(PVRGuideItemTextColorFocus)]</textcolor>
            <label>$INFO[ListItem.Label]</label>
            <scroll>true</scroll>
        </control>
    </include>
    
    <include name="PVRGuideChannelItemLayout">
        <animation effect="fade" end="100" time="200">OnFocus</animation>
        <animation effect="fade" end="80" time="200">UnFocus</animation>
        <control type="group">
            <width>98%</width>
            <height>92%</height>
            
            <control type="image">
                <width>100%</width>
                <height>100%</height>
                <texture colordiffuse="$PARAM[panelcolor]" border="5">diffuse/panel.png</texture>
            </control>
            
            <control type="image">
                <description>Channel Icon with channel name or number present</description>
                <left>2%</left>
                <width>20%</width>
                <height>100%</height>
                <texture background="true">$INFO[ListItem.Icon]</texture>
                <aspectratio align="center" aligny="center">keep</aspectratio>
                <visible>!Skin.HasSetting(HideChannelLogosInGuide)</visible>
                <visible>[!Skin.HasSetting(HideChannelNamesInGuide) + !Skin.HasSetting(HideChannelNumbersInGuide)] | [!Skin.HasSetting(HideChannelNamesInGuide) + Skin.HasSetting(HideChannelNumbersInGuide)]</visible>
            </control>
            <control type="image">
                <description>Channel Icon with channel name and number both NOT present</description>
                <left>2%</left>
                <width>98%</width>
                <height>100%</height>
                <texture background="true">$INFO[ListItem.Icon]</texture>
                <aspectratio align="center" aligny="center">keep</aspectratio>
                <visible>!Skin.HasSetting(HideChannelLogosInGuide)</visible>
                <visible>Skin.HasSetting(HideChannelNamesInGuide) + Skin.HasSetting(HideChannelNumbersInGuide)</visible>
            </control>
            <control type="image">
                <description>Channel Icon with only channel number present</description>
                <left>2%</left>
                <width>46%</width>
                <height>100%</height>
                <texture background="true">$INFO[ListItem.Icon]</texture>
                <aspectratio align="center" aligny="center">keep</aspectratio>
                <visible>!Skin.HasSetting(HideChannelLogosInGuide)</visible>
                <visible>Skin.HasSetting(HideChannelNamesInGuide) + !Skin.HasSetting(HideChannelNumbersInGuide)</visible>
            </control>
            <control type="label">
                <description>Channel Nummber with logo and channelname present</description>
                <left>24%</left>
                <width>20%</width>
                <height>100%</height>
                <font>$PARAM[font]</font>
                <align>center</align>
                <textcolor>$PARAM[textcolor]</textcolor>
                <selectedcolor>$PARAM[textcolor]</selectedcolor>
                <info>ListItem.ChannelNumberLabel</info>
                <visible>!Skin.HasSetting(HideChannelNumbersInGuide) + !Skin.HasSetting(HideChannelLogosInGuide) + !Skin.HasSetting(HideChannelNamesInGuide)</visible>
            </control>
            <control type="label">
                <description>Channel Number with logo disabled and channelname present</description>
                <left>2%</left>
                <width>20%</width>
                <height>100%</height>
                <font>$PARAM[font]</font>
                <align>center</align>
                <textcolor>$PARAM[textcolor]</textcolor>
                <selectedcolor>$PARAM[textcolor]</selectedcolor>
                <info>ListItem.ChannelNumberLabel</info>
                <visible>!Skin.HasSetting(HideChannelNumbersInGuide) + Skin.HasSetting(HideChannelLogosInGuide) + !Skin.HasSetting(HideChannelNamesInGuide)</visible>
            </control>
            <control type="label">
                <description>Channel Number with logo enabled and channelname not present</description>
                <left>50%</left>
                <width>50%</width>
                <height>100%</height>
                <font>$PARAM[font]</font>
                <align>center</align>
                <textcolor>$PARAM[textcolor]</textcolor>
                <selectedcolor>$PARAM[textcolor]</selectedcolor>
                <info>ListItem.ChannelNumberLabel</info>
                <visible>!Skin.HasSetting(HideChannelNumbersInGuide) + !Skin.HasSetting(HideChannelLogosInGuide) + Skin.HasSetting(HideChannelNamesInGuide)</visible>
            </control>
            <control type="label">
                <description>Channel Number with logo disabled and channelname disabled</description>
                <left>2%</left>
                <width>98%</width>
                <height>100%</height>
                <font>$PARAM[font]</font>
                <align>center</align>
                <textcolor>$PARAM[textcolor]</textcolor>
                <selectedcolor>$PARAM[textcolor]</selectedcolor>
                <info>ListItem.ChannelNumberLabel</info>
                <visible>!Skin.HasSetting(HideChannelNumbersInGuide) + Skin.HasSetting(HideChannelLogosInGuide) + Skin.HasSetting(HideChannelNamesInGuide)</visible>
            </control>
            <control type="label">
                <description>Channel Name with logo and channel number enabled</description>
                <left>46%</left>
                <width>54%</width>
                <height>100%</height>
                <font>$PARAM[font]</font>
                <textcolor>$PARAM[textcolor]</textcolor>
                <selectedcolor>$PARAM[textcolor]</selectedcolor>
                <label>$INFO[ListItem.ChannelName]</label>
                <visible>!Skin.HasSetting(HideChannelNamesInGuide) + !Skin.HasSetting(HideChannelLogosInGuide) + !Skin.HasSetting(HideChannelNumbersInGuide)</visible>
            </control>
            <control type="label">
                <description>Channel Name with logo disabled and channel number enabled</description>
                <left>26%</left>
                <width>74%</width>
                <height>100%</height>
                <font>$PARAM[font]</font>
                <textcolor>$PARAM[textcolor]</textcolor>
                <selectedcolor>$PARAM[textcolor]</selectedcolor>
                <label>$INFO[ListItem.ChannelName]</label>
                <visible>!Skin.HasSetting(HideChannelNamesInGuide) + Skin.HasSetting(HideChannelLogosInGuide) + !Skin.HasSetting(HideChannelNumbersInGuide)</visible>
            </control>
            <control type="label">
                <description>Channel Name with logo enabled and channel number disabled</description>
                <left>26%</left>
                <width>74%</width>
                <height>100%</height>
                <font>$PARAM[font]</font>
                <textcolor>$PARAM[textcolor]</textcolor>
                <selectedcolor>$PARAM[textcolor]</selectedcolor>
                <label>$INFO[ListItem.ChannelName]</label>
                <visible>!Skin.HasSetting(HideChannelNamesInGuide) + !Skin.HasSetting(HideChannelLogosInGuide) + Skin.HasSetting(HideChannelNumbersInGuide)</visible>
            </control>
            <control type="label">
                <description>Channel Name with logo disabled and channel number disabled</description>
                <left>2%</left>
                <width>98%</width>
                <height>100%</height>
                <font>$PARAM[font]</font>
                <textcolor>$PARAM[textcolor]</textcolor>
                <selectedcolor>$PARAM[textcolor]</selectedcolor>
                <label>$INFO[ListItem.ChannelName]</label>
                <visible>!Skin.HasSetting(HideChannelNamesInGuide) + Skin.HasSetting(HideChannelLogosInGuide) + Skin.HasSetting(HideChannelNumbersInGuide)</visible>
            </control>
        </control>
    </include>

    <include name="View_Forced">
        <visible>
            [Container.Content(games) + [String.IsEqual(Skin.String(Skin.ForcedView.games),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.games))]] |
            [Container.Content(movies) + [String.IsEqual(Skin.String(Skin.ForcedView.movies),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.movies))]] |
            [Container.Content(sets) + [String.IsEqual(Skin.String(Skin.ForcedView.sets),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.sets))]] |
            [Container.Content(tvshows) + [String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]] |
            [Container.Content(seasons) + [String.IsEqual(Skin.String(Skin.ForcedView.seasons),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]] |
            [Container.Content(episodes) + [String.IsEqual(Skin.String(Skin.ForcedView.episodes),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.episodes))]] |
            [Container.Content(actors) + [String.IsEqual(Skin.String(Skin.ForcedView.actors),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.actors))]] |
            [Container.Content(artists) + [String.IsEqual(Skin.String(Skin.ForcedView.artists),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.artists))]] |
            [Container.Content(albums) + [String.IsEqual(Skin.String(Skin.ForcedView.albums),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.albums))]] |
            [Container.Content(songs) + [String.IsEqual(Skin.String(Skin.ForcedView.songs),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.songs))]] |
            [Container.Content(addons) + [String.IsEqual(Skin.String(Skin.ForcedView.addons),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.addons))]] |
            [Container.Content(genres) + [String.IsEqual(Skin.String(Skin.ForcedView.genres),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.genres))]] |
            [Container.Content(images) + [String.IsEqual(Skin.String(Skin.ForcedView.images),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.images))]] |
            [Container.Content(videos) + [String.IsEqual(Skin.String(Skin.ForcedView.videos),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.videos))]] |
            [Container.Content() + [String.IsEqual(Skin.String(Skin.ForcedView.),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.))]] |
            [Container.Content(tags) + [String.IsEqual(Skin.String(Skin.ForcedView.tags),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.tags))]] |
            [Container.Content(years) + [String.IsEqual(Skin.String(Skin.ForcedView.years),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.years))]] |
            [Container.Content(countries) + [String.IsEqual(Skin.String(Skin.ForcedView.countries),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.countries))]] |
            [Container.Content(studios) + [String.IsEqual(Skin.String(Skin.ForcedView.studios),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.studios))]] |
            [Container.Content(playlists) + [String.IsEqual(Skin.String(Skin.ForcedView.playlists),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]] |
            [Container.Content(musicvideos) + [String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]] |
            [Container.Content(directors) + [String.IsEqual(Skin.String(Skin.ForcedView.directors),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.directors))]] |
            [Container.Content(files) + [String.IsEqual(Skin.String(Skin.ForcedView.files),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.files))]] |
            [Container.Content(mixed) + [String.IsEqual(Skin.String(Skin.ForcedView.mixed),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]] |
            [Container.Content(unknown) + [String.IsEqual(Skin.String(Skin.ForcedView.unknown),$PARAM[viewtype]) | String.IsEmpty(Skin.String(Skin.ForcedView.unknown))]] |
            [!Container.Content(games) + !Container.Content(movies) + !Container.Content(sets) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + !Container.Content(actors) + !Container.Content(artists) + !Container.Content(albums) + !Container.Content(songs) + !Container.Content(addons) + !Container.Content(genres) + !Container.Content(images) + !Container.Content(videos) + !Container.Content() + !Container.Content(tags) + !Container.Content(years) + !Container.Content(countries) + !Container.Content(studios) + !Container.Content(playlists) + !Container.Content(musicvideos) + !Container.Content(directors) + !Container.Content(files) + !Container.Content(mixed) + !Container.Content(unknown)]
            | Window.IsVisible(MyPlaylist.xml)
        </visible>
    </include>

    <include name="Items_LockUnlock">
        <onclick condition="[Container.Content() + !String.IsEmpty(Skin.String(Skin.ForcedView.))]">Skin.Reset(Skin.ForcedView.)</onclick>
        <onclick condition="[Container.Content(tags) + !String.IsEmpty(Skin.String(Skin.ForcedView.tags))]">Skin.Reset(Skin.ForcedView.tags)</onclick>
        <onclick condition="[Container.Content(years) + !String.IsEmpty(Skin.String(Skin.ForcedView.years))]">Skin.Reset(Skin.ForcedView.years)</onclick>
        <onclick condition="[Container.Content(genres) + !String.IsEmpty(Skin.String(Skin.ForcedView.genres))]">Skin.Reset(Skin.ForcedView.genres)</onclick>
        <onclick condition="[Container.Content(countries) + !String.IsEmpty(Skin.String(Skin.ForcedView.countries))]">Skin.Reset(Skin.ForcedView.countries)</onclick>
        <onclick condition="[Container.Content(studios) + !String.IsEmpty(Skin.String(Skin.ForcedView.studios))]">Skin.Reset(Skin.ForcedView.studios)</onclick>
        <onclick condition="[Container.Content(playlists) + !String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]">Skin.Reset(Skin.ForcedView.playlists)</onclick>
        <onclick condition="[Container.Content(movies) + !String.IsEmpty(Skin.String(Skin.ForcedView.movies))]">Skin.Reset(Skin.ForcedView.movies)</onclick>
        <onclick condition="[Container.Content(sets) + !String.IsEmpty(Skin.String(Skin.ForcedView.sets))]">Skin.Reset(Skin.ForcedView.sets)</onclick>
        <onclick condition="[Container.Content(tvshows) + !String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]">Skin.Reset(Skin.ForcedView.tvshows)</onclick>
        <onclick condition="[Container.Content(seasons) + !String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]">Skin.Reset(Skin.ForcedView.seasons)</onclick>
        <onclick condition="[Container.Content(episodes) + !String.IsEmpty(Skin.String(Skin.ForcedView.episodes))]">Skin.Reset(Skin.ForcedView.episodes)</onclick>
        <onclick condition="[Container.Content(artists) + !String.IsEmpty(Skin.String(Skin.ForcedView.artists))]">Skin.Reset(Skin.ForcedView.artists)</onclick>
        <onclick condition="[Container.Content(albums) + !String.IsEmpty(Skin.String(Skin.ForcedView.albums))]">Skin.Reset(Skin.ForcedView.albums)</onclick>
        <onclick condition="[Container.Content(songs) + !String.IsEmpty(Skin.String(Skin.ForcedView.songs))]">Skin.Reset(Skin.ForcedView.songs)</onclick>
        <onclick condition="[Container.Content(musicvideos) + !String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]">Skin.Reset(Skin.ForcedView.musicvideos)</onclick>
        <onclick condition="[Container.Content(addons) + !String.IsEmpty(Skin.String(Skin.ForcedView.addons))]">Skin.Reset(Skin.ForcedView.addons)</onclick>
        <onclick condition="[Container.Content(actors) + !String.IsEmpty(Skin.String(Skin.ForcedView.actors))]">Skin.Reset(Skin.ForcedView.actors)</onclick>
        <onclick condition="[Container.Content(directors) + !String.IsEmpty(Skin.String(Skin.ForcedView.directors))]">Skin.Reset(Skin.ForcedView.directors)</onclick>
        <onclick condition="[Container.Content(files) + !String.IsEmpty(Skin.String(Skin.ForcedView.files))]">Skin.Reset(Skin.ForcedView.files)</onclick>
        <onclick condition="[Container.Content(mixed) + !String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]">Skin.Reset(Skin.ForcedView.mixed)</onclick>
        <onclick condition="[Container.Content(images) + !String.IsEmpty(Skin.String(Skin.ForcedView.images))]">Skin.Reset(Skin.ForcedView.images)</onclick>
        <onclick condition="[Container.Content(games) + !String.IsEmpty(Skin.String(Skin.ForcedView.games))]">Skin.Reset(Skin.ForcedView.games)</onclick>
        <onclick condition="[Container.Content(unknown) + !String.IsEmpty(Skin.String(Skin.ForcedView.unknown))]">Skin.Reset(Skin.ForcedView.unknown)</onclick>
        <onclick condition="[Container.Content(videos) + !String.IsEmpty(Skin.String(Skin.ForcedView.videos))]">Skin.Reset(Skin.ForcedView.videos)</onclick>
    </include>

    <include name="Items_LockView">
        <onclick condition="[Container.Content() + String.IsEmpty(Skin.String(Skin.ForcedView.))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(tags) + String.IsEmpty(Skin.String(Skin.ForcedView.tags))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(years) + String.IsEmpty(Skin.String(Skin.ForcedView.years))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(genres) + String.IsEmpty(Skin.String(Skin.ForcedView.genres))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(countries) + String.IsEmpty(Skin.String(Skin.ForcedView.countries))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(studios) + String.IsEmpty(Skin.String(Skin.ForcedView.studios))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(playlists) + String.IsEmpty(Skin.String(Skin.ForcedView.playlists))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(movies) + String.IsEmpty(Skin.String(Skin.ForcedView.movies))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(sets) + String.IsEmpty(Skin.String(Skin.ForcedView.sets))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(tvshows) + String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(seasons) + String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(episodes) + String.IsEmpty(Skin.String(Skin.ForcedView.episodes))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(artists) + String.IsEmpty(Skin.String(Skin.ForcedView.artists))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(albums) + String.IsEmpty(Skin.String(Skin.ForcedView.albums))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(songs) + String.IsEmpty(Skin.String(Skin.ForcedView.songs))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(musicvideos) + String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(addons) + String.IsEmpty(Skin.String(Skin.ForcedView.addons))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(actors) + String.IsEmpty(Skin.String(Skin.ForcedView.actors))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(directors) + String.IsEmpty(Skin.String(Skin.ForcedView.directors))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(files) + String.IsEmpty(Skin.String(Skin.ForcedView.files))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(mixed) + String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(images) + String.IsEmpty(Skin.String(Skin.ForcedView.images))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(games) + String.IsEmpty(Skin.String(Skin.ForcedView.games))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(unknown) + String.IsEmpty(Skin.String(Skin.ForcedView.unknown))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
        <onclick condition="[Container.Content(videos) + String.IsEmpty(Skin.String(Skin.ForcedView.videos))]">AlarmClock(setviewlock,Skin.SetString(Skin.ForcedView.$INFO[Container.Content],$INFO[Container.Viewmode]),00:01,silent)</onclick>
    </include>


</includes>