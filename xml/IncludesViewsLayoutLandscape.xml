<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>
    <!-- THUMBS LAYOUT (SMALL LANDSCAPE) -->
    <include name="ThumbsViewLayout">
        <control type="image">
            <!--Panel Normal-->
            <texture background="true">home/home_matte2.png</texture>
            <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
            <include>thumbsborder_unfocused</include>
            <visible>![Window.IsActive(Home) + Skin.HasSetting(Home_TransParentTiles)]</visible>
        </control>
        <include>ThumbsViewItemLayout</include>
     </include>
    <include name="ThumbsViewLayoutFocus">
        <include condition="![String.IsEqual(Skin.String(HomeLayout),bingie) + Skin.HasSetting(EnableFixedFrameWidgets) + Skin.HasSetting(EnableFixedFocusWidgets) + [[Window.IsActive(Home) | $EXP[IsBingieListsActive]] | [[$EXP[IsBingieHubsActive]] + Skin.HasSetting(LockHubWidgets)]]]">ThumbsFO</include>
        <control type="image">
            <!--focus image-->
            <texture border="5">home/home_focus.png</texture>
            <colordiffuse>$VAR[ViewDetailsBorderFocusColor]</colordiffuse>
            <aspectratio>stretch</aspectratio>
            <visible>[Window.IsActive(Home) + Skin.HasSetting(Home_TransParentTiles)]</visible>
            <bordersize>-4</bordersize>
        </control>
        <include>ThumbsViewItemLayout</include>
    </include>
    <include name="ThumbsViewItemLayout">
        <control type="image">
            <!--thumb image-->
            <bordersize>8</bordersize>
            <texture background="true" diffuse="home/home_matte2.png" fallback="colors/color_keyboard.png">$VAR[LandscapeImage]</texture>
            <aspectratio scalediffuse="false" align="center" aligny="center">stretch</aspectratio>
            <visible>![!String.IsEmpty(ListItem.Art(thumb)) + String.IsEqual(ListItem.Art(thumb),ListItem.Property(channellogo))]</visible>
            <visible>String.IsEmpty(ListItem.Property(defaultID))</visible>
        </control>
        <control type="image">
            <!--fallback logo image-->
            <bordersize>30</bordersize>
            <texture background="true">$VAR[ClearLogoFallback]</texture>
            <aspectratio scalediffuse="false" align="center" aligny="bottom">keep</aspectratio>
            <visible>String.IsEmpty(Listitem.Art(landscape)) + String.IsEmpty(ListItem.Property(landscape)) + !String.IsEqual(ListItem.DBTYPE,episode) + !String.IsEqual(ListItem.Property(DBTYPE),episode) + !Container.Content(episodes) + !String.IsEqual(ListItem.DBTYPE,season) + !String.IsEqual(ListItem.Property(DBTYPE),season)</visible>
            <visible>String.IsEmpty(ListItem.Property(defaultID))</visible>
        </control>
        <control type="multiimage">
            <!--thumb image for home tiles-->
            <left>8</left>
            <right>8</right>
            <top>8</top>
            <bottom>8</bottom>
            <imagepath background="true" diffuse="home/home_matte2.png" fallback="home/titan.png">$INFO[ListItem.Icon]</imagepath>
            <aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
            <include>fanartSpeed</include>
            <fadetime>450</fadetime>
            <include condition="Skin.HasSetting(RandomizeBackground)">randomizeImages</include>
            <visible>!String.IsEmpty(ListItem.Property(defaultID))</visible>
        </control>
        <include condition="!$EXP[IsBingieViewsActive]">ThumbsTagOverlay</include>
        <include condition="!$EXP[IsBingieViewsActive]">New_Episodes_Tag_Overlay</include>
        <control type="group">
            <!--Watched Overlay-->
            <right>8</right>
            <top>8</top>
            <animation effect="slide" end="-1,1" time="0" condition="!Skin.HasTheme(skindefault)">Conditional</animation>
            <include content="WatchedIndicatorLayout">
                <param name="width" value="60" />
                <param name="height" value="60" />
                <param name="font" value="indicator_small" />
                <param name="overlay" value="normal" />
                <param name="overlay_texture" value="diffuse/icon_overlay_landscape.png" />
            </include>
        </control>
    </include>

    <include name="ThumbsFO">
        <control type="image">
            <include>ThumbsFO_Defs</include>
            <include>thumbsborder_focused</include>
        </control>
    </include>

    <include name="ThumbsFO_Defs">
        <texture background="true">home/home_matte2.png</texture>
        <colordiffuse>$VAR[ViewDetailsBorderFocusColor]</colordiffuse>
        <visible>![Window.IsActive(Home) + Skin.HasSetting(Home_TransParentTiles)]</visible>
    </include>
    
    <variable name="ClearLogoFallback">
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!Skin.HasSetting(SkinHelper.EnablePVRThumbs) + String.StartsWith(ListItem.FileNameAndPath, pvr://) + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!Skin.HasSetting(SkinHelper.EnablePVRThumbs) + !String.IsEmpty(ListItem.Art(thumb)) + String.IsEqual(ListItem.Art(thumb),ListItem.Property(channellogo))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Skin.HasSetting(SkinHelper.EnablePVRThumbs) + String.StartsWith(ListItem.FileNameAndPath, pvr://)">http://localhost:52307/getthumb&amp;title=$ESCINFO[ListItem.Title]</value>
    </variable>
    
    <!-- LANDSCAPE LAYOUT -->
    <include name="LandscapeLayout">
		<control type="image">
            <!--background-->
            <texture diffuse="home/home_matte2.png">colors/color_white.png</texture>
			<colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
            <aspectratio>stretch</aspectratio>
            <include>thumbsborder_unfocused</include>
            <visible>![Window.IsActive(Home) + Skin.HasSetting(Home_TransParentTiles)]</visible>
        </control>
        <include>LandscapeItemLayout</include>
    </include>
    <include name="LandscapeLayoutFocus">
        <control type="image">
            <!--focus image-->
            <texture diffuse="home/home_matte2.png">colors/color_white.png</texture>
            <colordiffuse>$VAR[ViewDetailsBorderFocusColor]</colordiffuse>
            <aspectratio>stretch</aspectratio>
            <include>thumbsborder_focused</include>
            <visible>![Window.IsActive(Home) + Skin.HasSetting(Home_TransParentTiles)]</visible>
        </control>
        <control type="image">
            <!--focus image-->
            <texture border="5">home/home_focus.png</texture>
            <colordiffuse>$VAR[ViewDetailsBorderFocusColor]</colordiffuse>
            <aspectratio>stretch</aspectratio>
            <visible>[Window.IsActive(Home) + Skin.HasSetting(Home_TransParentTiles)]</visible>
            <bordersize>-4</bordersize>
        </control>
        <include>LandscapeItemLayout</include>
    </include>
    <include name="LandscapeItemLayout">
        <control type="image">
            <!--Panel icon image-->
			<bordersize>8</bordersize>
            <texture background="true" diffuse="home/home_matte2.png" fallback="colors/color_keyboard.png">$VAR[LandscapeImage]</texture>
            <aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
            <visible>![!String.IsEmpty(ListItem.Art(thumb)) + String.IsEqual(ListItem.Art(thumb),ListItem.Property(channellogo))]</visible>
            <visible>String.IsEmpty(ListItem.Property(defaultID))</visible>
        </control>
        <control type="image">
            <!--fallback logo image-->
            <posx>0</posx>
            <posy>0</posy>
            <bordersize>30</bordersize>
            <texture background="true">$VAR[ClearLogoFallback]</texture>
            <aspectratio scalediffuse="false" align="center" aligny="bottom">keep</aspectratio>
            <visible>String.IsEmpty(Listitem.Art(landscape)) + String.IsEmpty(ListItem.Property(landscape)) + !String.IsEqual(ListItem.DBTYPE,episode) + !String.IsEqual(ListItem.Property(DBTYPE),episode) + !Container.Content(episodes)</visible>
            <visible>String.IsEmpty(ListItem.Property(defaultID))</visible>
        </control>
        <control type="multiimage">
            <!--thumb image for home tiles-->
            <left>8</left>
            <right>8</right>
            <top>8</top>
            <bottom>8</bottom>
            <imagepath background="true" diffuse="home/home_matte2.png" fallback="home/titan.png">$INFO[ListItem.Icon]</imagepath>
            <aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
            <include>fanartSpeed</include>
            <fadetime>450</fadetime>
            <include condition="Skin.HasSetting(RandomizeBackground)">randomizeImages</include>
            <visible>!String.IsEmpty(ListItem.Property(defaultID))</visible>
        </control>
        <include condition="!Window.IsActive(Home)">LandscapeTagOverlay</include>
		<control type="group">
			<right>8</right>
			<top>8</top>
            <animation effect="slide" end="-2,2" time="0" condition="!Skin.HasTheme(skindefault)">Conditional</animation>
			<include content="WatchedIndicatorLayout">
                <param name="width" value="80" />
                <param name="height" value="80" />
                <param name="font" value="indicator_normal" />
                <param name="labeloffsetx" value="-30" />
                <param name="labeloffsety" value="-4" />
                <param name="overlay" value="normal" />
                <param name="overlay_texture" value="diffuse/icon_overlay_landscape.png" />
            </include>
		 </control>
    </include>
    
    <!-- TAG OVERLAYS -->
	<include name="LandscapeTagOverlayVisibility">
        <visible>
            ![String.IsEmpty(ListItem.DBType) + [String.IsEqual(ListItem.Property(DBTYPE),categorie) | String.IsEqual(ListItem.Property(DBTYPE),category)]] +
            ![String.IsEmpty(ListItem.DBType) + String.IsEqual(ListItem.Property(DBTYPE),genre) + System.HasAddon(resource.images.moviegenreicons.bingie)] +
            ![Control.IsVisible(501) + Skin.String(View501.Tags,disable)] +
            ![Control.IsVisible(502) + Skin.String(View502.Tags,disable)] + 
            ![Control.IsVisible(505) + Skin.String(View505.Tags,disable)] + 
            ![[!Window.IsActive(Home) + Control.IsVisible(511)] + Skin.String(View511.Tags,disable)] + 
            ![Control.IsVisible(512) + Skin.String(View512.Tags,disable)] + 
            ![Control.IsVisible(523) + Skin.String(View523.Tags,disable)] + 
            ![Skin.HasSetting(NoTitleOnHomeMenuTiles) + !String.IsEmpty(ListItem.Property(defaultID))] + 
            !String.IsEqual(ListItem.Property(disableLabel), disable) +
            !String.IsEqual(ListItem.Label,..)
        </visible>
        <visible>
            [Control.IsVisible(501) + Skin.String(View501.Tags,enable)] |
            [Control.IsVisible(502) + Skin.String(View502.Tags,enable)] | 
            [Control.IsVisible(505) + Skin.String(View505.Tags,enable)] | 
            [[!Window.IsActive(Home) + Control.IsVisible(511)] + Skin.String(View511.Tags,enable)] | 
            [Control.IsVisible(512) + Skin.String(View512.Tags,enable)] | 
            [Control.IsVisible(523) + Skin.String(View523.Tags,enable)] | 
            [String.IsEmpty(ListItem.Art(landscape)) + String.IsEmpty(ListItem.Art(clearlogo)) + !String.Contains(ListItem.Art(thumb),icon.png)] |
            [String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] |
            !String.IsEmpty(ListItem.Property(defaultID))
        </visible>
	</include>
	<include name="ThumbsTagOverlay">
        <control type="image">
            <!--Panel Ovelay-->
            <visible>![$EXP[IsTvShowDBType] + $EXP[IsTVShowInLastEpisodes]]</visible>
            <bordersize>8</bordersize>
            <texture diffuse="home/home_matte2.png">diffuse/home_overlay.png</texture>
            <include condition="!Window.IsActive(Home)">LandscapeTagOverlayVisibility</include>
            <colordiffuse>$INFO[Skin.String(TagOverlaysPanelColor)]</colordiffuse>
        </control>
        <control type="textbox">
            <!--Label-->
            <visible>![$EXP[IsTvShowDBType] + $EXP[IsTVShowInLastEpisodes]]</visible>
            <left>16</left>
            <right>16</right>
            <bottom>10</bottom>
            <height>50</height>
            <include condition="Skin.HasSetting(ThumbsLabelAlignmentCenter)">align_center</include>
            <align>left</align>
            <aligny>center</aligny>
            <label>$VAR[ThumbListDetails]</label>
            <font>Reg20</font>
            <textcolor>$INFO[Skin.String(TagOverlaysTextColor)]</textcolor>
            <include condition="!Window.IsActive(Home)">LandscapeTagOverlayVisibility</include>
        </control>
    </include>
    <include name="ThumbsTagOverlaySmall">
        <control type="image">
            <!--Panel Ovelay-->
            <bordersize>8</bordersize>
            <texture diffuse="home/home_matte2.png">diffuse/home_overlay.png</texture>
            <include condition="!Window.IsActive(Home)">LandscapeTagOverlayVisibility</include>
            <colordiffuse>$INFO[Skin.String(TagOverlaysPanelColor)]</colordiffuse>
        </control>
        <control type="textbox">
            <!--Label-->
            <left>12</left>
            <right>12</right>
            <bottom>8</bottom>
            <height>40</height>
            <include condition="Skin.HasSetting(ThumbsLabelAlignmentCenter)">align_center</include>
            <align>left</align>
            <aligny>center</aligny>
            <label>$VAR[ThumbListDetails]</label>
            <font>Reg16</font>
            <textcolor>$INFO[Skin.String(TagOverlaysTextColor)]</textcolor>
            <include condition="!Window.IsActive(Home)">LandscapeTagOverlayVisibility</include>
        </control>
    </include>
    <include name="LandscapeTagOverlay">
        <control type="image">
            <!--Panel Overlay-->
			<bordersize>8</bordersize>
            <texture diffuse="home/home_matte2.png">diffuse/home_overlay.png</texture>
            <include condition="!Window.IsActive(Home)">LandscapeTagOverlayVisibility</include>
            <colordiffuse>$INFO[Skin.String(TagOverlaysPanelColor)]</colordiffuse>
        </control>
        <control type="textbox">
            <!--Label-->
            <left>8</left>
            <right>8</right>
            <bottom>8</bottom>
            <height>33%</height>
            <include condition="Skin.HasSetting(ThumbsLabelAlignmentCenter)">align_center</include>
            <align>left</align>
            <aligny>center</aligny>
            <label>$VAR[ThumbListDetails]</label>
            <font>Reg38</font>
            <textcolor>$INFO[Skin.String(TagOverlaysTextColor)]</textcolor>
            <include condition="!Window.IsActive(Home)">LandscapeTagOverlayVisibility</include>
        </control>
    </include>

    <!-- New Episodes Tag Overlay -->
    <include name="New_Episodes_Tag_Overlay">
        <control type="group">
            <visible>!Skin.HasSetting(DisableNewEpisodesIndicator)</visible>
            <visible>$EXP[IsTvShowDBType] + $EXP[IsTVShowInLastEpisodes]</visible>
            <width>100%</width>
            <height>25</height>
            <left>100</left>
            <bottom>13</bottom>
            <animation effect="slide" end="1,4" time="0" condition="!Skin.HasTheme(skindefault)">Conditional</animation>
            <control type="button">
                <width min="150" max="351">auto</width>
                <height>100%</height>
                <onclick>noop</onclick>
                <align>center</align>
                <aligny>top</aligny>
                <font>Bold18</font>
                <textoffsety>0</textoffsety>
                <label>[B]$LOCALIZE[31007][/B]</label>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <focusedcolor>$INFO[Skin.String(ViewDetailsTextColor)]</focusedcolor>
                <textoffsetx>5</textoffsetx>
                <texturefocus colordiffuse="$INFO[Skin.String(BingieNewEpisodesTagColor)]">colors/color_white.png</texturefocus>
                <texturenofocus colordiffuse="$INFO[Skin.String(BingieNewEpisodesTagColor)]">colors/color_white.png</texturenofocus>
            </control>
        </control>
    </include>

    <variable name="LandscapeImage">
		<value condition="!String.IsEmpty(ListItem.Art(thumb)) + [String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] + ![Window.IsActive(Home) + Skin.HasSetting(PreferTvShowThumbWidget)]">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb)) + [String.IsEqual(ListItem.Property(DBTYPE),category) | String.Contains(ListItem.Path,youtube)]">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Skin.HasSetting(PreferClearArtOverLandscape) + !String.IsEmpty(ListItem.Art(clearart)) + !Skin.HasSetting(DisableLandscapeThumbs)">$INFO[ListItem.Art(clearart)]</value>
        <value condition="Skin.HasSetting(PreferClearArtOverLandscape) + !String.IsEmpty(ListItem.Art(tvshow.clearart)) + !Skin.HasSetting(DisableLandscapeThumbs)">$INFO[ListItem.Art(tvshow.clearart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(season.landscape)) + !Skin.HasSetting(DisableLandscapeThumbs)">$INFO[ListItem.Art(season.landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape)) + !Skin.HasSetting(DisableLandscapeThumbs)">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape)) + !Skin.HasSetting(DisableLandscapeThumbs)">$INFO[ListItem.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart)) + !String.IsEmpty(ListItem.DBType)">$INFO[ListItem.Art(tvshow.fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart)) + !String.IsEmpty(ListItem.DBType)">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(landscape))">$INFO[ListItem.Property(landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
		<value condition="String.IsEqual(ListItem.Label,..)">dialogs/filebrowser/DefaultFolderBack2.png</value>
        <value condition="[Container.Content(genres) | String.IsEqual(ListItem.DBTYPE,genre)] + String.Contains(ListItem.FolderPath,video)">$VAR[MovieGenreIconVarList]</value>
        <value condition="[Container.Content(genres) | String.IsEqual(ListItem.DBTYPE,genre)] + [Window.IsActive(music) | String.Contains(ListItem.Folderpath,music)]">$VAR[MusicGenreIconVarList]</value>
        <value condition="String.IsEmpty(ListItem.DBType) + String.IsEqual(ListItem.Property(DBTYPE),genre)">$VAR[BingieGenreIconVarList]</value>
        <value condition="String.IsEmpty(ListItem.DBType) + String.IsEqual(ListItem.Property(DBTYPE),categorie)">$VAR[CategoriesBricks]</value>
        <value condition="Window.IsActive(tvrecordings) + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="Container.Content(studios)">$INFO[ListItem.Label,special://skin/extras/flags/studios/,.png]</value>
		<value condition="Container.Content(actors) + String.IsEmpty(ListItem.Art(thumb))">resource://resource.images.skinicons.wide/ActorPoster.png</value>
		<value condition="Container.Content(directors) + String.IsEmpty(ListItem.Art(thumb))">resource://resource.images.skinicons.wide/ActorPoster.png</value>
		<value condition="Container.Content(artists) + String.IsEmpty(ListItem.Art(thumb))">resource://resource.images.skinicons.wide/artist.png</value>
        <value condition="Container.Content(years)">resource://resource.images.skinicons.wide/year.png</value>
		<value condition="Container.Content(countries)">resource://resource.images.skinicons.wide/Country.png</value>
		<value condition="Container.Content(tags)">resource://resource.images.skinicons.wide/Tags.png</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value condition="!String.IsEmpty(ListItem.EpgEventIcon)">$INFO[ListItem.EpgEventIcon]</value>
    </variable>
</includes>
