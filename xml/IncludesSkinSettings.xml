<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>
    <!-- Skin Settings Menu -->
    <include name="SkinSettings_MenuOptions">
<!-- Homescreen Layout -->
        <control type="togglebutton" id="12">
            <label>31115</label>
            <altlabel>31115</altlabel>
            <onfocus>SetProperty(SkinSettingSection,12,Home)</onfocus>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),12)</usealttexture>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
        </control>
        <!--Configure Shortcuts-->
        <control type="togglebutton" id="9">
            <label>31013</label>
            <altlabel>31013</altlabel>
            <onfocus>SetProperty(SkinSettingSection,9,Home)</onfocus>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),9)</usealttexture>
        </control>
        <!-- General Skin Settings -->        
		<control type="togglebutton" id="6">
            <label>31005</label>
            <altlabel>31005</altlabel>
            <onfocus>SetProperty(SkinSettingSection,6,Home)</onfocus>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),6)</usealttexture>
        </control>
        <!-- Media Library Views -->
		<control type="togglebutton" id="17">
            <label>31221</label>
            <altlabel>31221</altlabel>
            <onfocus>SetProperty(SkinSettingSection,17,Home)</onfocus>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),17)</usealttexture>
        </control>
        <!--PVR settings-->
		<control type="togglebutton" id="18">
            <label>31088</label>
            <altlabel>31088</altlabel>
            <onfocus>SetProperty(SkinSettingSection,18,Home)</onfocus>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),18)</usealttexture>
            <visible>PVR.HasTVChannels</visible>
        </control>
        <!-- Playback & OSD -->
		<control type="togglebutton" id="16">
            <label>31668</label>
            <altlabel>31668</altlabel>
            <onfocus>SetProperty(SkinSettingSection,16,Home)</onfocus>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),16)</usealttexture>
        </control>
        <!-- Background Settings -->
        <control type="togglebutton" id="8">
            <label>31022</label>
            <altlabel>31022</altlabel>
            <onfocus>SetProperty(SkinSettingSection,8,Home)</onfocus>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),8)</usealttexture>
        </control>
        <!-- Custom Colors Settings -->
        <control type="togglebutton" id="20">
            <label>31667</label>
            <altlabel>31667</altlabel>
            <onfocus>SetProperty(SkinSettingSection,20,Home)</onfocus>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),20)</usealttexture>
        </control>
        <!-- Supported Addons -->
        <control type="togglebutton" id="31">
            <label>31696</label>
            <altlabel>31696</altlabel>
            <onfocus>SetProperty(SkinSettingSection,31,Home)</onfocus>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),31)</usealttexture>
        </control>
		<!-- Smart Shortcuts -->
        <control type="togglebutton" id="19">
            <label>31531</label>
            <altlabel>31531</altlabel>
            <onfocus>SetProperty(SkinSettingSection,19,Home)</onfocus>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),19)</usealttexture>
        </control>
		<!-- Color Themes -->
        <control type="togglebutton" id="15">
            <label>31462</label>
            <altlabel>31462</altlabel>
            <onfocus>SetProperty(SkinSettingSection,15,Home)</onfocus>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),15)</usealttexture>
        </control>
		<!-- Backup & Restore -->
        <control type="togglebutton" id="14">
            <label>31271</label>
            <altlabel>31271</altlabel>
            <onfocus>SetProperty(SkinSettingSection,14,Home)</onfocus>
            <include condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonLarge</include>
            <include condition="Window.IsActive(Custom_1105_SkinSettings.xml)">SkinSettings_MenuButtonSmall</include>
            <usealttexture>String.IsEqual(Window(Home).Property(SkinSettingSection),14)</usealttexture>
        </control>
    </include>

    <!-- Tab Factory -->
    <include name="SkinSettings_Tab">
        <definition>
            <control type="grouplist" id="$PARAM[id]000">
                <description>Control Area</description>
                <width>100%</width>
                <height>96%</height>
                <itemgap>10</itemgap>
                <orientation>vertical</orientation>
                <onup>$PARAM[id]000</onup>
                <ondown>$PARAM[id]000</ondown>
                <onleft condition="!Window.IsActive(Custom_1105_SkinSettings.xml)">100</onleft>
                <onleft condition="Window.IsActive(Custom_1105_SkinSettings.xml)">2000</onleft>
                <onright>3$PARAM[id]</onright>
                <pagecontrol>3$PARAM[id]</pagecontrol>
                <visible>String.IsEqual(Window(Home).Property(SkinSettingSection),$PARAM[id])</visible>
                <nested />
            </control>
            <control type="scrollbar" id="3$PARAM[id]">
                <right>-45</right>
                <height>96%</height>
                <onleft>$PARAM[id]000</onleft>
                <showonepage>false</showonepage>
                <visible>String.IsEqual(Window(Home).Property(SkinSettingSection),$PARAM[id])</visible>
            </control>
        </definition>
    </include>

    <!-- TABS -->
    <!-- Home Tab-->
    <include name="SkinSettings_HomeLayout">
        <include content="SkinSettings_Tab">
            <param name="id" value="12"/>
            <!-- content -->
            <include>Home_Spotlight_Settings</include>
			<include>Home_Widgets_Settings</include>
            <include>Home_Details_Settings</include>
            <include>Home_Footer_Media_Flags_Ratings</include>
            <include>Thumbs_Up_Down_Settings</include>
			<include>Home_Menu_Settings</include>
            <include>Home_General_Settings</include>
        </include>
    </include>

    <!-- Shortcuts Tab-->
    <include name="SkinSettings_Shortcuts">
        <include content="SkinSettings_Tab">
            <param name="id" value="9"/>
            <!-- content -->
            <include>Shortcuts_Config</include>
        </include>
    </include>

    <!-- General Tab-->
    <include name="SkinSettings_General">
        <include content="SkinSettings_Tab">
            <param name="id" value="6"/>
            <!-- content -->
            <include>General_Skin_Settings</include>
            <include>Bingie_Search_Settings</include>
            <include>General_Trailers_Settings</include>
            <include>General_Artwork_Details_Settings</include>
            <include>General_Header_Settings</include>
            <include>General_Thumbs_Border_Settings</include>
            <include>General_Indicators_Settings</include>
            <include>General_Poster_Overlays_Settings</include>
            <include>General_Spinner_Settings</include>
            <include>General_Resources_Settings</include>
            <include>General_Splash_Screen_Settings</include>
            <include>General_Advanced_Settings</include>
            <include>General_Skin_Helper_Settings</include>
        </include>
    </include>

    <!-- Media Library Views Tab-->
    <include name="SkinSettings_Library">
        <include content="SkinSettings_Tab">
            <param name="id" value="17"/>
            <!-- content -->
            <include>Media_Library_Main_Section</include>
            <include>Media_Library_Alphabet_Navigation_Settings</include>
            <include>Media_Library_Flags_Settings</include>
            <include>Media_Library_Video_Dialog_Settings</include>
        </include>
    </include>

    <!-- Live TV Tab-->
    <include name="SkinSettings_PVR">
        <include content="SkinSettings_Tab">
            <param name="id" value="18"/>
            <!-- content -->
            <include>PVR_Settings</include>
        </include>
    </include>

    <!-- OSD Tab-->
    <include name="SkinSettings_OSD">
        <include content="SkinSettings_Tab">
            <param name="id" value="16"/>
            <!-- content -->
            <include>OSD_General_Settings</include>
            <include>OSD_Info_Panel_Settings</include>
            <include>OSD_Video_Playback_Settings</include>
            <include>OSD_Up_Next_Settings</include>
            <include>OSD_Music_Playback_Settings</include>
            <include>OSD_Now_Playing_Settings</include>
        </include>
    </include>

    <!-- Custom Colors Tab-->
    <include name="SkinSettings_CustomColors">
        <include content="SkinSettings_Tab">
            <param name="id" value="20"/>
            <!-- content -->
            <include>CustomColors_General_Colors_Settings</include>
            <include>CustomColors_Library_Colors_Settings</include>
            <include>CustomColors_Bingie_Colors_Settings</include>
            <include>CustomColors_Header_Colors_Settings</include>
            <include>CustomColors_Footer_Colors_Settings</include>
            <include>CustomColors_OSD_Colors_Settings</include>
            <include>CustomColors_PVR_Colors_Settings</include>
        </include>
    </include>

    <!-- Color Themes Tab-->
    <include name="SkinSettings_ColorThemes">
        <include content="SkinSettings_Tab">
            <param name="id" value="15"/>
            <!-- content -->
            <include>ColorThemes_Theme_Settings</include>
            <include>ColorThemes_DayNight_Settings</include>
            <include>ColorThemes_Pallete_Settings</include>
        </include>
    </include>

    <!-- Backgrounds Tab-->
    <include name="SkinSettings_Background">
        <include content="SkinSettings_Tab">
            <param name="id" value="8"/>
            <!-- content -->
            <include>Background_Global_Settings</include>
            <include>Conditional_Background</include>
        </include>
    </include>

    <!-- Smart Shortcuts Tab-->
    <include name="SkinSettings_SmartShortcuts">
        <include content="SkinSettings_Tab">
            <param name="id" value="19"/>
            <!-- content -->
            <include>Smart_Shortcuts_Settings</include>
        </include>
    </include>

    <!-- Supported Addons Tab-->
    <include name="SkinSettings_Addons">
        <include content="SkinSettings_Tab">
            <param name="id" value="31"/>
            <!-- content -->
            <include>Supported_Addons_Settings</include>
        </include>
    </include>

    <!-- Backup Tab-->
    <include name="SkinSettings_Backup">
        <include content="SkinSettings_Tab">
            <param name="id" value="14"/>
            <!-- content -->
            <include>Backup_Settings</include>
        </include>
    </include>

    <!-- Defaults -->
    <!-- Default Skin Settings Button -->
    <include name="SkinSettings_Button">
        <width>100%</width>
        <align>left</align>
        <height>50</height>
        <font>arial26</font>   <!-- always use arial for the skinsettings because of special characters -->
        <textoffsetx>40</textoffsetx>
        <textwidth>950</textwidth>
    </include>

    <!-- Default Skin Settings Header -->
    <include name="SkinSettings_Header">
        <width>100%</width>
        <align>left</align>
        <height>60</height>
        <font>Bold36</font>
        <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
    </include>

    <!-- Default Skin Setting Large Menu Button -->
    <include name="SkinSettings_MenuButtonLarge">
        <font>Reg28</font>
        <width>440</width>
        <align>left</align>
        <alttexturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="5">diffuse/panel.png</alttexturefocus>
        <alttexturenofocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="5">diffuse/panel_trans.png</alttexturenofocus>
    </include>

    <!-- Default Skin Setting Small Menu Button -->
    <include name="SkinSettings_MenuButtonSmall">
        <height>80</height>
        <width>300</width>
        <align>center</align>
        <font>Reg24</font>
        <textoffsetx>20</textoffsetx>
        <selectedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</selectedcolor>
        <textcolor>$INFO[Skin.String(ButtonTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
        <pulseonselect>false</pulseonselect>
        <texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="20">dialogs/keyboard/key-nf.png</texturefocus>
        <texturenofocus colordiffuse="$INFO[Skin.String(ButtonColor)]" border="20">dialogs/keyboard/key-nf.png</texturenofocus>
        <alttexturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="20">dialogs/keyboard/key-nf.png</alttexturefocus>
        <alttexturenofocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="20">dialogs/keyboard/key-nf.png</alttexturenofocus>
    </include>

    <!-- Default Skin Settings Action Button -->
    <include name="SkinSettings_ActionButton">
        <control type="radiobutton" id="$PARAM[id]">
            <include>SkinSettings_Button</include>
            <textureradioonfocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">common/settings1.png</textureradioonfocus>
            <textureradioonnofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">common/settings1.png</textureradioonnofocus>
            <textureradioofffocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">common/settings1.png</textureradioofffocus>
            <textureradiooffnofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">common/settings1.png</textureradiooffnofocus>
            <radiowidth>125</radiowidth>
            <radioheight>40</radioheight>
            <radioposx>0</radioposx>
            <radioposy>5</radioposy>
            <label>$PARAM[label]</label>
            <onclick>$PARAM[action2]</onclick>
            <onclick>$PARAM[action]</onclick>
            <selected>Control.HasFocus($PARAM[id])</selected>
            <visible>$PARAM[visible]</visible>
        </control>
    </include>

    <!-- Default Skin Settings Addon Button -->
    <include name="SkinSettings_AddonButton">
        <control type="radiobutton" id="$PARAM[id]">
            <include>SkinSettings_Button</include>
            <textureradioonfocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">common/settings1.png</textureradioonfocus>
            <textureradioonnofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">common/settings1.png</textureradioonnofocus>
            <textureradioofffocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">common/settings1.png</textureradioofffocus>
            <textureradiooffnofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">common/settings1.png</textureradiooffnofocus>
            <radiowidth>125</radiowidth>
            <radioheight>40</radioheight>
            <radioposx>0</radioposx>
            <radioposy>5</radioposy>
            <include content="SkinSettings_AddonButton_Label" condition="System.HasAddon($PARAM[addon])">
                <param name="label" value="$INFO[System.AddonTitle($PARAM[addon])] ($INFO[System.AddonVersion($PARAM[addon])])" />
            </include>
            <include content="SkinSettings_AddonButton_Label" condition="!System.HasAddon($PARAM[addon])">
                <param name="label" value="$PARAM[addon]" />
            </include>
            <onclick condition="System.HasAddon($PARAM[addon])">Addon.OpenSettings($PARAM[addon])</onclick>
            <onclick condition="!System.HasAddon($PARAM[addon])">RunPlugin(plugin://$PARAM[addon])</onclick>
            <selected>Control.HasFocus($PARAM[id])</selected>
            <animation effect="fade" start="100" end="40" time="0" condition="!System.HasAddon($PARAM[addon])">Conditional</animation>
        </control>
    </include>
    <include name="SkinSettings_AddonButton_Label">
        <label>$PARAM[label]</label>
    </include>

    <!-- Default Skin Settings Color Button -->
    <include name="SkinSettings_ColorButton">
        <control type="button" id="$PARAM[id]">
            <include>SkinSettings_Button</include>
            <label>$PARAM[labelprefix]$PARAM[label]</label>
            <label2>$INFO[Skin.String($PARAM[skinsetting].name)]  [COLOR=$INFO[Skin.String($PARAM[skinsetting])]]███[/COLOR]</label2>
            <onclick condition="System.HasAddon(script.skin.helper.colorpicker)">RunScript(script.skin.helper.colorpicker,action=COLORPICKER,skinstring=$PARAM[skinsetting],header=$PARAM[label],palette=$INFO[Skin.String(defaultcolorpalette)])</onclick>
            <onclick condition="!System.HasAddon(script.skin.helper.colorpicker)">RunPlugin(plugin://script.skin.helper.colorpicker)</onclick>
            <visible>$PARAM[visible]</visible>
        </control>
    </include>

    <!-- Sections Includes -->

    <!-- HOME TAB INCLUDES-->
    <!-- Home Layout Settings -->
    <include name="Home_Layout_Settings">
        <control type="label" id="23001">
            <include>SkinSettings_Header</include>
            <label>31121</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!-- HomeMenu Layout-->
        <control type="button" id="423003">
            <include>SkinSettings_Button</include>
            <label>31121</label>
            <label2>$INFO[Skin.String(HomeLayout.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=HomeLayout,header=$LOCALIZE[31124])</onclick>
        </control>
        <!--Fixed Focus Home Panel-->
        <control type="radiobutton" id="23018">
            <include>SkinSettings_Button</include>
            <label>Fixed Focus Home Panel</label>
            <onclick>Skin.ToggleSetting(UseFixedHomeFocus)</onclick>
            <selected>Skin.HasSetting(UseFixedHomeFocus)</selected>
            <visible>![Skin.HasSetting(UseSingleShortcut) + String.IsEqual(Skin.String(HomeLayout),bingie)]</visible>
            <visible>String.IsEqual(Skin.String(HomeLayout),enhanced) | String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small) | [String.IsEqual(Skin.String(HomeLayout),simplehor) + !Skin.HasSetting(EnhancedHome_Circular)] | [String.Contains(Skin.String(HomeLayout), lowhorizontal) + !Skin.HasSetting(EnhancedHome_Circular)]</visible>
        </control>
        <!--Single Menu Item-->
        <control type="radiobutton" id="131721">
            <include>SkinSettings_Button</include>
            <label>31721</label>
            <onclick>Skin.ToggleSetting(UseSingleShortcut)</onclick>
            <selected>Skin.HasSetting(UseSingleShortcut)</selected>
            <onclick>Skin.Reset(UseFixedHomeFocus)</onclick>
            <onclick>Skin.Reset(EnhancedHome_Circular)</onclick>
            <visible>String.IsEqual(Skin.String(HomeLayout),simplehor)</visible>
        </control>
        <!-- Height of The Tiles-->
        <control type="button" id="31770">
            <include>SkinSettings_Button</include>
            <label>31770</label>
            <label2>$INFO[Skin.String(verthome_tiles_height)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinconstant,setting=verthome_tiles_height,header=$LOCALIZE[31770])</onclick>
            <visible>String.IsEqual(Skin.String(HomeLayout),simplever_tiles)</visible>
        </control>
        <!--submenu after widgets on win10 home-->
        <control type="radiobutton" id="31774">
            <include>SkinSettings_Button</include>
            <label>31774</label>
            <onclick>Skin.ToggleSetting(Win10SubmenuRight)</onclick>
            <visible>String.IsEqual(Skin.String(HomeLayout),win10)</visible>
            <selected>Skin.HasSetting(Win10SubmenuRight)</selected>
        </control>
        <!--left align simple home vertical-->
        <control type="radiobutton" id="131760">
            <include>SkinSettings_Button</include>
            <label>31760</label>
            <onclick>Skin.ToggleSetting(SimpleVerHomeLeftAlign)</onclick>
            <visible>String.Contains(Skin.String(HomeLayout), simplever)</visible>
            <selected>Skin.HasSetting(SimpleVerHomeLeftAlign)</selected>
        </control>
        <!-- colorize custom home tiles -->
        <control type="radiobutton" id="31755">
            <include>SkinSettings_Button</include>
            <label>31755</label>
            <onclick>Skin.ToggleSetting(ColorizeHomeVerticalTiles)</onclick>
            <selected>Skin.HasSetting(ColorizeHomeVerticalTiles)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),simplever_tiles)</visible>
        </control>
        <!--no titles on home tiles-->
        <control type="radiobutton" id="13014">
            <include>SkinSettings_Button</include>
            <label>31086</label>
            <visible>[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),3) | String.IsEqual(Skin.String(HomeLayout),1small) | String.IsEqual(Skin.String(HomeLayout),2small) | String.IsEqual(Skin.String(HomeLayout),3small) | String.IsEqual(Skin.String(HomeLayout),enhanced)]</visible>
            <onclick>Skin.ToggleSetting(NoTitleOnHomeMenuTiles)</onclick>
            <selected>Skin.HasSetting(NoTitleOnHomeMenuTiles)</selected>
        </control>
        <!-- do not uppercase font in modern big home menu layout -->
        <control type="radiobutton" id="31810">
            <include>SkinSettings_Button</include>
            <label>31810</label>
            <onclick>Skin.ToggleSetting(homemenu_nouppercase)</onclick>
            <selected>Skin.HasSetting(homemenu_nouppercase)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),verticalbig) | String.Contains(Skin.String(HomeLayout),hor)</visible>
        </control>
        <!--hide indicators on home tiles-->
        <control type="radiobutton" id="31529">
            <include>SkinSettings_Button</include>
            <label>31529</label>
            <onclick>Skin.ToggleSetting(HideHomeTileIndicators)</onclick>
            <selected>Skin.HasSetting(HideHomeTileIndicators)</selected>
            <visible>[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),1small) | String.IsEqual(Skin.String(HomeLayout),2small) | String.IsEqual(Skin.String(HomeLayout),simplever)]</visible>
            <visible>![Skin.HasSetting(DisableAllWidgets) + Skin.HasSetting(DisableAllSubmenus)]</visible>
        </control>
    </include>

    <!-- Home Spotlight Settings -->
    <include name="Home_Spotlight_Settings">
        <control type="label" id="23002">
            <include>SkinSettings_Header</include>
            <label>31185</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
            <visible>String.IsEqual(Skin.String(HomeLayout),enhanced) | String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        
        <!--Disable Top Row on Bingie Home-->
        <control type="radiobutton" id="23604">
            <include>SkinSettings_Button</include>
            <label>31639</label>
            <onclick>Skin.ToggleSetting(BingieHomeDisableFirstRow)</onclick>
            <onclick condition="Skin.HasSetting(SpotLightTrailers)">Skin.ToggleSetting(SpotLightTrailers)</onclick>
            <onclick condition="Skin.HasSetting(BingieAutoTrailer)">Skin.ToggleSetting(BingieAutoTrailer)</onclick>
            <onclick condition="Skin.HasSetting(EnableFixedFocusWidgets)">Skin.ToggleSetting(EnableFixedFocusWidgets)</onclick>
            <selected>Skin.HasSetting(BingieHomeDisableFirstRow)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!--Disable Spotlight Content-->
        <control type="radiobutton" id="31797">
            <include>SkinSettings_Button</include>
            <label>31881</label>
            <onclick>Skin.ToggleSetting(DisableSpotlightContent)</onclick>
            <selected>Skin.HasSetting(DisableSpotlightContent)</selected>
            <visible>!Skin.HasSetting(BingieHomeDisableFirstRow) + String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!-- Set Spotlight Content to Recommendations Based on Recently Watched -->
        <control type="radiobutton" id="28327">
            <include>SkinSettings_Button</include>
            <label>31842</label>
            <onclick condition="!Skin.HasSetting(SimilarContentSpotlight)"> RunScript(script.skin.helper.service,action=dialogok,header=$LOCALIZE[31376],message=$LOCALIZE[31374])</onclick>
            <onclick>Skin.ToggleSetting(SimilarContentSpotlight)</onclick>
            <selected>Skin.HasSetting(SimilarContentSpotlight)</selected>
            <visible>!Skin.HasSetting(DisableSpotlightContent) + !Skin.HasSetting(BingieHomeDisableFirstRow) + String.IsEmpty(Skin.String(spotlighthome.label)) + String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!-- Set Custom Content in Home Spotlight -->
        <control type="radiobutton" id="31793">
            <include>SkinSettings_Button</include>
            <label>31882</label>
            <onclick condition="String.IsEmpty(Skin.String(spotlighthome.label))">RunScript(script.skinshortcuts,type=widgets&amp;showNone=true&amp;skinWidgetName=spotlighthome.label&amp;skinWidgetTarget=spotlighthome.target&amp;skinWidgetPath=spotlighthome.path)</onclick>
            <onclick condition="!String.IsEmpty(Skin.String(spotlighthome.label))">Skin.Reset(spotlighthome.label)</onclick>
            <onclick condition="!String.IsEmpty(Skin.String(spotlighthome.path))">Skin.Reset(spotlighthome.path)</onclick>
            <selected>Skin.String(spotlighthome.label)</selected>
            <visible>!Skin.HasSetting(DisableSpotlightContent) + !Skin.HasSetting(BingieHomeDisableFirstRow) + String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!-- Show Plot When Spotlight Plays Trailer -->
        <control type="radiobutton" id="31799">
            <include>SkinSettings_Button</include>
            <label>31009</label>
            <onclick>Skin.ToggleSetting(ShowPlotInBingieSpotlight)</onclick>
            <selected>Skin.HasSetting(ShowPlotInBingieSpotlight)</selected>
            <visible>!Skin.HasSetting(DisableSpotlightContent) + !Skin.HasSetting(BingieHomeDisableFirstRow) + String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
		<!-- Disable Sub Label on Home Spotlight -->
		<control type="radiobutton" id="2030">
            <include>SkinSettings_Button</include>
            <label>Disable Sub Label on Home Spotlight</label>
            <onclick>Skin.ToggleSetting(DisableSpotlightLabel)</onclick>
            <selected>Skin.HasSetting(DisableSpotlightLabel)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>	
        <!-- Auto Play Trailer for Spotlight Content -->
        <control type="radiobutton" id="31798">
            <include>SkinSettings_Button</include>
            <label>31798</label>
            <onclick>Skin.ToggleSetting(SpotLightTrailers)</onclick>
            <selected>Skin.HasSetting(SpotLightTrailers)</selected>
            <visible>!Skin.HasSetting(DisableSpotlightContent) + !Skin.HasSetting(BingieHomeDisableFirstRow) + [String.IsEqual(Skin.String(HomeLayout),enhanced) | String.IsEqual(Skin.String(HomeLayout),bingie)]</visible>
        </control>
        <!-- Hide Ratings, Studio Logo & Media Flags While Trailer is Playing -->
        <control type="radiobutton" id="131786">
            <include>SkinSettings_Button</include>
            <label>31897</label>
            <onclick>Skin.ToggleSetting(HideMediaFlagsTrailer)</onclick>
            <visible>!Skin.HasSetting(BingieHomeDisableFirstRow) + String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(NoFooterBarOnHome) + [Skin.HasSetting(SpotLightTrailers) | Skin.HasSetting(BingieAutoTrailer)]</visible>
            <selected>Skin.HasSetting(HideMediaFlagsTrailer)</selected>
            <visible>no</visible>
		</control>
		<!-- Auto Play Trailers in Home & Hubs -->
        <control type="radiobutton" id="28637">
            <include>SkinSettings_Button</include>
            <label>31883</label>
            <onclick>Skin.ToggleSetting(BingieAutoTrailer)</onclick>
            <selected>Skin.HasSetting(BingieAutoTrailer)</selected>
            <visible>!Skin.HasSetting(BingieHomeDisableFirstRow) + String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!-- Select Delay Interval for Auto-Trailers -->
        <control type="button" id="43699">
            <include>SkinSettings_Button</include>
            <label>31884</label>
            <label2>$LOCALIZE[31885]: $INFO[Skin.String(main_auto_trailer_interval.label)]</label2>
            <visible>!Skin.HasSetting(BingieHomeDisableFirstRow) +  String.IsEqual(Skin.String(HomeLayout),bingie) + Skin.HasSetting(BingieAutoTrailer)</visible>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=main_auto_trailer_interval,header=$LOCALIZE[31885])</onclick>
        </control>
	    <!-- Enable MPAA Label -->
		<control type="radiobutton" id="2011">
            <include>SkinSettings_Button</include>
            <label>Enable MPAA Spotlight Label</label>
            <onclick>Skin.reset(EnableColoredMPAAIcons)</onclick>
			<onclick>Skin.ToggleSetting(EnableMPAALabel)</onclick>
            <selected>Skin.HasSetting(EnableMPAALabel)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
		<!-- Enable MPAA Colored  Icons -->
        <control type="radiobutton" id="2012">
            <include>SkinSettings_Button</include>
            <label>Enable MPAA Spotlight Colred Icons</label>
            <onclick>Skin.reset(EnableMPAALabel)</onclick>
			<onclick>Skin.ToggleSetting(EnableColoredMPAAIcons)</onclick>
            <selected>Skin.HasSetting(EnableColoredMPAAIcons)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
	</include>

    <!-- Home Widgets Settings -->
    <include name="Home_Widgets_Settings">
        <control type="label" id="23004">
            <include>SkinSettings_Header</include>
            <label>31564</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!--disable all widgets-->
        <control type="radiobutton" id="23016">
            <include>SkinSettings_Button</include>
            <label>31264</label>
            <onclick>Skin.ToggleSetting(DisableAllWidgets)</onclick>
            <selected>Skin.HasSetting(DisableAllWidgets)</selected>
            <visible>!String.IsEqual(Skin.String(HomeLayout),enhanced) + !String.IsEqual(Skin.String(HomeLayout),3) + !String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!-- Layout for Widgets -->
        <control type="button" id="23719">
            <include>SkinSettings_Button</include>
            <label>31507</label>
            <label2>$INFO[Skin.String(widgetstyle.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=widgetstyle,header=$LOCALIZE[31507])</onclick>
            <!-- <onclick condition="Skin.HasSetting(EnableFixedFrameWidgets)">Skin.Reset(EnableFixedFrameWidgets)</onclick> -->
            <visible>!Skin.HasSetting(DisableAllWidgets) + !String.IsEqual(Skin.String(HomeLayout),3) + !String.IsEqual(Skin.String(HomeLayout),3small) + !String.IsEqual(Skin.String(HomeLayout),enhanced) + !String.IsEqual(Skin.String(HomeLayout),win10)</visible>
        </control>
        <!-- Enable Fixed Focus Widgets in Vertical Scrolling -->
        <control type="radiobutton" id="2016">
            <include>SkinSettings_Button</include>
            <label>Enable Fixed Frame (Moving Frame) Vertical Scrolling in Home & Hubs</label>
			<!-- <label>31012</label> -->
            <onclick>Skin.ToggleSetting(EnableFixedFocusWidgets)</onclick>
            <selected>Skin.HasSetting(EnableFixedFocusWidgets)</selected>
            <visible>!Skin.HasSetting(LowPerformanceMode) + !Skin.HasSetting(BingieHomeDisableFirstRow) + String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!-- Enable Fixed Frame in Home & Hubs (Moving Frame) -->
        <control type="radiobutton" id="2017">
            <include>SkinSettings_Button</include>
            <label>31123</label>
            <onclick>Skin.ToggleSetting(EnableFixedFrameWidgets)</onclick>
            <selected>Skin.HasSetting(EnableFixedFrameWidgets)</selected>
            <visible>!Skin.HasSetting(WidgetsZoomFocus) + !Skin.HasSetting(BingieHomeDisableFirstRow) + Skin.HasSetting(EnableFixedFocusWidgets) + $EXP[IsSupportedFixedFrameLayout] + String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
            <visible>true</visible>
		</control>
        <!-- display tags on widgets -->
        <control type="button" id="31675">
            <include>SkinSettings_Button</include>
            <label>31675</label>
            <label2>$INFO[Skin.String(Widgets_DisplayTags.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=Widgets_DisplayTags,header=$LOCALIZE[31675])</onclick>
            <visible>!Skin.HasSetting(DisableAllWidgets)</visible>
        </control>
        <!-- widget rotate-->
        <control type="button" id="31672">
            <include>SkinSettings_Button</include>
            <label>31672</label>
            <label2>$INFO[Skin.String(widgets_rotate.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=widgets_rotate,header=$LOCALIZE[31672])</onclick>
            <visible>!Skin.HasSetting(DisableAllWidgets)</visible>
        </control>
        <!-- widget rotate delay-->
        <control type="button" id="31679">
            <include>SkinSettings_Button</include>
            <label>31679</label>
            <label2>$INFO[Skin.String(widgets_rotate_delay.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=widgets_rotate_delay,header=$LOCALIZE[31679])</onclick>
            <visible>!Skin.HasSetting(DisableAllWidgets) + Skin.String(widgets_rotate) + !String.IsEqual(Skin.String(widgets_rotate),disabled)</visible>
        </control>
        <!-- widget rotate pause-->
        <control type="radiobutton" id="31821">
            <include>SkinSettings_Button</include>
            <label>31821</label>
            <onclick>Skin.ToggleSetting(widgets_rotate_pause)</onclick>
            <selected>Skin.HasSetting(widgets_rotate_pause)</selected>
            <visible>!Skin.HasSetting(DisableAllWidgets) + Skin.String(widgets_rotate) + !String.IsEqual(Skin.String(widgets_rotate),disabled)</visible>
        </control>
        <!--large widget area-->
        <control type="radiobutton" id="31761">
            <include>SkinSettings_Button</include>
            <label>31761</label>
            <onclick>Skin.ToggleSetting(VerticalHomeLargeWidget)</onclick>
            <visible>$EXP[IsVerticalLayout]</visible>
            <selected>Skin.HasSetting(VerticalHomeLargeWidget)</selected>
        </control>
        <!-- auto show widgets-->
        <control type="radiobutton" id="23013">
            <include>SkinSettings_Button</include>
            <label>31111</label>
            <onclick>Skin.ToggleSetting(AutoShowWidgets)</onclick>
            <selected>Skin.HasSetting(AutoShowWidgets)</selected>
            <visible>!Skin.HasSetting(DisableAllWidgets)</visible>
            <visible>[String.IsEqual(Skin.String(HomeLayout),1small) | String.IsEqual(Skin.String(HomeLayout),2small) | String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),simplehor) | String.Contains(Skin.String(HomeLayout), lowhorizontal)]</visible>
        </control>
        <!-- lower widgets-->
        <control type="radiobutton" id="31660">
            <include>SkinSettings_Button</include>
            <label>31660</label>
            <onclick>Skin.ToggleSetting(LowerWidgets)</onclick>
            <selected>Skin.HasSetting(LowerWidgets)</selected>
            <visible>!Skin.HasSetting(DisableAllWidgets)</visible>
            <visible>[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(AutoShowWidgets)</visible>
        </control>
		<!--Bingie Home Enable Widgets Zoom Effect-->
        <control type="radiobutton" id="2021">
            <include>SkinSettings_Button</include>
            <label>Enable Zoom Effect on Selected Widget</label>
            <onclick>Skin.ToggleSetting(WidgetsZoomFocus)</onclick>
            <selected>Skin.HasSetting(WidgetsZoomFocus)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
		<!--enable circular navigation-->
        <!-- <control type="radiobutton" id="31619"> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31619</label> -->
            <!-- <onclick>Skin.ToggleSetting(EnhancedHome_Circular)</onclick> -->
            <!-- <selected>Skin.HasSetting(EnhancedHome_Circular)</selected> -->
            <!-- <onclick condition="Skin.HasSetting(DisableIconsMainMenu)">Skin.Reset(DisableIconsMainMenu)</onclick> -->
            <!-- <visible>![Skin.HasSetting(UseSingleShortcut) + String.IsEqual(Skin.String(HomeLayout),simplehor)]</visible> -->
            <!-- <visible>String.IsEqual(Skin.String(HomeLayout),enhanced) | String.IsEqual(Skin.String(HomeLayout),bingie) | String.IsEqual(Skin.String(HomeLayout),win10) | String.IsEqual(Skin.String(HomeLayout),simplehor) | String.Contains(Skin.String(HomeLayout), lowhorizontal)</visible> -->
        <!-- </control> -->
		
		<!--enable New circular navigation-->
        <control type="radiobutton" id="2029">
            <include>SkinSettings_Button</include>
            <label>Enable New Circular Navigation</label>
            <onclick>Skin.ToggleSetting(New_Circular)</onclick>
            <selected>Skin.HasSetting(New_Circular)</selected>
            <onclick>Skin.Reset(EnhancedHome_Circular)</onclick>
            
																																																																							  
        </control>
        <!--show all widgets at once-->
        <control type="radiobutton" id="31820">
            <include>SkinSettings_Button</include>
            <label>31820</label>
            <onclick>Skin.ToggleSetting(ShowAllWidgets)</onclick>
            <visible>$EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie) | String.Contains(Skin.String(HomeLayout), win10)</visible>
            <selected>Skin.HasSetting(ShowAllWidgets)</selected>
        </control>
        <!--large widget details-->
        <control type="radiobutton" id="31741">
            <include>SkinSettings_Button</include>
            <label>31741</label>
            <onclick>Skin.ToggleSetting(LargeWidgetDetailsPanel)</onclick>
            <selected>Skin.HasSetting(LargeWidgetDetailsPanel)</selected>
            <visible>!Skin.HasSetting(DisableAllWidgets) + !Skin.HasSetting(HideWidgetDetailsPanel) + $EXP[IsVerticalLayout]</visible>
        </control>
        <!--hide widget details-->
        <control type="radiobutton" id="31707">
            <include>SkinSettings_Button</include>
            <label>31707</label>
            <onclick>Skin.ToggleSetting(HideWidgetDetailsPanel)</onclick>
            <selected>Skin.HasSetting(HideWidgetDetailsPanel)</selected>
            <visible>!Skin.HasSetting(DisableAllWidgets) + !String.IsEqual(Skin.String(HomeLayout),3) + !String.IsEqual(Skin.String(HomeLayout),3small) + !String.IsEqual(Skin.String(HomeLayout),win10) + !String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!--enable widgets animation-->
        <control type="radiobutton" id="31621">
            <include>SkinSettings_Button</include>
            <label>31621</label>
            <onclick>Skin.ToggleSetting(Widgets_Animation)</onclick>
            <selected>Skin.HasSetting(Widgets_Animation)</selected>
            <visible>!Skin.HasSetting(DisableAllWidgets) + !String.IsEqual(Skin.String(HomeLayout),3) + !String.IsEqual(Skin.String(HomeLayout),enhanced) + !String.IsEqual(Skin.String(HomeLayout),bingie) + !String.IsEqual(Skin.String(HomeLayout),win10)</visible>
        </control>
        <!--enable showinformation skin bypass-->
        <control type="radiobutton" id="23721">
            <include>SkinSettings_Button</include>
            <label>31886</label>
            <onclick>Skin.ToggleSetting(ShowInformationBypass)</onclick>
            <selected>Skin.HasSetting(ShowInformationBypass)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!--prefer tv show art for episodes-->
        <control type="radiobutton" id="31304">
            <include>SkinSettings_Button</include>
            <label>31304</label>
            <onclick>Skin.ToggleSetting(PreferTvShowThumbWidget)</onclick>
            <selected>Skin.HasSetting(PreferTvShowThumbWidget)</selected>
            <visible>!Skin.HasSetting(DisableAllWidgets) + !String.IsEqual(Skin.String(HomeLayout),3) + !String.IsEqual(Skin.String(HomeLayout),3small)</visible>
        </control>
       <!--hide widget panel-->
        <control type="radiobutton" id="13004">
            <include>SkinSettings_Button</include>
            <label>31206</label>
            <onclick>Skin.ToggleSetting(HideWidgetPanelBackground)</onclick>
            <selected>Skin.HasSetting(HideWidgetPanelBackground)</selected>
            <visible>!Skin.HasSetting(DisableAllWidgets) + !String.IsEqual(Skin.String(HomeLayout),3) + !String.IsEqual(Skin.String(HomeLayout),2small) + !String.IsEqual(Skin.String(HomeLayout),win10)</visible>
        </control>
        <!-- auto right align widgets ***temporary not fully supported in bingie layout*** -->
        <control type="radiobutton" id="31712">
            <include>SkinSettings_Button</include>
            <label>31712</label>
            <onclick>Skin.ToggleSetting(WidgetAlignRight)</onclick>
            <selected>Skin.HasSetting(WidgetAlignRight)</selected>
            <visible>!Skin.HasSetting(DisableAllWidgets) + !String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
    </include>

     <!-- Home Details Settings -->
      <include name="Home_Details_Settings">
        <control type="label" id="23005">
            <include>SkinSettings_Header</include>
            <label>31843</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!-- Disable Clearlogo in Bingie Home -->
        <control type="radiobutton" id="31818">
            <include>SkinSettings_Button</include>
            <label>31818</label>
            <onclick>Skin.ToggleSetting(NoClearLogoBingie)</onclick>
            <selected>Skin.HasSetting(NoClearLogoBingie)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!-- Prefer stars ratings in bingie views (temp changed to RT/IMDB ratings -->
        <control type="radiobutton" id="131787">
            <include>SkinSettings_Button</include>
            <label>Prefer IMDB/RT rating over percentage on details row</label>
            <onclick>Skin.ToggleSetting(PreferStarsRatingBingie)</onclick>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
            <selected>Skin.HasSetting(PreferStarsRatingBingie)</selected>
        </control>
		
		<!-- Test Button -->
       <!-- Enable Colored MPAA on Home -->
        <!-- <control type="radiobutton" id="191921"> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>Enable Colored MPAA on Home</label> -->
            <!-- <onclick>Skin.ToggleSetting(DisableMPAAUKIcons)</onclick> -->
            <!-- <selected>Skin.HasSetting(DisableMPAAUKIcons)</selected> -->
            <!-- <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible> -->
        <!-- </control> -->
		
		<!--Enable UK Icons (or UK style US icons) on Details Row-->
        <control type="radiobutton" id="2020">
            <include>SkinSettings_Button</include>
            <label>Enable UK Icons (or UK style US icons) on Details Row</label>
            <onclick>Skin.ToggleSetting(EnableUKIcons)</onclick>
            <onclick>Skin.reset(EnableUSIcons)</onclick>
			<selected>Skin.HasSetting(EnableUKIcons)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>	
		
		<!--Enable Alternate US Icons-->
        <control type="radiobutton" id="2019">
            <include>SkinSettings_Button</include>
            <label>Enable Alternative US Icons on Details Row</label>
            <onclick>Skin.reset(EnableUKIcons)</onclick>
			<onclick>Skin.ToggleSetting(EnableUSIcons)</onclick>
            <selected>Skin.HasSetting(EnableUSIcons)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
		
		<!--Enable US Icons-->
        <!-- <control type="radiobutton" id="2019"> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>Enable US Icons on Details Row</label> -->
            <!-- <onclick>Skin.ToggleSetting(EnableUSIcons)</onclick> -->
            <!-- <onclick>Skin.ToggleSetting(EnableUKIcons)</onclick> -->
			<!-- <onclick>Skin.reset(EnableUKIcons)</onclick> -->
			<!-- <selected>Skin.HasSetting(EnableUSIcons)</selected> -->
            <!-- <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible> -->
        <!-- </control> -->
		<!--Enable UK Icons-->
        <!-- <control type="radiobutton" id="2020"> -->
            <!-- <visible>false</visible> -->
			<!-- <include>SkinSettings_Button</include> -->
            <!-- <label>Enable UK Icons (or UK style US icons) on Details Row</label> -->
            <!-- <onclick>Skin.ToggleSetting(EnableUKIcons)</onclick> -->
            <!-- <onclick>Skin.reset(EnableUSIcons)</onclick> -->
			<!-- <selected>Skin.HasSetting(EnableUKIcons)</selected> -->
            <!-- <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible> -->
        <!-- </control>	 -->
<!--Enable Audio Codecs-->
        <control type="radiobutton" id="2018">
            <include>SkinSettings_Button</include>
            <label>Enable Audio Codec on Details Row</label>
            <onclick>Skin.ToggleSetting(EnableAudioCodec)</onclick>
            <selected>Skin.HasSetting(EnableAudioCodec)</selected>
			<!-- <selected>Skin.reset(enableAtmosOnly)</selected> -->
			<visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
<!--Enable Audio Codecs ATMOS only-->
		<control type="radiobutton" id="2033">
            <include>SkinSettings_Button</include>
            <label>Only Show Atmos Audio Codec on Details Row</label>
            <onclick>Skin.ToggleSetting(enableAtmosOnly)</onclick>
            <selected>Skin.HasSetting(enableAtmosOnly)</selected>
			<visible>Skin.HasSetting(EnableAudioCodec)</visible>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
		
		
<!--Fake Codec info on Details Row (if no codec info is present)-->
		<control type="radiobutton" id="2031">
            <include>SkinSettings_Button</include>
            <label>Fake Codec info on Details Row (if no codec info is present)</label>
            <onclick>Skin.ToggleSetting(EnableFakeResolution)</onclick>
            <selected>Skin.HasSetting(EnableFakeResolution)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>	
<!--TV Show Status on Details Row Home & Bingie Views-->
		<control type="radiobutton" id="2032">
            <include>SkinSettings_Button</include>
            <label>TV Show Status on Details Row Home & Bingie Views</label>
            <onclick>Skin.ToggleSetting(EnableTVShowStatus)</onclick>
            <selected>Skin.HasSetting(EnableTVShowStatus)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>	
		
		<!-- Prefer Short Plot Outline in Widget Details -->
        <control type="radiobutton" id="31794">
            <include>SkinSettings_Button</include>
            <label>31794</label>
            <onclick>Skin.ToggleSetting(WidgetsPreferPlotOutline)</onclick>
            <selected>Skin.HasSetting(WidgetsPreferPlotOutline)</selected>
            <visible>!Skin.HasSetting(DisableAllWidgets)</visible>
        </control>
		<!-- Disable Top250 Sublabel on home and bingie views -->
		<control type="radiobutton" id="2028">
            <include>SkinSettings_Button</include>
            <label>Disable Top250 Sublabel on Home and Bingie Views</label>
            <onclick>Skin.ToggleSetting(DisableTop250)</onclick>
            <selected>Skin.HasSetting(DisableTop250)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>	
    </include>

    <!-- Footer in Home - Media Flags & Ratings & Studio Logo Settings -->
    <include name="Home_Footer_Media_Flags_Ratings">
        <control type="label" id="23007">
            <include>SkinSettings_Header</include>
            <label>31845</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <control type="textbox" id="23008">
            <description/>
            <width>1200</width>
            <align>justify</align>
            <label>31895</label>
            <height>auto</height>
            <font>Reg26</font>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <control type="label" id="23009">
            <height>10</height>
        </control>
        <!-- Do Not Show Footer Bar on Home -->
        <control type="radiobutton" id="5164">
            <include>SkinSettings_Button</include>
            <label>31494</label>
            <onclick>Skin.ToggleSetting(NoFooterBarOnHome)</onclick>
            <selected>Skin.HasSetting(NoFooterBarOnHome)</selected>
        </control>
        <!--Enable Monochrome Rating Flags in Bingie Views -->
        <control type="radiobutton" id="399766">
            <include>SkinSettings_Button</include>
            <label>31896</label>
            <onclick>Skin.ToggleSetting(EnableMonochromeRatingInBingieViews)</onclick>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(BingieHomeDisableFirstRow) + !Skin.HasSetting(NoFooterBarOnHome)</visible>
            <selected>Skin.HasSetting(EnableMonochromeRatingInBingieViews)</selected>
        </control>
        
        <!--disable studio logo on bingie home-->
        <control type="radiobutton" id="131767">
            <include>SkinSettings_Button</include>
            <label>31898</label>
            <onclick>Skin.ToggleSetting(BingieViewsDisableStudio)</onclick>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(NoFooterBarOnHome) + !Skin.HasSetting(BingieHomeDisableFirstRow)</visible>
            <selected>Skin.HasSetting(BingieViewsDisableStudio)</selected>
        </control>
        <!--disable ratings on bingie home-->
        <control type="radiobutton" id="131766">
            <include>SkinSettings_Button</include>
            <label>31899</label>
            <onclick>Skin.ToggleSetting(BingieViewsDisableRating)</onclick>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(NoFooterBarOnHome) + !Skin.HasSetting(BingieHomeDisableFirstRow)</visible>
            <selected>Skin.HasSetting(BingieViewsDisableRating)</selected>
        </control>
        <!-- Disable bingie more details info -->
        <control type="radiobutton" id="131788">
            <include>SkinSettings_Button</include>
            <label>31888</label>
            <onclick>Skin.ToggleSetting(DisableBingieMoreDetails)</onclick>
            <visible>!Skin.HasSetting(BingieHomeDisableFirstRow) + String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
            <selected>Skin.HasSetting(DisableBingieMoreDetails)</selected>
        </control>
        <!--disable codec on bingie home-->
        <control type="radiobutton" id="131768">
            <include>SkinSettings_Button</include>
            <label>31006</label>
            <onclick condition="Skin.HasSetting(DisableMediaCodecInfoInHome) + !Skin.HasSetting(DisableBingieMoreDetails)">RunScript(script.skin.helper.service,action=dialogok,header=$LOCALIZE[31376],message=$LOCALIZE[31398])</onclick>
            <onclick>Skin.ToggleSetting(DisableMediaCodecInfoInHome)</onclick>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(NoFooterBarOnHome) + !Skin.HasSetting(BingieHomeDisableFirstRow)</visible>
            <selected>Skin.HasSetting(DisableMediaCodecInfoInHome)</selected>
        </control>
    </include>

    <!-- Thumbs UP/DOWN Settings -->
    <include name="Thumbs_Up_Down_Settings">
        <control type="label" id="23010">
            <include>SkinSettings_Header</include>
            <label>31844</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <control type="radiobutton" id="172000">
            <include>SkinSettings_Button</include>
            <label>31890</label>
            <onclick>Skin.ToggleSetting(DisableThumbsUpDown)</onclick>
            <selected>Skin.HasSetting(DisableThumbsUpDown)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!--Thumbs up rate value-->
        <control type="button" id="172001">
            <include>SkinSettings_Button</include>
            <label>31891</label>
            <label2>$INFO[Skin.String(ThumbsUpRateValue.label)]</label2>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(DisableThumbsUpDown)</visible>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=ThumbsUpRateValue,header=$LOCALIZE[31891])</onclick>
        </control>
        <!--Thumbs down rate value-->
        <control type="button" id="172002">
            <include>SkinSettings_Button</include>
            <label>31892</label>
            <label2>$INFO[Skin.String(ThumbsDownRateValue.label)]</label2>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(DisableThumbsUpDown)</visible>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=ThumbsDownRateValue,header=$LOCALIZE[31892])</onclick>
        </control>
        <!--Thumbs up min. value-->
        <control type="button" id="17200">
            <include>SkinSettings_Button</include>
            <label>31893</label>
            <label2>$INFO[Skin.String(ThumbsUpMin.label)]</label2>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(DisableThumbsUpDown)</visible>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=ThumbsUpMin,header=$LOCALIZE[31893])</onclick>
        </control>
        <!--Thumbs down max. value-->
        <control type="button" id="17201">
            <include>SkinSettings_Button</include>
            <label>31894</label>
            <label2>$INFO[Skin.String(ThumbsDownMax.label)]</label2>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(DisableThumbsUpDown)</visible>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=ThumbsDownMax,header=$LOCALIZE[31894])</onclick>
        </control>
    </include>

    <!-- Home Menu Options -->
    <include name="Home_Menu_Settings">
        <control type="label" id="23006">
            <include>SkinSettings_Header</include>
            <label>31846</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!-- Auto Show Home Menu on Bingie Home -->
        <control type="radiobutton" id="31725">
            <include>SkinSettings_Button</include>
            <label>31725</label>
            <onclick>Skin.ToggleSetting(AutoFocusHome)</onclick>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie) | String.IsEqual(Skin.String(HomeLayout),win10)</visible>
            <selected>Skin.HasSetting(AutoFocusHome)</selected>
        </control>
        <!-- Default Focus Position-->
        <control type="button" id="31727">
            <include>SkinSettings_Button</include>
            <label>31727</label>
            <label2>$INFO[Skin.String(home.defaultfocus.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=home.defaultfocus,header=$LOCALIZE[31727])</onclick>
            <visible>[!String.IsEqual(Skin.String(HomeLayout),bingie) + !String.IsEqual(Skin.String(HomeLayout),win10)] | Skin.HasSetting(AutoFocusHome)</visible>
        </control>
        <!-- submenu layout-->
        <control type="button" id="23060">
            <include>SkinSettings_Button</include>
            <label>31312</label>
            <label2>$INFO[Skin.String(SubmenuLayout.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=SubmenuLayout,header=$LOCALIZE[31312])</onclick>
            <visible>$EXP[IsTilesLayout]</visible>
        </control>
        <!--enable auto show submenus-->
        <control type="radiobutton" id="23014">
            <include>SkinSettings_Button</include>
            <label>31113</label>
            <onclick>Skin.ToggleSetting(AutoShowSubmenu)</onclick>
            <selected>Skin.HasSetting(AutoShowSubmenu)</selected>
            <visible>!String.IsEqual(Skin.String(HomeLayout),enhanced)</visible>
        </control>
        <!-- open submenu on click-->
        <control type="radiobutton" id="23012">
            <include>SkinSettings_Button</include>
            <label>31561</label>
            <onclick>Skin.ToggleSetting(OpenSubMenuOnClick)</onclick>
            <selected>Skin.HasSetting(OpenSubMenuOnClick)</selected>
            <visible>!String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!--open submenu inline in vertical home-->
        <control type="radiobutton" id="23515">
            <include>SkinSettings_Button</include>
            <label>31522</label>
            <onclick>Skin.ToggleSetting(VerticalHomeInlineSubmenu)</onclick>
            <selected>Skin.HasSetting(VerticalHomeInlineSubmenu)</selected>
            <visible>[String.IsEqual(Skin.String(HomeLayout),simplever) | String.IsEqual(Skin.String(HomeLayout),simplever_tiles)]</visible>
            <visible>!Skin.HasSetting(DisableAllSubmenus)</visible>
        </control>
        <!--disable all submenus-->
        <control type="radiobutton" id="23017">
            <include>SkinSettings_Button</include>
            <label>31265</label>
            <onclick>Skin.ToggleSetting(DisableAllSubmenus)</onclick>
            <selected>Skin.HasSetting(DisableAllSubmenus)</selected>
            <visible>!String.IsEqual(Skin.String(HomeLayout),enhanced) + !String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        
        <!--Disable Icons in Bingie Main Menu Items-->
        <control type="radiobutton" id="31750">
            <include>SkinSettings_Button</include>
            <label>31901</label>
            <onclick>Skin.ToggleSetting(DisableIconsMainMenu)</onclick>
            <selected>Skin.HasSetting(DisableIconsMainMenu)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie) + Skin.HasSetting(EnhancedHome_Circular)</visible>
        </control>
        <!--Enable Home Menu Animation-->
        <control type="radiobutton" id="31620">
            <include>SkinSettings_Button</include>
            <label>31620</label>
            <onclick>Skin.ToggleSetting(Vertical_Home_Animation)</onclick>
            <selected>Skin.HasSetting(Vertical_Home_Animation)</selected>
            <visible>[String.IsEqual(Skin.String(HomeLayout),simplever) | String.IsEqual(Skin.String(HomeLayout),simplever_tiles)]</visible>
        </control>
        <!--hide power button-->
        <control type="radiobutton" id="23027">
            <include>SkinSettings_Button</include>
            <label>31594</label>
            <onclick>Skin.ToggleSetting(HidePowerMenu)</onclick>
            <selected>Skin.HasSetting(HidePowerMenu)</selected>
            <visible>!Skin.HasSetting(DisablePowerMenu)</visible>
        </control>
        <!--disable power button-->
        <control type="radiobutton" id="23025">
            <include>SkinSettings_Button</include>
            <label>31198</label>
            <onclick>Skin.ToggleSetting(DisablePowerMenu)</onclick>
            <selected>Skin.HasSetting(DisablePowerMenu)</selected>
        </control>
        <!--disable power warning-->
        <control type="label" id="23024">
            <include>SkinSettings_Button</include>
            <label>    $LOCALIZE[31199]</label>
            <height>40</height>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
            <visible>Skin.HasSetting(DisablePowerMenu)</visible>
        </control>
		<!-- Disable profile on menu -->    
		<control type="radiobutton" id="2015">
            <include>SkinSettings_Button</include>
            <label>Disable profile on sideblade menu</label>
            <onclick>Skin.ToggleSetting(Disableprofile)</onclick>
            <selected>Skin.HasSetting(Disableprofile)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
		<!-- Disable Static Slim Menu -->    
		<control type="radiobutton" id="2013">
            <include>SkinSettings_Button</include>
            <label>Disable static slim menu</label>
            <onclick>Skin.ToggleSetting(DisableStaticSlimMenu)</onclick>
            <selected>Skin.HasSetting(DisableStaticSlimMenu)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
	</include>

    <!-- HOMESCREEN OPTIONS -->
    <include name="Home_General_Settings">
        <control type="label" id="23000">
            <include>SkinSettings_Header</include>
            <label>31122</label>
        </control>
       <!--Enab Netflix Logo on Bingie Home-->
        <control type="radiobutton" id="2014">
            <include>SkinSettings_Button</include>
            <label>Enable Netflix Logo on Home</label>
            <onclick>Skin.ToggleSetting(EnableNetflixLogoonHome)</onclick>
            <selected>Skin.HasSetting(EnableNetflixLogoonHome)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!-- Disable Welcome Pop-Up Message Notification -->        
		<control type="radiobutton" id="8026">
            <description/>
            <include>SkinSettings_Button</include>
            <label>31902</label>
            <onclick>Skin.ToggleSetting(DisableWelcomeMsg)</onclick>
            <selected>Skin.HasSetting(DisableWelcomeMsg)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
	   <!-- Season Greetings  -->
		<control type="label" id="2034">
            <include>SkinSettings_Header</include>
			<label>Season Greetings</label>
			<textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
		
		<!-- Enable Snow -->
        <control type="radiobutton" id="2010">
            <description/>
            <include>SkinSettings_Button</include>
            <label>Enable Snow Animation</label>
            <onclick>Skin.ToggleSetting(enablesnow)</onclick>
			<onclick>Skin.ToggleSetting(expandsnow)</onclick>
            <selected>Skin.HasSetting(enablesnow)</selected>
			<selected>Skin.HasSetting(expandsnow)</selected>
			<visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
		</control>
	   <!--Toggle RSS Feed-->
        <control type="radiobutton" id="23720">
       <include>SkinSettings_Button</include>
            <label>13305</label>
            <onclick>RunScript(script.skin.helper.service,action=togglekodisetting,setting=lookandfeel.enablerssfeeds)</onclick>
            <selected>system.getbool(lookandfeel.enablerssfeeds)</selected>
            <visible>!String.IsEqual(Skin.String(HomeLayout),win10) + !String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
	</include>


    <!-- Smart Shortcuts Settings -->
    <include name="Smart_Shortcuts_Settings">
        <!-- smart shortcuts -->
        <control type="label" id="19001">
            <include>SkinSettings_Header</include>
            <label>31323</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="textbox" id="19002">
            <description/>
            <width>100%</width>
            <align>justify</align>
            <label>31322</label>
            <height>auto</height>
            <font>Reg26</font>
        </control>
        <control type="label" id="19003">
            <width>100%</width>
            <height>10</height>
        </control>
        <control type="radiobutton" id="19010">
            <include>SkinSettings_Button</include>
            <label>31320</label>
            <onclick>Skin.ToggleSetting(SmartShortcuts.playlists)</onclick>
            <selected>Skin.HasSetting(SmartShortcuts.playlists)</selected>
            <onclick>Notification($LOCALIZE[24074],$LOCALIZE[31546])</onclick>
        </control>
        <control type="radiobutton" id="19011">
            <include>SkinSettings_Button</include>
            <label>31321</label>
            <onclick>Notification($LOCALIZE[24074],$LOCALIZE[31546])</onclick>
            <onclick>Skin.ToggleSetting(SmartShortcuts.favorites)</onclick>
            <selected>Skin.HasSetting(SmartShortcuts.favorites)</selected>
        </control>
        <control type="radiobutton" id="19012">
            <include>SkinSettings_Button</include>
            <label>31339</label>
            <onclick>Skin.ToggleSetting(SmartShortcuts.emby)</onclick>
            <selected>Skin.HasSetting(SmartShortcuts.emby) + System.HasAddon(plugin.video.emby)</selected>
            <enable>System.HasAddon(plugin.video.emby)</enable>
            <animation effect="fade" start="100" end="40" time="0" condition="!Control.IsEnabled(19012)">Conditional</animation>
        </control>
        <control type="label" id="19015">
            <width>100%</width>
            <height>10</height>
        </control>
        <control type="textbox" id="19016">
            <description/>
            <width>1200</width>
            <align>justify</align>
            <label>31549</label>
            <height>auto</height>
            <font>Reg26</font>
        </control>
    </include>


    <!-- Background Settings -->
    <!-- Global Background Settings -->
    <include name="Background_Global_Settings">
        <!-- skin background -->
        <control type="label" id="14001">
            <include>SkinSettings_Header</include>
            <label>31142</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!-- set global background -->
        <control type="button" id="14002">
            <include>SkinSettings_Button</include>
            <label>31646</label>
            <label2>$INFO[Skin.String(CustomBackgroundSetting.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=selectimage,skinstring=CustomBackgroundSetting,header=$LOCALIZE[31646],allowmulti=true,resourceaddon=resource.images.skinbackgrounds,skinhelperbackgrounds=true)</onclick>
        </control>
        <!-- enable section backgrounds -->
        <control type="radiobutton" id="908">
            <include>SkinSettings_Button</include>
            <label>31647</label>
            <onclick>Skin.ToggleSetting(UseSectionBackground)</onclick>
            <selected>Skin.HasSetting(UseSectionBackground)</selected>
        </control>
        <!-- do not copy section backgrounds -->
        <control type="radiobutton" id="31718">
            <include>SkinSettings_Button</include>
            <label>31718</label>
            <onclick>Skin.ToggleSetting(SectionBackgroundHomeOnly)</onclick>
            <onclick>ClearProperty(SectionBackground,Home)</onclick>
            <selected>Skin.HasSetting(SectionBackgroundHomeOnly)</selected>
        </control>
        <!--custom overlay texture -->
        <control type="button" id="14006">
            <include>SkinSettings_Button</include>
            <label>31470</label>
            <label2>$INFO[Skin.String(BackgroundOverlayTexture.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=OVERLAYTEXTURE)</onclick>
        </control>
        <!-- overlay color diffuse -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="14008" />
            <param name="label" value="$LOCALIZE[31151]" />
            <param name="skinsetting" value="BackgroundOverlayColor" />
        </include>
        <!-- background color diffuse -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="14009" />
            <param name="label" value="$LOCALIZE[31574]" />
            <param name="skinsetting" value="BackgroundDiffuseColor" />
        </include>
        <!--overlay on media views only-->
        <control type="radiobutton" id="14010">
            <include>SkinSettings_Button</include>
            <label>31234</label>
            <onclick>Skin.ToggleSetting(BackgroundOverlayMediaViewOnly)</onclick>
            <onclick condition="Skin.HasSetting(BackgroundOverlayHomeOnly)">Skin.Reset(BackgroundOverlayHomeOnly)</onclick>
            <selected>Skin.HasSetting(BackgroundOverlayMediaViewOnly)</selected>
            <visible>Skin.String(BackgroundOverlayTexture)</visible>
        </control>
        <!--overlay on home only-->
        <control type="radiobutton" id="14011">
            <include>SkinSettings_Button</include>
            <label>31241</label>
            <onclick>Skin.ToggleSetting(BackgroundOverlayHomeOnly)</onclick>
            <onclick condition="Skin.HasSetting(BackgroundOverlayMediaViewOnly)">Skin.Reset(BackgroundOverlayMediaViewOnly)</onclick>
            <selected>Skin.HasSetting(BackgroundOverlayHomeOnly)</selected>
            <visible>Skin.String(BackgroundOverlayTexture)</visible>
        </control>
        <!-- multi-image Background transition time-->
        <control type="button" id="13019">
            <include>SkinSettings_Button</include>
            <label>31449</label>
            <label2>$INFO[Skin.String(SkinHelper.RandomFanartDelay.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=SkinHelper.RandomFanartDelay,header=$LOCALIZE[31449])</onclick>
        </control>
        <!--background animation-->
        <control type="radiobutton" id="13018">
            <include>SkinSettings_Button</include>
            <label>31266</label>
            <onclick>Skin.ToggleSetting(BackgroundAnimation)</onclick>
            <selected>Skin.HasSetting(BackgroundAnimation)</selected>
        </control>
        <!--enable wall backgrounds-->
        <control type="radiobutton" id="31812">
            <include>SkinSettings_Button</include>
            <label>31812</label>
            <onclick>Skin.ToggleSetting(SkinHelper.EnableWallBackgrounds)</onclick>
            <selected>Skin.HasSetting(SkinHelper.EnableWallBackgrounds)</selected>
        </control>
        <!-- skin helper backgrounds settings-->
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31531" />
            <param name="addon" value="script.skin.helper.backgrounds" />
        </include>
        <!--background randomize-->
        <control type="radiobutton" id="31747">
            <include>SkinSettings_Button</include>
            <label>31747</label>
            <onclick>Skin.ToggleSetting(RandomizeBackground)</onclick>
            <selected>Skin.HasSetting(RandomizeBackground)</selected>
        </control>
    </include>

    <!-- Conditional Background Settings -->
    <include name="Conditional_Background">
        <!--section background-->
        <control type="label" id="13321">
            <include>SkinSettings_Header</include>
            <label>$ADDON[script.skin.helper.backgrounds 32071]</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <include content="SkinSettings_ActionButton">
            <param name="id" value="13325" />
            <param name="label" value="$ADDON[script.skin.helper.backgrounds 32072]" />
            <param name="action" value="RunScript(script.skin.helper.backgrounds,action=Conditionalbackgrounds)" />
            <param name="visible" value="true" />
        </include>
    </include>


    <!-- Media Library Views Settings -->
    <!-- Main Section -->
    <include name="Media_Library_Main_Section">
        <!-- media library views -->
        <control type="label" id="13020">
            <include>SkinSettings_Header</include>
            <label>$LOCALIZE[31221]</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!-- enable/disable views -->
        <include content="SkinSettings_ActionButton">
            <param name="id" value="6026" />
            <param name="label" value="31487" />
            <param name="action" value="RunScript(script.skin.helper.service,action=ENABLEVIEWS,richlayout=true)" />
            <param name="visible" value="true" />
        </include>
        <!-- Do Not Show Footer Bar in Views -->
        <control type="radiobutton" id="13714">
            <include>SkinSettings_Button</include>
            <label>31029</label>
            <onclick>Skin.ToggleSetting(NoFooterBar)</onclick>
            <selected>Skin.HasSetting(NoFooterBar)</selected>
        </control>
     <!-- Use 'OPTIONS' Text  Instead of Arrow Indicator -->
        <!-- <control type="radiobutton" id="17123"> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31386</label> -->
            <!-- <onclick>Skin.ToggleSetting(DisableSideBladeArrowIndicator)</onclick> -->
            <!-- <selected>Skin.HasSetting(DisableSideBladeArrowIndicator)</selected> -->
            <!-- <visible>!Skin.HasSetting(DisableSideBladeIndicator)</visible> -->
            <!-- <visible>false</visible> -->
		<!-- </control> -->
     <!-- Disable SideBlade/Options Menu Indicator -->
		<control type="radiobutton" id="2022">
            <include>SkinSettings_Button</include>
            <label>31613</label>
            <onclick>Skin.ToggleSetting(DisableSideBladeIndicator)</onclick>
            <selected>Skin.HasSetting(DisableSideBladeIndicator)</selected>
            <visible>false</visible>
		</control>
        <!--Show Fanart Background-->
        <control type="radiobutton" id="31141">
            <include>SkinSettings_Button</include>
            <label>31141</label>
            <onclick>Skin.ToggleSetting(ShowFanartBackground)</onclick>
            <selected>Skin.HasSetting(ShowFanartBackground)</selected>
        </control>
        <!-- Prefer Fanart In Landscaped Views -->
        <control type="radiobutton" id="13026">
            <include>SkinSettings_Button</include>
            <label>31210</label>
            <onclick>Skin.ToggleSetting(DisableLandscapeThumbs)</onclick>
            <selected>Skin.HasSetting(DisableLandscapeThumbs)</selected>
        </control>
		<!-- Use Extra FanArt -->
        <control type="radiobutton" id="338">
            <include>SkinSettings_Button</include>
            <label>31207</label>
            <onclick>Skin.ToggleSetting(SkinHelper.EnableExtraFanart)</onclick>
            <selected>Skin.HasSetting(SkinHelper.EnableExtraFanart)</selected>
            <visible>Skin.HasSetting(ShowFanartBackground)</visible>
            <visible>!Skin.HasSetting(LowPerformanceMode)</visible>
        </control>
        <!-- Time To Show Each FanArt Image (In Seconds) -->
        <control type="button" id="339">
            <include>SkinSettings_Button</include>
            <label>31296</label>
            <label2>$INFO[Skin.String(extrafanartdelay.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=extrafanartdelay,header=$LOCALIZE[31296])</onclick>
            <visible>Skin.HasSetting(ShowFanartBackground) + Skin.HasSetting(SkinHelper.EnableExtraFanart)</visible>
        </control>
        <!-- Prefer Animated Posters (If Available) -->
        <control type="radiobutton" id="31706">
            <include>SkinSettings_Button</include>
            <label>31706</label>
            <onclick>Skin.ToggleSetting(SkinHelper.EnableAnimatedPosters)</onclick>
            <selected>Skin.HasSetting(SkinHelper.EnableAnimatedPosters)</selected>
        </control>
		<!-- Use Animated FanArt As Background (If Available) -->
		<control type="radiobutton" id="31803">
            <include>SkinSettings_Button</include>
            <label>31803</label>
            <onclick>Skin.ToggleSetting(AnimatedFanart)</onclick>
            <selected>Skin.HasSetting(AnimatedFanart)</selected>
            <visible>Skin.HasSetting(SkinHelper.EnableAnimatedPosters)</visible>
        </control>
		<!-- Show Animated Art Only in Details/Info (Not in List) -->
		<control type="radiobutton" id="31802">
            <include>SkinSettings_Button</include>
            <label>31802</label>
            <onclick>Skin.ToggleSetting(AnimatedPostersDisableList)</onclick>
            <selected>Skin.HasSetting(AnimatedPostersDisableList)</selected>
            <visible>Skin.HasSetting(SkinHelper.EnableAnimatedPosters)</visible>
            <visible>Skin.HasSetting(SkinHelper.EnableAnimatedPosters)</visible>
		</control>
        <!-- Show ClearLogo (If Available) -->
        <control type="button" id="13027">
            <include>SkinSettings_Button</include>
            <label>31327</label>
            <label2>$INFO[Skin.String(ClearLogoLocation.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=ClearLogoLocation,header=$LOCALIZE[31327])</onclick>
        </control>
        <!-- Use Fake DiscArt When No DiscArt Exists For A Media Item -->
		<control type="radiobutton" id="17118">
            <include>SkinSettings_Button</include>
            <label>31498</label>
            <onclick>Skin.ToggleSetting(EnableFakeDiscArt)</onclick>
            <selected>Skin.HasSetting(EnableFakeDiscArt)</selected>
        </control>
    </include>

    <!-- Media Library Alphabet Navigation Settings -->
    <include name="Media_Library_Alphabet_Navigation_Settings">
        <control type="label" id="23019">
            <include>SkinSettings_Header</include>
            <label>31847</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="textbox" id="23020">
            <width>1200</width>
            <align>justify</align>
            <label>31903</label>
            <height>auto</height>
            <font>Reg26</font>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <control type="radiobutton" id="31738">
            <include>SkinSettings_Button</include>
            <label>31738</label>
            <onclick>Skin.ToggleSetting(DisableScrollingLetters)</onclick>
            <selected>Skin.HasSetting(DisableScrollingLetters)</selected>
        </control>
        <control type="radiobutton" id="31746">
            <include>SkinSettings_Button</include>
            <label>31746</label>
            <onclick>Skin.ToggleSetting(EnableQuickJump)</onclick>
            <selected>Skin.HasSetting(EnableQuickJump)</selected>
        </control>
    </include>

    <!-- Media Library Media Flags, Ratings & Studio Logo Settings -->
    <include name="Media_Library_Flags_Settings">
        <control type="label" id="23015">
            <include>SkinSettings_Header</include>
            <label>31848</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!-- style for codec info -->
        <control type="button" id="13029">
            <include>SkinSettings_Button</include>
            <label>31632</label>
            <label2>$INFO[Skin.String(mediaflagsstyle.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=mediaflagsstyle,header=$LOCALIZE[31632])</onclick>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
        <!--Enable white rating flags -->
        <control type="radiobutton" id="399767">
            <include>SkinSettings_Button</include>
            <label>31904</label>
            <onclick>Skin.ToggleSetting(EnableMonochromeRatingInFooter)</onclick>
            <visible>!Skin.HasTheme(classic)</visible>
            <selected>Skin.HasSetting(EnableMonochromeRatingInFooter)</selected>
        </control>
        <control type="radiobutton" id="17120">
            <include>SkinSettings_Button</include>
            <label>31905</label>
            <onclick>Skin.ToggleSetting(EnableStudioLogo)</onclick>
            <selected>Skin.HasSetting(EnableStudioLogo)</selected>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
        <control type="radiobutton" id="17121">
            <include>SkinSettings_Button</include>
            <label>31906</label>
            <onclick>Skin.ToggleSetting(EnableIMDBRating)</onclick>
            <selected>Skin.HasSetting(EnableIMDBRating)</selected>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
        <control type="radiobutton" id="31775">
            <include>SkinSettings_Button</include>
            <label>31775</label>
            <onclick>Skin.ToggleSetting(EnableRTAndMetaCriticRating)</onclick>
            <selected>Skin.HasSetting(EnableRTAndMetaCriticRating)</selected>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
        <control type="radiobutton" id="39776">
            <include>SkinSettings_Button</include>
            <label>31907</label>
            <onclick>Skin.ToggleSetting(EnableTVdbAndTMdbRating)</onclick>
            <selected>Skin.HasSetting(EnableTVdbAndTMdbRating)</selected>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
    </include>

    <!-- Video Dialog Settings -->
    <include name="Media_Library_Video_Dialog_Settings">
        <!-- video information dialog -->
        <control type="label" id="20159">
            <include>SkinSettings_Header</include>
            <label>20159</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!-- use bingie info -->
        <control type="radiobutton" id="46656">
            <include>SkinSettings_Button</include>
            <label>31378</label>
            <onclick>Skin.ToggleSetting(UseBingieInfoDialog)</onclick>
            <selected>Skin.HasSetting(UseBingieInfoDialog)</selected>
            <visible>!Skin.HasSetting(UseExtendedInfoDialog)</visible>
        </control>
        <control type="radiobutton" id="17119">
            <include>SkinSettings_Button</include>
            <label>31508</label>
            <onclick condition="System.HasAddon(script.extendedinfo)">Skin.ToggleSetting(UseExtendedInfoDialog)</onclick>
            <onclick condition="!System.HasAddon(script.extendedinfo)">RunPlugin(plugin://script.extendedinfo)</onclick>
            <selected>Skin.HasSetting(UseExtendedInfoDialog)</selected>
        </control>
        <!-- disable fixed frame videoinfo -->
        <control type="radiobutton" id="17124">
            <include>SkinSettings_Button</include>
            <label>31414</label>
            <onclick>Skin.ToggleSetting(DisableFixedFrameVideoInfo)</onclick>
            <selected>Skin.HasSetting(DisableFixedFrameVideoInfo)</selected>
            <visible>Skin.HasSetting(UseBingieInfoDialog)</visible>
        </control>
        <!-- Select which buttons to show in videoinfo -->
        <include content="SkinSettings_ActionButton">
            <param name="id" value="31695" />
            <param name="label" value="31695" />
            <param name="action" value="RunScript(script.skin.helper.service,action=setskinsetting,setting=videoinfo_buttons,header=$LOCALIZE[31695])" />
            <param name="visible" value="!Skin.HasSetting(UseExtendedInfoDialog)" />
        </include>
        <!-- Select which details to show in netfix videoinfo -->
        <include content="SkinSettings_ActionButton">
            <param name="id" value="46654" />
            <param name="label" value="$LOCALIZE[31930]" />
            <param name="action" value="RunScript(script.skin.helper.service,action=setskinsetting,setting=videoinfo_details,header=$LOCALIZE[31930])" />
            <param name="visible" value="Skin.HasSetting(UseBingieInfoDialog) + !Skin.HasSetting(UseExtendedInfoDialog)" />
        </include>
        <control type="radiobutton" id="46655">
            <include>SkinSettings_Button</include>
            <label>31908</label>
            <onclick>Skin.ToggleSetting(EnableDetailsIconsInfoDialog)</onclick>
            <selected>Skin.HasSetting(EnableDetailsIconsInfoDialog)</selected>
            <visible>!Skin.HasSetting(UseExtendedInfoDialog) + Skin.HasSetting(UseBingieInfoDialog)</visible>
        </control>
        <control type="radiobutton" id="46657">
            <include>SkinSettings_Button</include>
            <label>31042</label>
            <onclick>Skin.ToggleSetting(DisableStudioLogoInfoDialog)</onclick>
            <selected>Skin.HasSetting(DisableStudioLogoInfoDialog)</selected>
            <visible>!Skin.HasSetting(UseExtendedInfoDialog) + Skin.HasSetting(UseBingieInfoDialog)</visible>
        </control>
        <!-- actor list behaviour in videoinfo -->
        <control type="button" id="31689">
            <include>SkinSettings_Button</include>
            <label>31689</label>
            <label2>$INFO[Skin.String(videoinfo_castaction.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=videoinfo_castaction,header=$LOCALIZE[31689])</onclick>
            <visible>!Skin.HasSetting(UseExtendedInfoDialog)</visible>
        </control>
        <!-- missing actor thumbs lookup -->
        <control type="radiobutton" id="31633">
            <include>SkinSettings_Button</include>
            <label>31633</label>
            <onclick condition="Skin.String(actorthumbslookup, true)">Skin.SetString(actorthumbslookup,false)</onclick>
            <onclick condition="!Skin.String(actorthumbslookup, true)">Skin.SetString(actorthumbslookup,true)</onclick>
            <selected>Skin.String(actorthumbslookup,true)</selected>
            <visible>!Skin.HasSetting(UseExtendedInfoDialog)</visible>
        </control>
        <!-- trailer behaviour in videoinfo -->
        <control type="button" id="31694">
            <include>SkinSettings_Button</include>
            <label>31694</label>
            <label2>$INFO[Skin.String(videoinfo_traileraction.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=videoinfo_traileraction,header=$LOCALIZE[31694])</onclick>
            <visible>!Skin.HasSetting(UseExtendedInfoDialog)</visible>
        </control>
        <!--trailer behavior info-->
        <control type="label" id="31697">
            <include>SkinSettings_Button</include>
            <label>    $LOCALIZE[31909]</label>
            <height>40</height>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
            <visible>!Skin.HasSetting(UseExtendedInfoDialog)</visible>
        </control>
        <!-- prefer youtube trailers -->
        <control type="radiobutton" id="46653">
            <include>SkinSettings_Button</include>
            <label>31910</label>
            <onclick>Skin.ToggleSetting(PreferYoutubeTrailers)</onclick>
            <selected>Skin.HasSetting(PreferYoutubeTrailers)</selected>
            <visible>!Skin.HasSetting(UseExtendedInfoDialog)</visible>
        </control>
        <!-- enable local language trailers in info dialog -->
        <control type="radiobutton" id="41633">
            <include>SkinSettings_Button</include>
            <label>31911</label>
            <onclick condition="!Skin.String(RegionalTrailers,true)">Skin.SetString(RegionalTrailers,true)</onclick>
            <onclick condition="Skin.String(RegionalTrailers,true)">Skin.SetString(RegionalTrailers,false)</onclick>
            <selected>Skin.String(RegionalTrailers,true)</selected>
            <visible>!Skin.HasSetting(UseExtendedInfoDialog) + Skin.HasSetting(PreferYoutubeTrailers)</visible>
        </control>
        <!-- Enable auto-hide details when trailer is playing -->
        <control type="radiobutton" id="41634">
            <include>SkinSettings_Button</include>
            <label>31912</label>
            <onclick>Skin.ToggleSetting(AutoHideDetailsOnTrailer)</onclick>
            <selected>Skin.HasSetting(AutoHideDetailsOnTrailer)</selected>
            <visible>!Skin.HasSetting(UseExtendedInfoDialog) + Skin.HasSetting(UseBingieInfoDialog)</visible>
        </control>
        <!-- Show next/resumable ep. info instead of tvshow's -->
        <control type="radiobutton" id="39275">
            <include>SkinSettings_Button</include>
            <label>31913</label>
            <onclick>Skin.ToggleSetting(ShowEpisodePlotInfoDialog)</onclick>
            <selected>Skin.HasSetting(ShowEpisodePlotInfoDialog)</selected>
            <visible>!Skin.HasSetting(UseExtendedInfoDialog) + Skin.HasSetting(UseBingieInfoDialog)</visible>
        </control>
        <!--CHANGE VISIBILITY IF MULTI-DIALOGS-->
        <control type="radiobutton" id="31674">
            <!-- hide filename in videoinfo -->
            <description/>
            <include>SkinSettings_Button</include>
            <label>31674</label>
            <onclick>Skin.ToggleSetting(DialogVideoInfo_HideFileName)</onclick>
            <selected>Skin.HasSetting(DialogVideoInfo_HideFileName)</selected>
            <visible>!Skin.HasSetting(UseBingieInfoDialog)</visible>
        </control>
    </include>


    <!-- Custom Color Settings -->
    <!-- Netflix Colors -->
    <include name="CustomColors_Bingie_Colors_Settings">
        <!-- bingie views -->
        <control type="label" id="2000">
            <include>SkinSettings_Header</include>
            <label>31914</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!--Bingie Primary Text Color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31830" />
            <param name="label" value="$LOCALIZE[31830]" />
            <param name="skinsetting" value="BingiePrimaryTextColor" />
        </include>
        <!--Bingie Secondary Text Color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31831" />
            <param name="label" value="$LOCALIZE[31831]" />
            <param name="skinsetting" value="BingieSecondaryTextColor" />
        </include>
        <!--Bingie Slim-Menu Panel Color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31838" />
            <param name="label" value="$LOCALIZE[31052]" />
            <param name="skinsetting" value="BingieSlimMenuPanelColor" />
        </include>
        <!--Bingie Sub Label Text Color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31837" />
            <param name="label" value="$LOCALIZE[31412]" />
            <param name="skinsetting" value="BingieSubLabelTextColor" />
        </include>
        <!--Bingie Details Flag Color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31832" />
            <param name="label" value="$LOCALIZE[31832]" />
            <param name="skinsetting" value="BingieDetailsFlagColor" />
        </include>
        <!--Bingie Ratings in Details Row Color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31836" />
            <param name="label" value="$LOCALIZE[31836]" />
            <param name="skinsetting" value="BingieRatingInDetailsColor" />
        </include>
        <!--Bingie Info Dialog Icons Color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31010" />
            <param name="label" value="$LOCALIZE[31411]" />
            <param name="skinsetting" value="BingieInfoDialogIconColor" />
        </include>
    </include>

    <!-- Custom Colors Header Settings -->
    <include name="CustomColors_Header_Colors_Settings">
        <!-- general color settings -->
        <control type="label" id="13011">
            <include>SkinSettings_Header</include>
            <label>31915</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!--header text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31219" />
            <param name="label" value="$LOCALIZE[31219]" />
            <param name="skinsetting" value="HeaderTextColor" />
        </include>
        <!--header shadow color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31220" />
            <param name="label" value="$LOCALIZE[31220]" />
            <param name="skinsetting" value="HeaderTextShadowColor" />
        </include>
        <!--header panel color-->
        <include content="SkinSettings_ColorButton" condition="!Skin.HasTheme(classic)">
            <param name="id" value="31791" />
            <param name="label" value="$LOCALIZE[31791]" />
            <param name="skinsetting" value="HeaderPanelColor" />
        </include>
    </include>

    <!-- Custom Colors General Settings -->
    <include name="CustomColors_General_Colors_Settings">
        <!-- general color settings -->
        <control type="label" id="13010">
            <include>SkinSettings_Header</include>
            <label>31486</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!--buttons color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31475" />
            <param name="label" value="$LOCALIZE[31475]" />
            <param name="skinsetting" value="ButtonColor" />
        </include>
        <!--buttons focus color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31233" />
            <param name="label" value="$LOCALIZE[31233]" />
            <param name="skinsetting" value="ButtonFocusColor" />
        </include>
        <!--buttons text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31458" />
            <param name="label" value="$LOCALIZE[31458]" />
            <param name="skinsetting" value="ButtonTextColor" />
        </include>
        <!--buttons focus text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31459" />
            <param name="label" value="$LOCALIZE[31459]" />
            <param name="skinsetting" value="ButtonFocusTextColor" />
        </include>
        <!--spincontrol and radiobutton color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31788" />
            <param name="label" value="$LOCALIZE[31788]" />
            <param name="skinsetting" value="ActiveSpinControlColor" />
        </include>
        <!--General panel color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31260" />
            <param name="label" value="$LOCALIZE[31260]" />
            <param name="skinsetting" value="GeneralPanelsColor" />
        </include>
        <!--general text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31460" />
            <param name="label" value="$LOCALIZE[31460]" />
            <param name="skinsetting" value="GeneralTextColor" />
        </include>
        <!--highlight text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31572" />
            <param name="label" value="$LOCALIZE[31572]" />
            <param name="skinsetting" value="GeneralHighlightTextColor" />
        </include>
        <!--homemenu panel color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31742" />
            <param name="label" value="$LOCALIZE[31742]" />
            <param name="skinsetting" value="MainMenuPanelColor" />
            <param name="visible" value="String.Contains(Skin.String(HomeLayout),hor) | $EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie) | String.Contains(Skin.String(HomeLayout),win10)" />
        </include>
        <!--homemenu unfocused text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31743" />
            <param name="label" value="$LOCALIZE[31743]" />
            <param name="skinsetting" value="MainMenuTextColor" />
            <param name="visible" value="String.Contains(Skin.String(HomeLayout),hor) | $EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie) | String.Contains(Skin.String(HomeLayout),win10)" />
        </include>
        <!--homemenu focused text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31744" />
            <param name="label" value="$LOCALIZE[31744]" />
            <param name="skinsetting" value="MainMenuFocusTextColor" />
            <param name="visible" value="String.Contains(Skin.String(HomeLayout),hor) | $EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),bingie) | String.Contains(Skin.String(HomeLayout),win10)" />
        </include>
        <!--homemenu focused button color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31834" />
            <param name="label" value="$LOCALIZE[31834]" />
            <param name="skinsetting" value="MainMenuFocusButtonColor" />
            <param name="visible" value="String.IsEqual(Skin.String(HomeLayout),bingie)" />
        </include>
        <!--homemenu secondary focused button color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31835" />
            <param name="label" value="$LOCALIZE[31835]" />
            <param name="skinsetting" value="MainMenuSecondaryFocusButtonColor" />
            <param name="visible" value="String.IsEqual(Skin.String(HomeLayout),bingie)" />
        </include>
        <!--home button focus-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31174" />
            <param name="label" value="$LOCALIZE[31174]" />
            <param name="skinsetting" value="HomeViewDetailsFocusColor" />
        </include>
        <!--home button border focus-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31829" />
            <param name="label" value="$LOCALIZE[31829]" />
            <param name="skinsetting" value="HomeViewDetailsBorderFocusColor" />
        </include>
        <!--scrollbar background color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31495" />
            <param name="label" value="$LOCALIZE[31495]" />
            <param name="skinsetting" value="ScrollbarBackgroundColor" />
        </include>
        <!--scrollbar unfocused color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31496" />
            <param name="label" value="$LOCALIZE[31496]" />
            <param name="skinsetting" value="ScrollbarUnfocusedColor" />
        </include>
        <!--scrollbar focused color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31497" />
            <param name="label" value="$LOCALIZE[31497]" />
            <param name="skinsetting" value="ScrollbarFocusedColor" />
        </include>
        <!--sideblade panel color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31601" />
            <param name="label" value="$LOCALIZE[31601]" />
            <param name="skinsetting" value="SideBladePanelColor" />
        </include>
        <!--sideblade text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31602" />
            <param name="label" value="$LOCALIZE[31602]" />
            <param name="skinsetting" value="SideBladeTextColor" />
        </include>
        <!--label overlay panel color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31603" />
            <param name="label" value="$LOCALIZE[31603]" />
            <param name="skinsetting" value="TagOverlaysPanelColor" />
        </include>
        <!--label overlay text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31604" />
            <param name="label" value="$LOCALIZE[31604]" />
            <param name="skinsetting" value="TagOverlaysTextColor" />
        </include>
        <!--home widgets border color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31735" />
            <param name="label" value="$LOCALIZE[31735]" />
            <param name="skinsetting" value="HomeWidgetsBorderColor" />
        </include>
    </include>

    <!-- Custom Colors Footer Settings -->
    <include name="CustomColors_Footer_Colors_Settings">
        <!-- general color settings -->
        <control type="label" id="13012">
            <include>SkinSettings_Header</include>
            <label>31916</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!--footer text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31455" />
            <param name="label" value="$LOCALIZE[31455]" />
            <param name="skinsetting" value="FooterTextColor" />
        </include>
        <!--footer shadow text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31477" />
            <param name="label" value="$LOCALIZE[31477]" />
            <param name="skinsetting" value="FooterTextShadowColor" />
        </include>
        <!--footer panel color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31471" />
            <param name="label" value="$LOCALIZE[31471]" />
            <param name="skinsetting" value="FooterPanelColor" />
        </include>
    </include>

    <!-- Custom Color PVR Settings -->
    <include name="CustomColors_PVR_Colors_Settings">
        <!-- PVR Guide colors -->
        <control type="label" id="69568">
            <include>SkinSettings_Header</include>
            <label>$LOCALIZE[31088]</label>
        </control>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31777" />
            <param name="label" value="$LOCALIZE[31777]" />
            <param name="skinsetting" value="PVRGuideItemColorUnfocus" />
        </include>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31778" />
            <param name="label" value="$LOCALIZE[31778]" />
            <param name="skinsetting" value="PVRGuideItemColorFocus" />
        </include>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31779" />
            <param name="label" value="$LOCALIZE[31779]" />
            <param name="skinsetting" value="PVRGuideItemTextColorUnfocus" />
        </include>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31780" />
            <param name="label" value="$LOCALIZE[31780]" />
            <param name="skinsetting" value="PVRGuideItemTextColorFocus" />
        </include>
    </include>

    <!-- Custom Colors OSD Settings -->
    <include name="CustomColors_OSD_Colors_Settings">
        <!-- media library views colors -->
        <control type="label" id="69567">
            <include>SkinSettings_Header</include>
            <label>$LOCALIZE[31668]</label>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
        <!--OSDPanelColor-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31473" />
            <param name="label" value="$LOCALIZE[31473]" />
            <param name="skinsetting" value="OSDPanelColor" />
            <param name="visible" value="!Skin.HasTheme(classic)" />
        </include>
        <!--osd text color 1 -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31478" />
            <param name="label" value="$LOCALIZE[31478]" />
            <param name="skinsetting" value="OSDPrimaryTextColor" />
            <param name="visible" value="!Skin.HasTheme(classic)" />
        </include>
        <!--osd text color 1 shadow -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31479" />
            <param name="label" value="$LOCALIZE[31479]" />
            <param name="skinsetting" value="OSDPrimaryTextShadowColor" />
            <param name="visible" value="!Skin.HasTheme(classic)" />
        </include>
        <!--osd text color 2 -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31480" />
            <param name="label" value="$LOCALIZE[31480]" />
            <param name="skinsetting" value="OSDSecondaryTextColor" />
            <param name="visible" value="!Skin.HasTheme(classic)" />
        </include>
        <!--osd text color 2 shadow -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31481" />
            <param name="label" value="$LOCALIZE[31481]" />
            <param name="skinsetting" value="OSDSecondaryTextShadowColor" />
            <param name="visible" value="!Skin.HasTheme(classic)" />
        </include>
        <!--osd progress bar background color -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31482" />
            <param name="label" value="$LOCALIZE[31482]" />
            <param name="skinsetting" value="OSDProgressBarBackgroundColor" />
            <param name="visible" value="!Skin.HasTheme(classic)" />
        </include>
        <!--osd progress bar border color -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31547" />
            <param name="label" value="$LOCALIZE[31547]" />
            <param name="skinsetting" value="OSDProgressBarBorderColor" />
            <param name="visible" value="!Skin.HasTheme(classic) + !Skin.HasSetting(UseSlimOSDPanel)" />
        </include>
        <!--osd progress bar color -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31483" />
            <param name="label" value="$LOCALIZE[31483]" />
            <param name="skinsetting" value="OSDProgressBarColor" />
            <param name="visible" value="!Skin.HasTheme(classic)" />
        </include>
        <!--osd progress bar cache color -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31573" />
            <param name="label" value="$LOCALIZE[31573]" />
            <param name="skinsetting" value="OSDProgressBarCacheColor" />
            <param name="visible" value="!Skin.HasTheme(classic)" />
        </include>
        <!--osd buttons color -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31484" />
            <param name="label" value="$LOCALIZE[31484]" />
            <param name="skinsetting" value="OSDButtonsColor" />
            <param name="visible" value="!Skin.HasTheme(classic)" />
        </include>
        <!--osd buttons focus color -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31485" />
            <param name="label" value="$LOCALIZE[31485]" />
            <param name="skinsetting" value="OSDButtonsFocusColor" />
            <param name="visible" value="!Skin.HasTheme(classic)" />
        </include>
        <!--OSD Buffering Spinner Color -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31295" />
            <param name="label" value="OSD Buffering Spinner Color" />
            <param name="skinsetting" value="OSDBufferingSpinnerColor" />
            <param name="visible" value="!Skin.HasTheme(classic)" />
        </include>
        <!-- Lyrics diffuse panel -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31813" />
            <param name="label" value="$LOCALIZE[31813]" />
            <param name="skinsetting" value="LyricsOverlayColor" />
            <param name="visible" value="!Skin.HasSetting(DisableLyricsOverlay)" />
        </include>
        <!-- Lyrics unfocused text -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31814" />
            <param name="label" value="$LOCALIZE[31814]" />
            <param name="skinsetting" value="LyricsTextColor" />
            <param name="visible" value="Skin.String(LyricScript_Path)" />
        </include>
        <!-- Lyrics unfocused text shadow -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31816" />
            <param name="label" value="$LOCALIZE[31816]" />
            <param name="skinsetting" value="LyricsTextShadowColor" />
            <param name="visible" value="Skin.String(LyricScript_Path)" />
        </include>
        <!-- Lyrics focused text -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31815" />
            <param name="label" value="$LOCALIZE[31815]" />
            <param name="skinsetting" value="LyricsFocusTextColor" />
            <param name="visible" value="Skin.String(LyricScript_Path)" />
        </include>
        <!-- Lyrics focused text shadow -->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31817" />
            <param name="label" value="$LOCALIZE[31817]" />
            <param name="skinsetting" value="LyricsFocusTextShadowColor" />
            <param name="visible" value="Skin.String(LyricScript_Path)" />
        </include>
    </include>

    <include name="CustomColors_Library_Colors_Settings">
        <!-- media library views -->
        <control type="label" id="1999">
            <include>SkinSettings_Header</include>
            <label>$LOCALIZE[31221]</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!--viewdetails panel color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31472" />
            <param name="label" value="$LOCALIZE[31472]" />
            <param name="skinsetting" value="ViewDetailsPanelColor" />
        </include>
        <!--viewdetails text color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31222" />
            <param name="label" value="$LOCALIZE[31222]" />
            <param name="skinsetting" value="ViewDetailsTextColor" />
        </include>
        <!--Ratings Logo Color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31833" />
            <param name="label" value="$LOCALIZE[31833]" />
            <param name="skinsetting" value="RatingsLogoColor" />
        </include>
        <!--view details shadow color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31223" />
            <param name="label" value="$LOCALIZE[31223]" />
            <param name="skinsetting" value="ViewDetailsTextShadowColor" />
        </include>
        <!--viewdetails highlights color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31226" />
            <param name="label" value="$LOCALIZE[31226]" />
            <param name="skinsetting" value="ViewDetailsHighlightTextColor" />
        </include>
        <!--view details highlights shadow color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31227" />
            <param name="label" value="$LOCALIZE[31227]" />
            <param name="skinsetting" value="ViewDetailsHighlightTextShadowColor" />
        </include>
        <!--listitem text unfocus color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31569" />
            <param name="label" value="$LOCALIZE[31569]" />
            <param name="skinsetting" value="ViewDetailsListItemTextColor" />
        </include>
        <!--listitem text focus color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31570" />
            <param name="label" value="$LOCALIZE[31570]" />
            <param name="skinsetting" value="ViewDetailsListItemTextFocusColor" />
        </include>
        <!--listitem text focus color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31571" />
            <param name="label" value="$LOCALIZE[31571]" />
            <param name="skinsetting" value="ViewDetailsFocusColor" />
        </include>
        <!--listitem border focus color-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31828" />
            <param name="label" value="$LOCALIZE[31828]" />
            <param name="skinsetting" value="ViewDetailsBorderFocusColor" />
        </include>
    </include>

    <!-- PVR Tab -->
    <!-- PVR Settings -->
    <include name="PVR_Settings">
        <!-- PVR appearance settings -->
        <control type="label" id="13040">
            <include>SkinSettings_Header</include>
            <label>31088</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!-- number of rows guide -->
        <control type="button" id="13043">
            <include>SkinSettings_Button</include>
            <label>31245</label>
            <label2>$INFO[Skin.String(GuideRows.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=GuideRows,header=$LOCALIZE[31245])</onclick>
        </control>
        <control type="radiobutton" id="13045">
            <include>SkinSettings_Button</include>
            <label>31239</label>
            <onclick>Skin.ToggleSetting(UseAltEpgProgress)</onclick>
            <onclick condition="Window.IsActive(tvguide)">ReloadSkin()</onclick>
            <selected>Skin.HasSetting(UseAltEpgProgress)</selected>
        </control>
        <control type="radiobutton" id="13046">
            <description>no channel names in guide</description>
            <include>SkinSettings_Button</include>
            <label>31333</label>
            <onclick>Skin.ToggleSetting(HideChannelNamesInGuide)</onclick>
            <selected>Skin.HasSetting(HideChannelNamesInGuide)</selected>
            <onclick condition="Window.IsActive(tvguide)">ReloadSkin()</onclick>
        </control>
        <control type="radiobutton" id="31642">
            <description>no channel numbers in guide</description>
            <include>SkinSettings_Button</include>
            <label>31642</label>
            <onclick>Skin.ToggleSetting(HideChannelNumbersInGuide)</onclick>
            <selected>Skin.HasSetting(HideChannelNumbersInGuide)</selected>
        </control>
        <control type="radiobutton" id="31673">
            <description>no channel logos in guide</description>
            <include>SkinSettings_Button</include>
            <label>31673</label>
            <onclick>Skin.ToggleSetting(HideChannelLogosInGuide)</onclick>
            <selected>Skin.HasSetting(HideChannelLogosInGuide)</selected>
        </control>
        <control type="radiobutton" id="13047">
            <description>Show video preview in PVR section</description>
            <include>SkinSettings_Button</include>
            <label>31338</label>
            <onclick>Skin.ToggleSetting(PVRShowPreview)</onclick>
            <selected>Skin.HasSetting(PVRShowPreview)</selected>
        </control>
        <control type="radiobutton" id="13048">
            <description>Back button in guide opens sideblade menu</description>
            <include>SkinSettings_Button</include>
            <label>31560</label>
            <onclick>Skin.ToggleSetting(PVRGuideBackSideblade)</onclick>
            <selected>Skin.HasSetting(PVRGuideBackSideblade)</selected>
        </control>
        <control type="radiobutton" id="13049">
            <description>Enable mini guide on fullscreen live tv</description>
            <include>SkinSettings_Button</include>
            <label>31616</label>
            <onclick>Skin.ToggleSetting(pvrGuideOnFullscreenVideo)</onclick>
            <selected>Skin.HasSetting(pvrGuideOnFullscreenVideo)</selected>
        </control>
        <control type="radiobutton" id="31792">
            <description>Enable small PVR channels OSD</description>
            <include>SkinSettings_Button</include>
            <label>31792</label>
            <onclick>Skin.ToggleSetting(small_pvrchannelsosd)</onclick>
            <selected>Skin.HasSetting(small_pvrchannelsosd)</selected>
        </control>
        <control type="radiobutton" id="31776">
            <description>Highlight channel row in guide</description>
            <include>SkinSettings_Button</include>
            <label>31776</label>
            <onclick>Skin.ToggleSetting(pvrGuideHighlightChannel)</onclick>
            <selected>Skin.HasSetting(pvrGuideHighlightChannel)</selected>
        </control>
        <control type="radiobutton" id="31708">
            <description>Enable artwork lookups for PVR</description>
            <include>SkinSettings_Button</include>
            <label>31708</label>
            <onclick>Skin.ToggleSetting(SkinHelper.EnablePVRThumbs)</onclick>
            <selected>Skin.HasSetting(SkinHelper.EnablePVRThumbs)</selected>
        </control>
        <include content="SkinSettings_ActionButton">
            <param name="id" value="31709" />
            <param name="label" value="31709" />
            <param name="action" value="Addon.OpenSettings(script.module.metadatautils)" />
            <param name="visible" value="Skin.HasSetting(SkinHelper.EnablePVRThumbs)" />
        </include>
        <control type="radiobutton" id="13041">
            <include>SkinSettings_Button</include>
            <label>31237</label>
            <onclick>Skin.ToggleSetting(ShowEpgGenreColors)</onclick>
            <selected>Skin.HasSetting(ShowEpgGenreColors)</selected>
        </control>
        <control type="radiobutton" id="31677">
            <include>SkinSettings_Button</include>
            <label>31677</label>
            <onclick>Skin.ToggleSetting(CustomEPGGenreImages)</onclick>
            <onclick condition="!Skin.HasSetting(CustomEPGGenreImages)">RunScript(script.skin.helper.service,action=dialogok,header=$LOCALIZE[31677],message=$LOCALIZE[31678])</onclick>
            <selected>Skin.HasSetting(CustomEPGGenreImages)</selected>
            <visible>Skin.HasSetting(ShowEpgGenreColors)</visible>
        </control>
        <control type="button" id="31676">
            <include>SkinSettings_Button</include>
            <label>31676</label>
            <label2>$INFO[Skin.String(pvrgenretype.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=pvrgenretype,header=$LOCALIZE[31676])</onclick>
            <visible>Skin.HasSetting(ShowEpgGenreColors) + Skin.HasSetting(CustomEPGGenreImages)</visible>
        </control>
        <control type="radiobutton" id="31825">
            <include>SkinSettings_Button</include>
            <label>31825</label>
            <onclick>Skin.ToggleSetting(NoPvrArtOSD)</onclick>
            <selected>Skin.HasSetting(NoPvrArtOSD)</selected>
            <visible>Skin.HasSetting(SkinHelper.EnablePVRThumbs)</visible>
        </control>
    </include>


    <!-- OSD Tab -->
    <!-- OSD General Settings -->
    <include name="OSD_General_Settings">
        <!-- OSD generic -->
        <control type="label" id="478">
            <include>SkinSettings_Header</include>
            <label>478</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="radiobutton" id="13061">
            <include>SkinSettings_Button</include>
            <label>31017</label>
            <onclick condition="!Skin.HasSetting(UseBingieOSD)">Skin.SetBool(AutoCloseVideoOSD)</onclick>
            <onclick>Skin.ToggleSetting(UseBingieOSD)</onclick>
            <onclick condition="Skin.HasSetting(UseSlimOSDPanel)">Skin.ToggleSetting(UseSlimOSDPanel)</onclick>
            <selected>Skin.HasSetting(UseBingieOSD)</selected>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
        <control type="radiobutton" id="13060">
            <include>SkinSettings_Button</include>
            <label>31476</label>
            <onclick>Skin.ToggleSetting(UseSlimOSDPanel)</onclick>
            <selected>Skin.HasSetting(UseSlimOSDPanel)</selected>
            <visible>!Skin.HasTheme(classic) + !Skin.HasSetting(UseBingieOSD)</visible>
        </control>
        <control type="button" id="31698">
            <include>SkinSettings_Button</include>
            <label>31698</label>
            <label2>$INFO[Skin.String(osd_buttonstyle.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=osd_buttonstyle,header=$LOCALIZE[31698])</onclick>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
        <control type="button" id="31699">
            <include>SkinSettings_Button</include>
            <label>31020</label>
            <onclick>Skin.ToggleSetting(EnableLargeOSDButtons)</onclick>
            <selected>Skin.HasSetting(EnableLargeOSDButtons)</selected>
            <visible>!Skin.HasTheme(classic) + !Skin.HasSetting(UseBingieOSD)</visible>
        </control>
        <control type="radiobutton" id="13065">
            <include>SkinSettings_Button</include>
            <label>31661</label>
            <onclick>Skin.ToggleSetting(osdgradientstyle)</onclick>
            <selected>Skin.HasSetting(osdgradientstyle)</selected>
            <visible>!Skin.HasTheme(classic) + !Skin.HasSetting(UseBingieOSD)</visible>
        </control>
        <!-- Volume Indicator Style -->
        <control type="button" id="31809">
            <include>SkinSettings_Button</include>
            <label>31809</label>
            <label2>$INFO[Skin.String(volumestyle.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=volumestyle,header=$LOCALIZE[31809])</onclick>
            <visible>!Skin.HasSetting(LowPerformanceMode)</visible>
        </control>
    </include>

    <!-- OSD Info Panel Settings -->
    <include name="OSD_Info_Panel_Settings">
        <!-- OSD Info Panel Header -->
        <control type="label" id="13051">
            <include>SkinSettings_Header</include>
            <label>31918</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="radiobutton" id="45920">
            <description>enable bingieinfo on osd</description>
            <include>SkinSettings_Button</include>
            <label>31919</label>
            <onclick>Skin.ToggleSetting(EnableOSDInfoBingie)</onclick>
            <selected>Skin.HasSetting(EnableOSDInfoBingie)</selected>
            <visible>!Skin.HasSetting(EnableOSDInfoLarge) + !Skin.HasSetting(UseBingieOSD)</visible>
        </control>
        <control type="radiobutton" id="31701">
            <description>enable large info on osd</description>
            <include>SkinSettings_Button</include>
            <label>31701</label>
            <onclick>Skin.ToggleSetting(EnableOSDInfoLarge)</onclick>
            <selected>Skin.HasSetting(EnableOSDInfoLarge)</selected>
            <visible>!Skin.HasSetting(EnableOSDInfoBingie) + !Skin.HasSetting(UseBingieOSD)</visible>
        </control>
        <control type="radiobutton" id="31748">
            <description>enable mediaglags on plot panel</description>
            <include>SkinSettings_Button</include>
            <label>31748</label>
            <onclick>Skin.ToggleSetting(EnableOSDInfoMediaFlags)</onclick>
            <selected>Skin.HasSetting(EnableOSDInfoMediaFlags)</selected>
            <visible>!Skin.HasSetting(EnableOSDInfoLarge) + !Skin.HasSetting(EnableOSDInfoBingie) + !Skin.HasSetting(UseBingieOSD)</visible>
        </control>
        <control type="radiobutton" id="31733">
            <include>SkinSettings_Button</include>
            <label>31733</label>
            <onclick>Skin.ToggleSetting(OSDShowClearArt)</onclick>
            <selected>Skin.HasSetting(OSDShowClearArt)</selected>
            <visible>!Skin.HasSetting(UseBingieOSD)</visible>
        </control>
        <!-- Enable Animated Discart on Supported OSD -->
        <control type="radiobutton" id="2023">
            <include>SkinSettings_Button</include>
            <label>Enable Animated Discart on Supported OSD</label>
            <onclick>Skin.ToggleSetting(HideOSDDisc)</onclick>
            <selected>Skin.HasSetting(HideOSDDisc)</selected>
        </control>
        <!-- Enable Finish Time, Current Time, & Total Duration for OSD Playback -->
        <control type="radiobutton" id="2024">
            <include>SkinSettings_Button</include>
            <label>Enable Finish Time, Current Time, & Total Duration for OSD Playback</label>
            <onclick>Skin.ToggleSetting(EnableTimeInfo)</onclick>
            <selected>Skin.HasSetting(EnableTimeInfo)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
		<!-- Show ClearArt instead of Clearlogo on Pause  -->
		<control type="radiobutton" id="2025">
            <include>SkinSettings_Button</include>
            <label>Show ClearArt Instead of clearlogo on Pause</label>
            <onclick>Skin.ToggleSetting(EnableClearArtPause)</onclick>
            <selected>Skin.HasSetting(EnableClearArtPause)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
		<!-- Show Clearart instead of ClearLogo on Infopane -->
		<control type="radiobutton" id="2026">
            <include>SkinSettings_Button</include>
            <label>Show Clearart instead of Clearlogo on Infopane</label>
            <onclick>Skin.ToggleSetting(EnableClearArtInfo)</onclick>
            <selected>Skin.HasSetting(EnableClearArtInfo)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
		<!-- Enable Seek/Jump Indicator -->
		<control type="radiobutton" id="2027">
            <include>SkinSettings_Button</include>
            <label>Enable The OSD Seek/Jump Indicator</label>
            <onclick>Skin.ToggleSetting(DisableJumpIndicator)</onclick>
            <selected>Skin.HasSetting(DisableJumpIndicator)</selected>
            <visible>Skin.HasSetting(UseBingieOSD)</visible>
        </control>
        <!-- <control type="radiobutton" id="31739"> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31063</label> -->
            <!-- <onclick>Skin.ToggleSetting(UseMidscreenJumpIndicator)</onclick> -->
            <!-- <selected>Skin.HasSetting(UseMidscreenJumpIndicator)</selected> -->
            <!-- <visible>Skin.HasSetting(UseBingieOSD) + !Skin.HasSetting(DisableJumpIndicator)</visible> -->
        <!-- </control> -->
        <control type="radiobutton" id="31795">
            <include>SkinSettings_Button</include>
            <label>31795</label>
            <onclick>Skin.ToggleSetting(SeekPanelOnPauseAndSeek)</onclick>
            <selected>Skin.HasSetting(SeekPanelOnPauseAndSeek)</selected>
            <visible>![Skin.HasSetting(UseBingieOSD) + !Skin.HasSetting(DisableJumpIndicator)]</visible>
        </control>
        <control type="radiobutton" id="13058">
            <include>SkinSettings_Button</include>
            <label>31259</label>
            <onclick>Skin.ToggleSetting(OSDShowInfoOnPause)</onclick>
            <selected>Skin.HasSetting(OSDShowInfoOnPause)</selected>
        </control>
    </include>

    <!-- OSD Video Playback Settings -->
    <include name="OSD_Video_Playback_Settings">
        <!-- Video playback -->
        <control type="label" id="13050">
            <include>SkinSettings_Header</include>
            <label>31745</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="button" id="31662">
            <description>Default OSD button</description>
            <include>SkinSettings_Button</include>
            <label>31662</label>
            <label2>$INFO[Skin.String(defaultosdbutton_video.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=defaultosdbutton_video,header=$LOCALIZE[31662])</onclick>
        </control>
        <control type="button" id="31663">
            <description>Default OSD button</description>
            <include>SkinSettings_Button</include>
            <label>31663</label>
            <label2>$INFO[Skin.String(defaultosdbutton_livetv.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=defaultosdbutton_livetv,header=$LOCALIZE[31663])</onclick>
        </control>
        <include content="SkinSettings_ActionButton">
            <param name="id" value="46658" />
            <param name="label" value="$LOCALIZE[31060]" />
            <param name="action" value="RunScript(script.skin.helper.service,action=setskinsetting,setting=bingie_videoosd_buttons,header=$LOCALIZE[31060])" />
            <param name="visible" value="Skin.HasSetting(UseBingieOSD)" />
        </include>
        <control type="radiobutton" id="31823">
            <include>SkinSettings_Button</include>
            <label>31072</label>
            <onclick>Skin.ToggleSetting(AutoCloseVideoOSD)</onclick>
            <selected>Skin.HasSetting(AutoCloseVideoOSD)</selected>
        </control>
        <control type="radiobutton" id="31822">
            <include>SkinSettings_Button</include>
            <label>31024</label>
            <onclick>Skin.ToggleSetting(ForceVideoPlaybackStop)</onclick>
            <selected>Skin.HasSetting(ForceVideoPlaybackStop)</selected>
        </control>
        <!-- hide playback controls -->
        <control type="radiobutton" id="31819">
            <include>SkinSettings_Button</include>
            <label>31819</label>
            <onclick>Skin.ToggleSetting(OSDDisablePlaybackControls)</onclick>
            <selected>Skin.HasSetting(OSDDisablePlaybackControls)</selected>
            <visible>!Skin.HasSetting(UseBingieOSD)</visible>
        </control>
        <control type="radiobutton" id="13067">
            <include>SkinSettings_Button</include>
            <label>31807</label>
            <onclick>Skin.ToggleSetting(EnableBufferingProgressOSD)</onclick>
            <selected>Skin.HasSetting(EnableBufferingProgressOSD)</selected>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
        <control type="radiobutton" id="13057">
            <include>SkinSettings_Button</include>
            <label>31256</label>
            <onclick>Skin.ToggleSetting(OSDLargeSeekingLabel)</onclick>
            <selected>Skin.HasSetting(OSDLargeSeekingLabel)</selected>
            <visible>!Skin.HasSetting(UseBingieOSD)</visible>
        </control>
        <!-- style for codec info -->
        <control type="button" id="13064">
            <include>SkinSettings_Button</include>
            <label>31632</label>
            <label2>$INFO[Skin.String(osdmediaflagsstyle.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=osdmediaflagsstyle,header=$LOCALIZE[31632])</onclick>
            <visible>!Skin.HasTheme(classic)</visible>
            <visible>!Skin.HasSetting(UseBingieOSD)</visible>
        </control>
        <control type="radiobutton" id="13059">
            <include>SkinSettings_Button</include>
            <label>31325</label>
            <onclick>Skin.ToggleSetting(ShowWeatherVideoInfoOSD)</onclick>
            <selected>Skin.HasSetting(ShowWeatherVideoInfoOSD)</selected>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
    </include>

    <!-- OSD Up Next Settings -->
    <include name="OSD_Up_Next_Settings">
        <!-- Up Next Addon Header -->
        <control type="label" id="31680">
            <include>SkinSettings_Header</include>
            <label>31921</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
            <visible>System.HasAddon(service.upnext)</visible>
        </control>
        <!-- switch upnext notification to just buttons -->
        <control type="radiobutton" id="41820">
            <include>SkinSettings_Button</include>
            <label>31922</label>
            <onclick>Skin.ToggleSetting(NextUpNotificationSlim)</onclick>
            <selected>Skin.HasSetting(NextUpNotificationSlim)</selected>
            <visible>System.HasAddon(service.upnext)</visible>
        </control>
    </include>

 
 <!-- OSD Music Playback Settings -->
    <!-- <include name="OSD_Music_Playback_Settings"> -->
        <!-- <control type="label" id="31670"> -->
            <!-- <include>SkinSettings_Header</include> -->
            <!-- <label>31670</label> -->
            <!-- <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor> -->
        <!-- </control> -->
        <!-- <control type="button" id="31664"> -->
            <!-- <description>Default OSD button</description> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31664</label> -->
            <!-- <label2>$INFO[Skin.String(defaultosdbutton_music.label)]</label2> -->
            <!-- <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=defaultosdbutton_music,header=$LOCALIZE[31664])</onclick> -->
        <!-- </control> -->
        <!-- <control type="radiobutton" id="5143"> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31179</label> -->
            <!-- <onclick>Skin.ToggleSetting(FullscreenMusic)</onclick> -->
            <!-- <selected>Skin.HasSetting(FullscreenMusic)</selected> -->
        <!-- </control> -->
        <!-- <control type="radiobutton" id="13055"> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31232</label> -->
            <!-- <onclick>Skin.ToggleSetting(AlwaysShowMusicInfo)</onclick> -->
            <!-- <selected>Skin.HasSetting(AlwaysShowMusicInfo)</selected> -->
        <!-- </control> -->
        <!-- <control type="button" id="5153"> -->
            <!-- <description/> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31087</label> -->
            <!-- <label2 fallback="None">$INFO[Skin.String(LyricScript_Path)]</label2> -->
            <!-- <onclick condition="!Skin.String(LyricScript_Path)">Skin.SetAddon(LyricScript_Path,xbmc.python.lyrics)</onclick> -->
            <!-- <onclick condition="Skin.String(LyricScript_Path)">Addon.OpenSettings($INFO[Skin.String(LyricScript_Path)])</onclick> -->
        <!-- </control> -->
        <!-- <control type="radiobutton" id="5161"> -->
            <!-- <description>disable backgroundoverlay lyrics dialog</description> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31332</label> -->
            <!-- <onclick>Skin.ToggleSetting(DisableLyricsOverlay)</onclick> -->
            <!-- <selected>Skin.HasSetting(DisableLyricsOverlay)</selected> -->
            <!-- <visible>System.HasAddon(script.cu.lrclyrics)</visible> -->
        <!-- </control> -->
        <!-- <control type="button" id="5157"> -->
            <!-- <description>Artist Slideshow in musicplayer</description> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31341</label> -->
            <!-- <label2>$INFO[Skin.String(MusicArtistFanart.label)]</label2> -->
            <!-- <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=MusicArtistFanart,header=$LOCALIZE[31341])</onclick> -->
        <!-- </control> -->
        <!-- <control type="button" id="31665"> -->
            <!-- <description>Artist Logo in musicplayer</description> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31665</label> -->
            <!-- <label2>$INFO[Skin.String(MusicArtistLogo.label)]</label2> -->
            <!-- <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=MusicArtistLogo,header=$LOCALIZE[31665])</onclick> -->
        <!-- </control> -->
        <!-- <control type="radiobutton" id="31640"> -->
            <!-- <description>Artist Bio in musicplayer</description> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31640</label> -->
            <!-- <onclick>Skin.ToggleSetting(enableArtistBio)</onclick> -->
            <!-- <selected>Skin.HasSetting(enableArtistBio)</selected> -->
            <!-- <visible>!Skin.HasTheme(classic)</visible> -->
        <!-- </control> -->
        <!-- <control type="button" id="31824"> -->
            <!-- <description>Fallback image music playback</description> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31824</label> -->
            <!-- <label2>$INFO[Skin.String(MusicBackground.label)]</label2> -->
            <!-- <onclick>RunScript(script.skin.helper.service,action=selectimage,skinstring=MusicBackground,header=$LOCALIZE[31824],allowmulti=true,resourceaddon=resource.images.skinbackgrounds,skinhelperbackgrounds=true)</onclick> -->
        <!-- </control> -->
        <!-- <control type="radiobutton" id="5170"> -->
            <!-- <description>Animate Music background</description> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31617</label> -->
            <!-- <onclick>Skin.ToggleSetting(animateMusicArt)</onclick> -->
            <!-- <selected>Skin.HasSetting(animateMusicArt)</selected> -->
        <!-- </control> -->
        <!-- <control type="radiobutton" id="31732"> -->
            <!-- <description>scrolling music text</description> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31732</label> -->
            <!-- <onclick>Skin.ToggleSetting(MusicOSDScrollingTitles)</onclick> -->
            <!-- <selected>Skin.HasSetting(MusicOSDScrollingTitles)</selected> -->
        <!-- </control> -->
        <!-- <control type="radiobutton" id="31715"> -->
            <!-- <description>Disable screensaver on music playback</description> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31715</label> -->
            <!-- <onclick>Skin.ToggleSetting(SkinHelper.DisableScreenSaverOnFullScreenMusic)</onclick> -->
            <!-- <selected>Skin.HasSetting(SkinHelper.DisableScreenSaverOnFullScreenMusic)</selected> -->
        <!-- </control> -->
        <!-- <control type="button" id="130631"> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31629</label> -->
            <!-- <label2>$INFO[Skin.String(SkinHelper.AutoCloseMusicOSD)] $LOCALIZE[31231]</label2> -->
            <!-- <onclick>Skin.SetNumeric(SkinHelper.AutoCloseMusicOSD)</onclick> -->
        <!-- </control> -->
    <!-- </include> -->

    
	
	<!-- OSD Now Playing Settings -->
    <include name="OSD_Now_Playing_Settings">
        <!-- Now playing options -->
        <control type="label" id="31669">
            <include>SkinSettings_Header</include>
            <label>31669</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="radiobutton" id="5141">
            <include>SkinSettings_Button</include>
            <label>31140</label>
            <onclick>Skin.ToggleSetting(DisableNowPlayingBackground)</onclick>
            <selected>Skin.HasSetting(DisableNowPlayingBackground)</selected>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
        <!-- <control type="radiobutton" id="31734"> -->
            <!-- <include>SkinSettings_Button</include> -->
            <!-- <label>31734</label> -->
            <!-- <onclick>Skin.ToggleSetting(DisableNowPlayingMusicBackground)</onclick> -->
            <!-- <selected>Skin.HasSetting(DisableNowPlayingMusicBackground)</selected> -->
            <!-- <visible>!Skin.HasTheme(classic)</visible> -->
        <!-- </control> -->
        <control type="radiobutton" id="5142">
            <include>SkinSettings_Button</include>
            <label>31596</label>
            <onclick>Skin.ToggleSetting(DisableNowPlayingInfoBar)</onclick>
            <selected>Skin.HasSetting(DisableNowPlayingInfoBar)</selected>
        </control>
        <control type="radiobutton" id="31634">
            <include>SkinSettings_Button</include>
            <label>31634</label>
            <onclick>Skin.ToggleSetting(DisableNowPlayingDiscArt)</onclick>
            <selected>Skin.HasSetting(DisableNowPlayingDiscArt)</selected>
            <visible>!Skin.HasSetting(DisableNowPlayingInfoBar)</visible>
        </control>
        <control type="radiobutton" id="31736">
            <include>SkinSettings_Button</include>
            <label>31736</label>
            <onclick>Skin.ToggleSetting(DisableNowPlayingClearArt)</onclick>
            <selected>Skin.HasSetting(DisableNowPlayingClearArt)</selected>
            <visible>!Skin.HasSetting(DisableNowPlayingInfoBar)</visible>
        </control>
        <control type="radiobutton" id="32569">
            <include>SkinSettings_Button</include>
            <label>31924</label>
            <onclick>Skin.ToggleSetting(DisableNowPlayingClock)</onclick>
            <selected>Skin.HasSetting(DisableNowPlayingClock)</selected>
            <visible>!Skin.HasSetting(DisableNowPlayingInfoBar)</visible>
        </control>
    </include>


    <!-- Shortcuts Tab -->
    <!-- Shortcuts Configuration -->
    <include name="Shortcuts_Config">
        <control type="label" id="6001">
            <include>SkinSettings_Header</include>
            <label>31167</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="textbox" id="6002">
            <width>100%</width>
            <height min="160">auto</height>
            <font>Reg25</font>
            <posy>60</posy>
            <label>31168</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
            <shadowcolor>black</shadowcolor>
            <align>left</align>
            <aligny>top</aligny>
        </control>
        <include content="SkinSettings_ActionButton">
            <param name="id" value="6003" />
            <param name="label" value="31014" />
            <param name="action" value="RunScript(script.skinshortcuts,type=manage&amp;group=mainmenu)" />
            <param name="visible" value="true" />
        </include>
        <include content="SkinSettings_ActionButton">
            <param name="id" value="96008" />
            <param name="label" value="31204" />
            <param name="action" value="RunScript(script.skinshortcuts,type=manage&amp;group=powermenu)" />
            <param name="action2" value="SetProperty(powermenu, active,Home)" />
            <param name="visible" value="true" />
        </include>
        <!-- empty label -->
        <control type="label" id="6028">
            <height>20</height>
            <label/>
        </control>
        <!-- set global items limit -->
        <control type="button" id="31211">
            <include>SkinSettings_Button</include>
            <label>31037</label>
            <label2>$INFO[Skin.String(WidgetsGlobalLimit)]</label2>
            <onclick>Skin.SetNumeric(WidgetsGlobalLimit)</onclick>
        </control>
        <!-- empty label -->
        <control type="label" id="23028">
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
            <height>20</height>
            <label/>
        </control>
        <control type="textbox" id="23026">
            <description/>
            <width>1200</width>
            <align>justify</align>
            <label>31925</label>
            <height>auto</height>
            <font>Reg26</font>
            <visible>Skin.HasSetting(LockHubWidgets) + String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!-- Lock Widgets In HUBS -->
        <control type="radiobutton" id="31205">
            <include>SkinSettings_Button</include>
            <label>31926</label>
            <visible>String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
            <onclick>Skin.ToggleSetting(LockHubWidgets)</onclick>
            <selected>Skin.HasSetting(LockHubWidgets)</selected>
        </control>
        <!-- empty label -->
        <control type="label" id="6004">
            <height>20</height>
            <label/>
        </control>
        <control type="label" id="6005">
            <include>SkinSettings_Header</include>
            <label>31170</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="textbox" id="6006">
            <width>100%</width>
            <height min="220">auto</height>
            <font>Reg25</font>
            <posy>60</posy>
            <label>31171</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
            <shadowcolor>black</shadowcolor>
            <align>left</align>
            <aligny>top</aligny>
        </control>
        <include content="SkinSettings_ActionButton">
            <param name="id" value="6007" />
            <param name="label" value="[CAPITALIZE]$ADDON[script.skinshortcuts 32028][/CAPITALIZE]" />
            <param name="action" value="RunScript(script.skinshortcuts,type=resetall)" />
            <param name="visible" value="true" />
        </include>
        <include content="SkinSettings_ActionButton">
            <param name="id" value="31208" />
            <param name="label" value="$LOCALIZE[31880]" />
            <param name="action" value="RunScript(script.skin.helper.service,action=dialogyesno,header=$LOCALIZE[14117],message=$LOCALIZE[31375][CR]$LOCALIZE[31373],yesaction=Skin.Reset(HubWidgetsDefaults),noaction=)" />
            <param name="visible" value="String.IsEqual(Skin.String(HomeLayout),bingie)" />
        </include>
    </include>


    <!-- Supported Addons Tab -->
    <!-- Supported Addons Settings -->
    <include name="Supported_Addons_Settings">
        <control type="label" id="31696">
            <include>SkinSettings_Header</include>
            <label>31696</label>
        </control>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31001" />
            <param name="addon" value="script.skin.helper.service" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31030" />
            <param name="addon" value="script.skin.helper.widgets" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31031" />
            <param name="addon" value="script.skin.helper.backgrounds" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31032" />
            <param name="addon" value="script.module.metadatautils" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31033" />
            <param name="addon" value="script.skin.helper.skinbackup" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31002" />
            <param name="addon" value="script.skinshortcuts" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31019" />
            <param name="addon" value="plugin.program.autocompletion" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31301" />
            <param name="addon" value="script.globalsearch" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31007" />
            <param name="addon" value="service.upnext" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31015" />
            <param name="addon" value="plugin.video.youtube" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31300" />
            <param name="addon" value="script.artwork.beef" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31003" />
            <param name="addon" value="script.extendedinfo" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31011" />
            <param name="addon" value="script.trakt" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31005" />
            <param name="addon" value="script.tv.show.next.aired" />
        </include>
        <include content="SkinSettings_AddonButton">
            <param name="id" value="31016" />
            <param name="addon" value="plugin.video.emby" />
        </include>
    </include>

    <!-- Color Themes Tab -->
    <!-- ColorThemes Theme Settings -->
    <include name="ColorThemes_Theme_Settings">
        <control type="label" id="15001">
            <include>SkinSettings_Header</include>
            <label>31463</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="textbox" id="15002">
            <description/>
            <width>1200</width>
            <align>justify</align>
            <label>31464</label>
            <height>auto</height>
            <font>Reg26</font>
        </control>
        <control type="label" id="15003">
            <height>10</height>
        </control>
        <control type="button" id="15004">
            <description>Select Theme</description>
            <label>31800</label>
            <include>SkinSettings_Button</include>
            <onclick>RunScript(script.skin.helper.skinbackup,action=colorthemes)</onclick>
            <onclick condition="!System.HasAddon(script.skin.helper.skinbackup)">RunPlugin(plugin://script.skin.helper.skinbackup)</onclick>
            <onclick>ClearProperty(startupDone,Home)</onclick>
        </control>
        <control type="label" id="15030">
            <height>40</height>
        </control>
    </include>

    <!-- ColorThemes Day/Night Settings -->
    <include name="ColorThemes_DayNight_Settings">
        <control type="label" id="15031">
            <include>SkinSettings_Header</include>
            <label>31589</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="textbox" id="15032">
            <description/>
            <width>1200</width>
            <align>justify</align>
            <label>31590</label>
            <height>auto</height>
            <font>Reg26</font>
        </control>
        <control type="label" id="125003">
            <height>40</height>
        </control>
        <control type="radiobutton" id="15033">
            <include>SkinSettings_Button</include>
            <label>31589</label>
            <onclick condition="System.HasAddon(script.skin.helper.skinbackup)">Skin.ToggleSetting(SkinHelper.EnableDayNightThemes)</onclick>
            <onclick condition="!System.HasAddon(script.skin.helper.skinbackup)">RunPlugin(plugin://script.skin.helper.skinbackup)</onclick>
            <selected>Skin.HasSetting(SkinHelper.EnableDayNightThemes)</selected>
        </control>
        <control type="button" id="15034">
            <include>SkinSettings_Button</include>
            <description>Select Theme for day</description>
            <label>$LOCALIZE[31591]: $INFO[Skin.String(SkinHelper.ColorTheme.Day.label)]</label>
            <onclick>RunScript(script.skin.helper.skinbackup,action=daynighttheme,daynight=day)</onclick>
            <onclick condition="!System.HasAddon(script.skin.helper.skinbackup)">RunPlugin(plugin://script.skin.helper.skinbackup)</onclick>
            <visible>Skin.HasSetting(SkinHelper.EnableDayNightThemes)</visible>
        </control>
        <control type="button" id="15035">
            <include>SkinSettings_Button</include>
            <description>Select Theme for night</description>
            <label>$LOCALIZE[31592]: $INFO[Skin.String(SkinHelper.ColorTheme.Night.label)]</label>
            <onclick>RunScript(script.skin.helper.skinbackup,action=daynighttheme,daynight=night)</onclick>
            <onclick condition="!System.HasAddon(script.skin.helper.skinbackup)">RunPlugin(plugin://script.skin.helper.skinbackup)</onclick>
            <visible>Skin.HasSetting(SkinHelper.EnableDayNightThemes)</visible>
        </control>
    </include>

    <!-- ColorThemes Pallete Settings -->
    <include name="ColorThemes_Pallete_Settings">
        <!-- Default palette for Color Picker -->
        <control type="label" id="15005">
            <height>40</height>
        </control>
        <control type="label" id="15006">
            <include>SkinSettings_Header</include>
            <label>31768</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="textbox" id="15007">
            <description/>
            <width>1200</width>
            <align>justify</align>
            <label>31769</label>
            <height>auto</height>
            <font>Reg26</font>
        </control>
        <control type="button" id="15008">
            <include>SkinSettings_Button</include>
            <label>31767</label>
            <label2>$INFO[Skin.String(defaultcolorpalette)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=defaultcolorpalette,header=$LOCALIZE[31767])</onclick>
        </control>
    </include>


    <!-- Backup Tab -->
    <!-- Backup Settings -->
    <include name="Backup_Settings">
        <!-- backup and restore -->
        <control type="label" id="8001">
            <include>SkinSettings_Header</include>
            <label>31271</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <include content="SkinSettings_ActionButton">
            <param name="id" value="8005" />
            <param name="label" value="31801" />
            <param name="action" value="RunAddon(script.skin.helper.skinbackup)" />
            <param name="visible" value="System.HasAddon(script.skin.helper.skinbackup)" />
        </include>
        <include content="SkinSettings_ActionButton">
            <param name="id" value="8002" />
            <param name="label" value="31272" />
            <param name="action" value="RunScript(script.skin.helper.skinbackup,action=backup)" />
            <param name="visible" value="System.HasAddon(script.skin.helper.skinbackup)" />
        </include>

        <include content="SkinSettings_ActionButton">
            <param name="id" value="8003" />
            <param name="label" value="31273" />
            <param name="action" value="RunScript(script.skin.helper.skinbackup,action=RESTORE)" />
            <param name="visible" value="System.HasAddon(script.skin.helper.skinbackup)" />
        </include>
        <include content="SkinSettings_ActionButton">
            <param name="id" value="8004" />
            <param name="label" value="31274" />
            <param name="action" value="RunScript(script.skin.helper.skinbackup,action=RESET)" />
            <param name="visible" value="System.HasAddon(script.skin.helper.skinbackup)" />
        </include>
        <include content="SkinSettings_ActionButton">
            <param name="id" value="8006" />
            <param name="label" value="31801" />
            <param name="action" value="RunPlugin(plugin://script.skin.helper.skinbackup)" />
            <param name="visible" value="!System.HasAddon(script.skin.helper.skinbackup)" />
        </include>
    </include>


    <!-- General Tab -->
    <!-- General Settings -->
    <include name="General_Skin_Settings">
        <!-- general -->
        <control type="label" id="5136">
            <include>SkinSettings_Header</include>
            <label>31005</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="radiobutton" id="5159">
            <description>Kiosk mode</description>
            <include>SkinSettings_Button</include>
            <label>31318</label>
            <onclick>Skin.ToggleSetting(KioskMode.Enabled)</onclick>
            <selected>Skin.HasSetting(KioskMode.Enabled)</selected>
        </control>
        <control type="radiobutton" id="5147">
            <include>SkinSettings_Button</include>
            <label>31209</label>
            <onclick>Skin.ToggleSetting(EnableTouchSupport)</onclick>
            <onclick>RunScript(script.skin.helper.service,action=dialogok,header=$LOCALIZE[31376],message=$LOCALIZE[31546])</onclick>
            <selected>Skin.HasSetting(EnableTouchSupport)</selected>
        </control>
        <control type="radiobutton" id="5149">
            <include>SkinSettings_Button</include>
            <label>31215</label>
            <onclick>Skin.ToggleSetting(HideMouseCursor)</onclick>
            <selected>Skin.HasSetting(HideMouseCursor)</selected>
            <visible>System.Platform.Windows + Skin.HasSetting(EnableTouchSupport)</visible>
        </control>
        <control type="radiobutton" id="5150">
            <include>SkinSettings_Button</include>
            <label>31292</label>
            <onclick>Skin.ToggleSetting(HideBatteryStatus)</onclick>
            <selected>Skin.HasSetting(HideBatteryStatus)</selected>
            <visible>Skin.HasSetting(EnableTouchSupport) + ![String.IsEqual(Skin.String(HomeLayout),simplever) | String.IsEqual(Skin.String(HomeLayout),simplever_tiles) | Skin.HasSetting(CompactHeader)]</visible>
        </control>
        <control type="radiobutton" id="5162">
            <description>show scrollbars</description>
            <include>SkinSettings_Button</include>
            <label>31344</label>
            <onclick>Skin.ToggleSetting(alwaysShowScrollbars)</onclick>
            <selected>Skin.HasSetting(alwaysShowScrollbars)</selected>
            <visible>!Skin.HasSetting(DisableScrollbars)</visible>
        </control>
        <control type="radiobutton" id="31764">
            <description>show scrollbars</description>
            <include>SkinSettings_Button</include>
            <label>31764</label>
            <onclick>Skin.ToggleSetting(DisableScrollbars)</onclick>
            <selected>Skin.HasSetting(DisableScrollbars)</selected>
        </control>
        <!-- Use Small Context/SideBar Menu -->
		<control type="radiobutton" id="31720">
            <description>rounded panels</description>
            <include>SkinSettings_Button</include>
            <label>31720</label>
            <onclick>Skin.ToggleSetting(smallContextMenu)</onclick>
            <selected>Skin.HasSetting(smallContextMenu)</selected>
            <visible>!Skin.HasTheme(classic)</visible>
        </control>
        <control type="radiobutton" id="5163">
            <description>use extended weather screen</description>
            <include>SkinSettings_Button</include>
            <label>31451</label>
            <onclick>Skin.ToggleSetting(useExtendedWeatherScreen)</onclick>
            <selected>Skin.HasSetting(useExtendedWeatherScreen)</selected>
        </control>
    </include>

    <!-- Bingie Search Settings -->
    <include name="Bingie_Search_Settings">
        <control type="label" id="5137">
            <include>SkinSettings_Header</include>
            <label>31415</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="radiobutton" id="32108">
            <description>force global search addon</description>
            <include>SkinSettings_Button</include>
            <label>31420</label>
            <onclick condition="!Skin.HasSetting(UseGlobalSearch) + !System.HasAddon(script.globalsearch)">RunPlugin(plugin://script.globalsearch)</onclick>
            <onclick condition="System.HasAddon(script.globalsearch)">Skin.ToggleSetting(UseGlobalSearch)</onclick>
            <selected>Skin.HasSetting(UseGlobalSearch)</selected>
        </control>
        <control type="radiobutton" id="32109">
            <description>enable keyboard option</description>
            <include>SkinSettings_Button</include>
            <label>31550</label>
            <onclick>Skin.ToggleSetting(EnableBingieSearchFullKeyboard)</onclick>
            <selected>Skin.HasSetting(EnableBingieSearchFullKeyboard)</selected>
            <visible>!Skin.HasSetting(UseGlobalSearch)</visible>
        </control>
        <control type="radiobutton" id="32103">
            <description>enable fanart in background</description>
            <include>SkinSettings_Button</include>
            <label>31141</label>
            <onclick>Skin.ToggleSetting(EnableBingieSearchFanart)</onclick>
            <selected>Skin.HasSetting(EnableBingieSearchFanart)</selected>
            <visible>!Skin.HasSetting(UseGlobalSearch)</visible>
        </control>
        <control type="radiobutton" id="32104">
            <description>enable search results for episodes</description>
            <include>SkinSettings_Button</include>
            <label>31416</label>
            <onclick>Skin.ToggleSetting(EnableBingieSearchEpisodes)</onclick>
            <selected>Skin.HasSetting(EnableBingieSearchEpisodes)</selected>
            <visible>!Skin.HasSetting(UseGlobalSearch)</visible>
        </control>
        <control type="radiobutton" id="32105">
            <description>enable search results for music</description>
            <include>SkinSettings_Button</include>
            <label>31418</label>
            <onclick>Skin.ToggleSetting(EnableBingieSearchMusic)</onclick>
            <selected>Skin.HasSetting(EnableBingieSearchMusic)</selected>
            <visible>!Skin.HasSetting(UseGlobalSearch)</visible>
        </control>
        <control type="radiobutton" id="32106">
            <description>enable search results for music videos</description>
            <include>SkinSettings_Button</include>
            <label>31417</label>
            <onclick>Skin.ToggleSetting(EnableBingieSearchMusicVideos)</onclick>
            <selected>Skin.HasSetting(EnableBingieSearchMusicVideos)</selected>
            <visible>!Skin.HasSetting(UseGlobalSearch)</visible>
        </control>
        <control type="radiobutton" id="32110">
            <description>enable search results for addons</description>
            <include>SkinSettings_Button</include>
            <label>31026</label>
            <onclick>Skin.ToggleSetting(EnableBingieSearchAddons)</onclick>
            <selected>Skin.HasSetting(EnableBingieSearchAddons)</selected>
            <visible>!Skin.HasSetting(UseGlobalSearch)</visible>
        </control>
        <control type="radiobutton" id="32107">
            <description>enable search results from youtube</description>
            <include>SkinSettings_Button</include>
            <label>31419</label>
            <onclick>Skin.ToggleSetting(EnableBingieSearchYoutube)</onclick>
            <selected>Skin.HasSetting(EnableBingieSearchYoutube)</selected>
            <visible>!Skin.HasSetting(UseGlobalSearch)</visible>
        </control>
    </include>

    <!-- General Trailers Settings -->
    <include name="General_Trailers_Settings">
        <control type="label" id="32102">
            <include>SkinSettings_Header</include>
            <label>31849</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="radiobutton" id="31751">
            <include>SkinSettings_Button</include>
            <label>31068</label>
            <onclick condition="!Skin.HasSetting(AllowPVRPreview)">RunScript(script.skin.helper.service,action=setkodisetting,setting=pvrplayback.switchtofullscreen,value=false)</onclick>
            <onclick>Skin.ToggleSetting(PVRPreview)</onclick>
            <selected>Skin.HasSetting(PVRPreview)</selected>
            <visible>PVR.HasTVChannels</visible>
        </control>
        <!-- allow youtube lookup -->
        <control type="radiobutton" id="31796">
            <description>Allow youtube lookup for trailers</description>
            <include>SkinSettings_Button</include>
            <label>31796</label>
            <onclick condition="!Skin.String(AutoYoutubeTrailer,true)">Skin.SetString(AutoYoutubeTrailer,true)</onclick>
            <onclick condition="Skin.String(AutoYoutubeTrailer,true)">Skin.SetString(AutoYoutubeTrailer,false)</onclick>
            <selected>Skin.String(AutoYoutubeTrailer,true)</selected>
        </control>
        <!-- allow trailers for tvshows -->
        <control type="radiobutton" id="32100">
            <description>Allow auto-trailers for tvshows</description>
            <include>SkinSettings_Button</include>
            <label>31927</label>
            <onclick>Skin.ToggleSetting(AllowTVShowsTrailer)</onclick>
            <selected>Skin.HasSetting(AllowTVShowsTrailer)</selected>
        </control>
        <!-- allow trailer lookup for non-library -->
        <control type="radiobutton" id="32101">
            <description>Allow trailers for Non-Library items</description>
            <include>SkinSettings_Button</include>
            <label>31928</label>
            <onclick>Skin.ToggleSetting(AllowAddonTrailer)</onclick>
            <selected>Skin.HasSetting(AllowAddonTrailer)</selected>
        </control>
    </include>

    <!-- General Artwork & Details Settings -->
    <include name="General_Artwork_Details_Settings">
        <control type="label" id="8027">
            <include>SkinSettings_Header</include>
            <label>31929</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="radiobutton" id="31648">
            <include>SkinSettings_Button</include>
            <label>31648</label>
            <onclick>Skin.ToggleSetting(ShowLabelsPosterEpisodes)</onclick>
            <selected>Skin.HasSetting(ShowLabelsPosterEpisodes)</selected>
            <visible>!Skin.HasSetting(DisableAllWidgets)</visible>
        </control>
        <!-- Prefer Clearart Over Landscapes -->
		<control type="radiobutton" id="8023">
            <description/>
            <include>SkinSettings_Button</include>
            <label>31652</label>
            <onclick>Skin.ToggleSetting(PreferClearArtOverLandscape)</onclick>
            <selected>Skin.HasSetting(PreferClearArtOverLandscape)</selected>
        </control>
        <control type="radiobutton" id="31766">
            <description>Disable auto scroll for plots/descriptions</description>
            <include>SkinSettings_Button</include>
            <label>31771</label>
            <onclick>Skin.ToggleSetting(DisablePlotAutoScroll)</onclick>
            <selected>Skin.HasSetting(DisablePlotAutoScroll)</selected>
        </control>
        <!--thumbs label alignment-->
        <control type="radiobutton" id="5168">
            <include>SkinSettings_Button</include>
            <label>31600</label>
            <onclick>Skin.ToggleSetting(ThumbsLabelAlignmentCenter)</onclick>
            <selected>Skin.HasSetting(ThumbsLabelAlignmentCenter)</selected>
        </control>
        <control type="radiobutton" id="31765">
            <description>Emby CoverArt compatability</description>
            <include>SkinSettings_Button</include>
            <label>31765</label>
            <onclick>Skin.ToggleSetting(EmbyCovertArtEnabled)</onclick>
            <selected>Skin.HasSetting(EmbyCovertArtEnabled)</selected>
        </control>
    </include>

    <!-- General Header Settings -->
    <include name="General_Header_Settings">
        <!-- header settings -->
        <control type="label" id="31704">
            <include>SkinSettings_Header</include>
            <label>31704</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="button" id="31702">
            <include>SkinSettings_Button</include>
            <label>31702</label>
            <label2>$INFO[Skin.String(general_header.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=general_header,header=$LOCALIZE[31702])</onclick>
        </control>
        <control type="button" id="31703">
            <include>SkinSettings_Button</include>
            <label>31703</label>
            <label2>$INFO[Skin.String(home_header.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=home_header,header=$LOCALIZE[31703])</onclick>
        </control>
        <!--compact header-->
        <control type="radiobutton" id="31671">
            <include>SkinSettings_Button</include>
            <label>31671</label>
            <onclick>Skin.ToggleSetting(CompactHeader)</onclick>
            <selected>Skin.HasSetting(CompactHeader)</selected>
        </control>
        <!--set subheader infoline-->
        <control type="button" id="31688">
            <include>SkinSettings_Button</include>
            <label>31688</label>
            <label2>$INFO[Skin.String(infoline.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=infoline,header=$LOCALIZE[31688])</onclick>
            <visible>!Skin.Hastheme(classic)</visible>
            <visible>String.Contains(Skin.String(general_header),title) | String.Contains(Skin.String(home_header),title)</visible>
        </control>
        <!--custom logo-->
        <control type="radiobutton" id="23023">
            <include>SkinSettings_Button</include>
            <label>31877</label>
            <onclick condition="!Skin.String(CustomLogoImage)">RunScript(script.skin.helper.service,action=SAVESKINIMAGE,skinstring=CustomLogoImage)</onclick>
            <onclick condition="Skin.String(CustomLogoImage)">Skin.Reset(CustomLogoImage)</onclick>
            <selected>Skin.String(CustomLogoImage)</selected>
            <visible>String.Contains(Skin.String(general_header),logo) | String.Contains(Skin.String(home_header),logo) | String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <!-- show movie title -->
        <control type="radiobutton" id="13028">
            <include>SkinSettings_Button</include>
            <label>31235</label>
            <onclick>Skin.ToggleSetting(ShowMovieTitleHeader)</onclick>
            <selected>Skin.HasSetting(ShowMovieTitleHeader)</selected>
        </control>
        <!-- logo alignment-->
        <control type="button" id="123023">
            <include>SkinSettings_Button</include>
            <label>31618</label>
            <label2>$INFO[Skin.String(LogoImageAlignment)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=LogoImageAlignment,header=$LOCALIZE[31618])</onclick>
            <visible>String.Contains(Skin.String(home_header),logo) + String.Contains(Skin.String(HomeLayout),simplever)</visible>
            <visible>Skin.String(CustomLogoImage)</visible>
        </control>
        <control type="radiobutton" id="31700">
            <include>SkinSettings_Button</include>
            <label>31700</label>
            <onclick>Skin.ToggleSetting(Home_RecordingIndicator)</onclick>
            <selected>Skin.HasSetting(Home_RecordingIndicator)</selected>
        </control>
        <control type="radiobutton" id="31740">
            <include>SkinSettings_Button</include>
            <label>31740</label>
            <onclick>Skin.ToggleSetting(Home_ShowBackgroundLogo)</onclick>
            <selected>Skin.HasSetting(Home_ShowBackgroundLogo)</selected>
            <visible>String.Contains(Skin.String(home_header),logo)</visible>
        </control>
    </include>

    <!-- General Thumbs Border Settings -->
    <include name="General_Thumbs_Border_Settings">
        <!-- Thumbs Border Header -->
        <control type="label" id="31705">
            <include>SkinSettings_Header</include>
            <label>31875</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!--thumbs border size unfocused-->
        <control type="button" id="31003">
            <include>SkinSettings_Button</include>
            <label>31003</label>
            <label2>$INFO[Skin.String(thumbsborder_unfocused.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=thumbsborder_unfocused,header=$LOCALIZE[31003])</onclick>
        </control>
        <!--thumbs border size focused-->
        <control type="button" id="31628">
            <include>SkinSettings_Button</include>
            <label>31628</label>
            <label2>$INFO[Skin.String(thumbsborder_focused.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=thumbsborder_focused,header=$LOCALIZE[31003])</onclick>
        </control>
        <!--home alternate borders-->
        <control type="radiobutton" id="31638">
            <include>SkinSettings_Button</include>
            <label>31638</label>
            <onclick>Skin.ToggleSetting(Home_TransParentTiles)</onclick>
            <selected>Skin.HasSetting(Home_TransParentTiles)</selected>
            <visible>String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small) | String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small) | String.IsEqual(Skin.String(HomeLayout),enhanced)</visible>
        </control>
    </include>

    <!-- General Watched Indicators Settings -->
    <include name="General_Indicators_Settings">
        <!-- watched indicators -->
        <control type="label" id="17130">
            <include>SkinSettings_Header</include>
            <label>31512</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="radiobutton" id="17131">
            <include>SkinSettings_Button</include>
            <label>31513</label>
            <onclick>Skin.ToggleSetting(WatchedIndicator.Watched)</onclick>
            <selected>Skin.HasSetting(WatchedIndicator.Watched)</selected>
        </control>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17132" />
            <param name="label" value="$LOCALIZE[31517]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.Watched.Color" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.Watched)" />
        </include>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17133" />
            <param name="label" value="$LOCALIZE[31521]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.Watched.TextColor" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.Watched)" />
        </include>
        <control type="radiobutton" id="17134">
            <include>SkinSettings_Button</include>
            <label>31514</label>
            <onclick>Skin.ToggleSetting(WatchedIndicator.Progress)</onclick>
            <selected>Skin.HasSetting(WatchedIndicator.Progress)</selected>
        </control>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17135" />
            <param name="label" value="$LOCALIZE[31517]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.Progress.Color" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.Progress)" />
        </include>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17136" />
            <param name="label" value="$LOCALIZE[31521]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.Progress.TextColor" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.Progress)" />
        </include>
        <control type="radiobutton" id="17137">
            <include>SkinSettings_Button</include>
            <label>31515</label>
            <onclick>Skin.ToggleSetting(WatchedIndicator.Sets)</onclick>
            <selected>Skin.HasSetting(WatchedIndicator.Sets)</selected>
        </control>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17138" />
            <param name="label" value="$LOCALIZE[31517]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.Sets.Color" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.Sets)" />
        </include>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17139" />
            <param name="label" value="$LOCALIZE[31521]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.Sets.TextColor" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.Sets)" />
        </include>
        <control type="radiobutton" id="17140">
            <include>SkinSettings_Button</include>
            <label>31516</label>
            <onclick>Skin.ToggleSetting(WatchedIndicator.Episodes)</onclick>
            <selected>Skin.HasSetting(WatchedIndicator.Episodes)</selected>
        </control>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17141" />
            <param name="label" value="$LOCALIZE[31517]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.Episodes.Color" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.Episodes)" />
        </include>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17142" />
            <param name="label" value="$LOCALIZE[31521]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.Episodes.TextColor" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.Episodes)" />
        </include>
        <control type="radiobutton" id="17160">
            <include>SkinSettings_Button</include>
            <label>31568</label>
            <onclick>Skin.ToggleSetting(WatchedIndicator.UnWatched)</onclick>
            <selected>Skin.HasSetting(WatchedIndicator.UnWatched)</selected>
        </control>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17161" />
            <param name="label" value="$LOCALIZE[31517]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.UnWatched.Color" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.UnWatched)" />
        </include>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17162" />
            <param name="label" value="$LOCALIZE[31521]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.UnWatched.TextColor" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.UnWatched)" />
        </include>
        <control type="radiobutton" id="31789">
            <include>SkinSettings_Button</include>
            <label>31789</label>
            <onclick>Skin.ToggleSetting(WatchedIndicator.Playing)</onclick>
            <selected>Skin.HasSetting(WatchedIndicator.Playing)</selected>
        </control>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="317891" />
            <param name="label" value="$LOCALIZE[31517]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.Playing.Color" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.Playing)" />
        </include>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31790" />
            <param name="label" value="$LOCALIZE[31790]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="WatchedIndicator.Playing.TextColor" />
            <param name="visible" value="Skin.HasSetting(WatchedIndicator.Playing)" />
        </include>
        <!--Bingie New Episodes Flag -->
        <control type="radiobutton" id="31039">
            <include>SkinSettings_Button</include>
            <label>31039</label>
            <onclick>Skin.ToggleSetting(DisableNewEpisodesIndicator)</onclick>
            <selected>Skin.HasSetting(DisableNewEpisodesIndicator)</selected>
        </control>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="31008" />
            <param name="label" value="$LOCALIZE[31008]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="BingieNewEpisodesTagColor" />
            <param name="visible" value="!Skin.HasSetting(DisableNewEpisodesIndicator)" />
        </include>
    </include>

    <!-- General Poster Overlays Settings -->
    <include name="General_Poster_Overlays_Settings">
        <!-- poster overlays -->
        <control type="label" id="17150">
            <include>SkinSettings_Header</include>
            <label>31524</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="radiobutton" id="17151">
            <include>SkinSettings_Button</include>
            <label>31525</label>
            <onclick>Skin.ToggleSetting(CaseOverlays)</onclick>
            <selected>Skin.HasSetting(CaseOverlays)</selected>
        </control>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17152" />
            <param name="label" value="$LOCALIZE[31526]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="CaseOverlays.Color" />
            <param name="visible" value="Skin.HasSetting(CaseOverlays)" />
        </include>
        <include content="SkinSettings_ColorButton">
            <param name="id" value="17153" />
            <param name="label" value="$LOCALIZE[31527]" />
            <param name="labelprefix" value="  --- " />
            <param name="skinsetting" value="CaseOverlays.TextColor" />
            <param name="visible" value="Skin.HasSetting(CaseOverlays)" />
        </include>
        <control type="button" id="17154">
            <include>SkinSettings_Button</include>
            <label>  --- $LOCALIZE[31528]</label>
            <label2>$INFO[Skin.String(CaseOverlays.Fallback)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setskinsetting,setting=CaseOverlays.Fallback,header=$LOCALIZE[31528])</onclick>
            <visible>Skin.HasSetting(CaseOverlays)</visible>
        </control>
    </include>

    <!-- General Spinner Settings -->
    <include name="General_Spinner_Settings">
        <!-- Spinner Header -->
        <control type="label" id="31711">
            <include>SkinSettings_Header</include>
            <label>31876</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!--Busy Dialog Spinner-->
        <control type="button" id="5165">
            <include>SkinSettings_Button</include>
            <label>31504</label>
            <label2>$INFO[Skin.String(SkinHelper.SpinnerTexture.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=BUSYTEXTURE)</onclick>
        </control>
        <!--BUSY LOADING SPINNER COLOR-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="5166" />
            <param name="label" value="$LOCALIZE[31505]" />
            <param name="skinsetting" value="SpinnerTexture.Color" />
        </include>
        <!--LOADING SPINNER DIM-->
        <control type="radiobutton" id="5167">
            <include>SkinSettings_Button</include>
            <label>31506</label>
            <onclick>Skin.ToggleSetting(SpinnerDimScreen)</onclick>
            <selected>Skin.HasSetting(SpinnerDimScreen)</selected>
        </control>
        <!--Widget Busy Spinner-->
        <control type="button" id="31370">
            <include>SkinSettings_Button</include>
            <label>31370</label>
            <label2>$INFO[Skin.String(SkinHelper.WidgetSpinnerTexture.label)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=BUSYTEXTURE,skinstring=SkinHelper.WidgetSpinnerTexture)</onclick>
        </control>
        <!--WIDGET LOADING SPINNER COLOR-->
        <include content="SkinSettings_ColorButton">
            <param name="id" value="5169" />
            <param name="label" value="$LOCALIZE[31520]" />
            <param name="skinsetting" value="WidgetSpinnerTexture.Color" />
        </include>
    </include>

    <!-- General Resources Settings -->
    <include name="General_Resources_Settings">
        <!-- resources -->
        <control type="label" id="8011">
            <include>SkinSettings_Header</include>
            <label>31878</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="button" id="17121">
            <description>Weather Icons</description>
            <include>SkinSettings_Button</include>
            <label>31623</label>
            <label2>$INFO[Skin.String(WeatherIconPack.name)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setresourceaddon,skinstring=WeatherIconPack,addontype=resource.images.weathericons)</onclick>
        </control>
        <control type="button" id="31624">
            <description>Weather FanArt</description>
            <include>SkinSettings_Button</include>
            <label>31624</label>
            <label2>$INFO[Skin.String(WeatherFanArtPack.name)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setresourceaddon,skinstring=WeatherFanArtPack,addontype=resource.images.weatherfanart)</onclick>
        </control>
        <control type="button" id="31625">
            <description>Studio Icons</description>
            <include>SkinSettings_Button</include>
            <label>31625</label>
            <label2>$INFO[Skin.String(SkinHelper.StudioLogos.Name)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setresourceaddon,skinstring=SkinHelper.StudioLogos,addontype=resource.images.studios)</onclick>
        </control>
        <control type="button" id="17125">
            <description>Movie Genre Icons</description>
            <include>SkinSettings_Button</include>
            <label>31626</label>
            <label2>$INFO[Skin.String(MovieGenreIconPack.name)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setresourceaddon,skinstring=MovieGenreIconPack,addontype=resource.images.moviegenreicons)</onclick>
        </control>
        <control type="button" id="17126">
            <description>Music Genre Icons</description>
            <include>SkinSettings_Button</include>
            <label>31627</label>
            <label2>$INFO[Skin.String(MusicGenreIconPack.name)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setresourceaddon,skinstring=MusicGenreIconPack,addontype=resource.images.musicgenreicons)</onclick>
        </control>
        <control type="button" id="31772">
            <description>Movie Genre Fanart</description>
            <include>SkinSettings_Button</include>
            <label>31772</label>
            <label2>$INFO[Skin.String(moviegenrefanart.name)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setresourceaddon,skinstring=moviegenrefanart,addontype=resource.images.moviegenrefanart)</onclick>
        </control>
        <control type="button" id="31826">
            <description>Language Flags</description>
            <include>SkinSettings_Button</include>
            <label>31826</label>
            <label2>$INFO[Skin.String(LanguageFlags.name)]</label2>
            <onclick>RunScript(script.skin.helper.service,action=setresourceaddon,skinstring=LanguageFlags,addontype=resource.images.languageflags)</onclick>
        </control>
    </include>

    <!-- Splash Screen Settings -->
    <include name="General_Splash_Screen_Settings">
        <control type="label" id="8014">
            <include>SkinSettings_Header</include>
            <label>31176</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="radiobutton" id="8030">
            <!-- Enable 4k animations -->
            <description/>
            <include>SkinSettings_Button</include>
            <label>31075</label>
            <onclick condition="String.IsEqual(Skin.String(SplashAnimationResolution),2160p)">Skin.SetString(SplashAnimationResolution,1080p)</onclick>
            <onclick condition="String.IsEqual(Skin.String(SplashAnimationResolution),1080p)">Skin.SetString(SplashAnimationResolution,2160p)</onclick>
            <selected>String.IsEqual(Skin.String(SplashAnimationResolution),2160p)</selected>
            <visible>!Skin.HasSetting(DisableAnimatedIntro) + String.IsEmpty(Skin.String(SplashScreen)) + String.IsEmpty(Skin.String(AutoStartPlayList))</visible>
        </control>
        <control type="radiobutton" id="8028">
            <!-- Use alternative animated splash (shorter) -->
            <description/>
            <include>SkinSettings_Button</include>
            <label>31044</label>
            <onclick>Skin.ToggleSetting(UseAltDefaultIntro)</onclick>
            <selected>Skin.HasSetting(UseAltDefaultIntro)</selected>
            <visible>!Skin.HasSetting(DisableAnimatedIntro) + String.IsEmpty(Skin.String(SplashScreen)) + String.IsEmpty(Skin.String(AutoStartPlayList))</visible>
        </control>
        <control type="radiobutton" id="8021">
            <!-- disable video splash -->
            <description/>
            <include>SkinSettings_Button</include>
            <label>31041</label>
            <onclick>Skin.ToggleSetting(DisableAnimatedIntro)</onclick>
            <selected>Skin.HasSetting(DisableAnimatedIntro)</selected>
            <visible>String.IsEmpty(Skin.String(SplashScreen)) + String.IsEmpty(Skin.String(AutoStartPlayList))</visible>
        </control>
        <control type="radiobutton" id="8029">
            <!-- Use alternative splash image -->
            <description/>
            <include>SkinSettings_Button</include>
            <label>31045</label>
            <onclick>Skin.ToggleSetting(UseAltDefaultSplashImage)</onclick>
            <selected>Skin.HasSetting(UseAltDefaultSplashImage)</selected>
            <visible>Skin.HasSetting(DisableAnimatedIntro) + String.IsEmpty(Skin.String(SplashScreen)) + String.IsEmpty(Skin.String(AutoStartPlayList))</visible>
        </control>
        <control type="radiobutton" id="8020">
            <!-- use custom splash image or video -->
            <description/>
            <include>SkinSettings_Button</include>
            <label>31631</label>
            <onclick condition="String.IsEmpty(Skin.String(SplashScreen))">Skin.SetFile(SplashScreen)</onclick>
            <onclick condition="Skin.String(SplashScreen)">Skin.Reset(SplashScreen)</onclick>
            <selected>Skin.String(SplashScreen)</selected>
        </control>
        <!-- set playlist on startup -->
        <control type="radiobutton" id="5144">
            <include>SkinSettings_Button</include>
            <label>31726</label>
            <onclick condition="!Skin.String(AutoStartPlayList)">Skin.SetFile(AutoStartPlayList,,special://musicplaylists/)</onclick>
            <onclick condition="Skin.String(AutoStartPlayList)">Skin.Reset(AutoStartPlayList)</onclick>
            <selected>Skin.String(AutoStartPlayList)</selected>
        </control>
    </include>

    <!-- General Advanced Settings -->
    <include name="General_Advanced_Settings">
        <!-- advanced settings -->
        <control type="label" id="8010">
            <include>SkinSettings_Header</include>
            <label>31270</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <control type="radiobutton" id="31762">
            <description>Keep widget focused when starting playback from home widget</description>
            <include>SkinSettings_Button</include>
            <label>31762</label>
            <onclick>Skin.ToggleSetting(KeepWidgetFocus)</onclick>
            <selected>Skin.HasSetting(KeepWidgetFocus)</selected>
        </control>
        <control type="radiobutton" id="5160">
            <description>Low performance systems</description>
            <include>SkinSettings_Button</include>
            <label>31326</label>
            <onclick>Skin.ToggleSetting(LowPerformanceMode)</onclick>
            <onclick condition="Skin.HasSetting(EnableFixedFocusWidgets)">Skin.ToggleSetting(EnableFixedFocusWidgets)</onclick>
            <onclick>Skin.Reset(SkinHelper.EnableExtraFanart)</onclick>
            <onclick>Skin.SetString(SkinHelper.ShowInfoAtPlaybackStart,0)</onclick>
            <selected>Skin.HasSetting(LowPerformanceMode)</selected>
            <visible>!String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
        </control>
        <control type="radiobutton" id="31724">
            <description>Do Not Display Hour Representation of the Duration</description>
            <include>SkinSettings_Button</include>
            <label>31724</label>
            <onclick>Skin.ToggleSetting(DisableHoursDuration)</onclick>
            <selected>Skin.HasSetting(DisableHoursDuration)</selected>
        </control>
        <control type="radiobutton" id="8024">
            <!-- dialog yesno default focus to NO -->
            <description/>
            <include>SkinSettings_Button</include>
            <label>31656</label>
            <onclick>Skin.ToggleSetting(DialogYesNo_FocusNO)</onclick>
            <selected>Skin.HasSetting(DialogYesNo_FocusNO)</selected>
        </control>
        <control type="radiobutton" id="8025">
            <include>SkinSettings_Button</include>
            <label>31808</label>
            <onclick>Skin.ToggleSetting(EnableWeatherAlertOverlay)</onclick>
            <selected>Skin.HasSetting(EnableWeatherAlertOverlay)</selected>
        </control>
    </include>

    <!-- General Skin Helper Settings -->
    <include name="General_Skin_Helper_Settings">
        <!-- Skin Helper Options -->
        <control type="label" id="8013">
            <include>SkinSettings_Header</include>
            <label>31879</label>
            <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
        </control>
        <!-- skin helper settings -->
        <include content="SkinSettings_ActionButton">
            <param name="id" value="8019" />
            <param name="label" value="31630" />
            <param name="action" value="Addon.OpenSettings(script.module.metadatautils)" />
            <param name="visible" value="true" />
        </include>
        <!-- Enable auto-download via Artwork Beef -->
        <control type="radiobutton" id="5139">
            <include>SkinSettings_Button</include>
            <label>31099</label>
            <onclick condition="System.HasAddon(script.artwork.beef)">Skin.ToggleSetting(EnableArtworkBeef)</onclick>
            <onclick condition="!System.HasAddon(script.artwork.beef)">RunPlugin(plugin://script.artwork.beef)</onclick>
            <selected>Skin.HasSetting(EnableArtworkBeef)</selected>
        </control>
        <control type="radiobutton" id="31710">
            <description>Enable Skin Helper Artwork Lookups for Addons</description>
            <include>SkinSettings_Button</include>
            <label>31710</label>
            <onclick>Skin.ToggleSetting(SkinHelper.EnableExtendedArt)</onclick>
            <selected>Skin.HasSetting(SkinHelper.EnableExtendedArt)</selected>
        </control>
    </include>
</includes>
