<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>

    <include name="OSDPanelClassic">
		<control type="group">
			<bottom>20</bottom>
			<height>376</height>
            <posx>180</posx>
            <width>1560</width>
            <visible>![Window.IsActive(OSDVideoSettings) | Window.IsActive(OSDAudioSettings) | Window.IsActive(subtitlesearch) | Window.IsActive(sliderdialog)]</visible>
			<!--Panel-->
			<control type="image">
				<texture>osd/classic/osd_panel.png</texture>
			</control>

			<!--Cover-->
			<control type="image">
				<!--No Movie-->
				<posx>110</posx>
				<posy>75</posy>
				<width>220</width>
				<height>220</height>
				<fadetime>200</fadetime>
				<texture background="true">$INFO[ListItem.Art(poster)]</texture>
				<aspectratio align="left" aligny="top">keep</aspectratio>
				<visible>!VideoPlayer.Content(Movies)</visible>
			</control>
			
			<!-- discart -->
			<control type="image">
				<posx>150</posx>
				<posy>80</posy>
				<width>200</width>
				<height>200</height>
				<aligny>center</aligny>
				<fadetime>300</fadetime>
				<animation effect="rotate" end="-360" center="auto" time="12000" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
				<animation effect="fade" start="0" end="100" delay="800" time="1200" reversible="false"/>
				<texture background="true" diffuse="diffuse/cdmask_medium_new.png" fallback="defaultcovers/cd_medium.png" border="5">$VAR[PlayerDiscArtImage]</texture>
				<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
				<visible>VideoPlayer.Content(Movies) + !String.IsEmpty(Player.Art(poster))</visible>
				<visible>!Skin.HasSetting(HideOSDDisc)</visible>
			</control>
			
			<control type="image">
				<!--Movie-->
				<posx>110</posx>
				<posy>75</posy>
				<width>155</width>
				<height>220</height>
				<fadetime>200</fadetime>
				<texture background="true" diffuse="diffuse/poster.png">$INFO[ListItem.Art(poster)]</texture>
				<aspectratio align="left" aligny="top">stretch</aspectratio>
				<visible>VideoPlayer.Content(Movies)</visible>
			</control>

			<!-- OSDLabel1 -->
			<control type="label">
				<posx>370</posx>
				<posy>70</posy>
				<width>900</width>
				<align>left</align>
				<font>Light45</font>
				<textcolor>FFfffeff</textcolor>
				<label>$VAR[OSDLabel1]</label>
				<scroll>false</scroll>
			</control>
			<!-- OSDLabel2 -->
			<control type="label">
				<posx>370</posx>
				<posy>120</posy>
				<width>900</width>
				<align>left</align>
				<font>Light45</font>
				<textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
				<label>[B]$VAR[OSDLabel2][/B]</label>
				<scroll>false</scroll>
			</control>

			<!--Flags-->
			<control type="group">
				<visible>![[Window.IsActive(musicosd) | Window.IsActive(videoosd)] + ![Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(subtitlesearch)]]</visible>
				<animation time="300" effect="fade" delay="300">Visible</animation>
				<posx>370</posx>
				<posy>270</posy>
				<include>mediaflags</include>
			</control>
			
			<!--Time-->
			<control type="label">
				<!--Left Play Time-->
				<posx>370</posx>
				<posy>188</posy>
				<width>200</width>
				<align>left</align>
				<font>Light28</font>
				<textcolor>FFfffeff</textcolor>
				<label>$VAR[PlayTime]</label>
			</control>
			<control type="label">
				<!--Right Time Remaining-->
				<right>80</right>
				<posy>188</posy>
				<width>200</width>
				<align>right</align>
				<font>Light28</font>
				<textcolor>FFfffeff</textcolor>
				<label>- $VAR[RemainingTime]</label>
			</control>

			<!-- OSDLabel3 -->
			<control type="label">
				<right>80</right>
				<posy>255</posy>
				<width>500</width>
				<align>right</align>
				<font>Reg28</font>
				<textcolor>black</textcolor>
				<label>$VAR[OSDLabel3]</label>
				<visible>![[Window.IsActive(musicosd) | Window.IsActive(videoosd)] + ![Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(subtitlesearch)]]</visible>
				<animation time="300" effect="fade" delay="300">Visible</animation>
			</control>

			<control type="grouplist">
				<!--Clock-->
				<right>80</right>
				<posy>70</posy>
				<width>400</width>
				<height>100</height>
				<align>right</align>
				<itemgap>4</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<animation type="Conditional" condition="Player.Paused | Player.Forwarding | Player.Rewinding">
					<effect type="slide" start="0,0" end="-160,0" time="200" tween="cubic" easing="inout" delay="0" />
				</animation>
				<control type="label">
					<width min="0" max="150">auto</width>
					<height>80</height>
					<info>System.Time(hh:mm)</info>
					<font>Light60</font>
					<aligny>center</aligny>
					<textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(system.time,AM)</visible>
					<width min="0" max="150">auto</width>
					<height>80</height>
					<label>378</label>
					<font>Light60</font>
					<aligny>center</aligny>
					<textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(system.time,PM)</visible>
					<width min="0" max="150">auto</width>
					<height>80</height>
					<label>379</label>
					<font>Light60</font>
					<aligny>center</aligny>
					<textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
				</control>
			</control>
			
			<!--OSD: right side below clock-->
				<control type="label">
					<!--PlayerActionLabel-->
					<animation type="Conditional" condition="Player.Paused | Player.Forwarding | Player.Rewinding">
						<effect type="slide" start="0,0" end="-160,0" time="200" tween="cubic" easing="inout" delay="0" />
					</animation>
					<right>80</right>
					<bottom>180</bottom>
					<width>500</width>
					<align>right</align>
					<font>Reg26</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>$VAR[PlayerActionLabel]</label>
					
				</control>
				
				<control type="image">
					<visible>Player.Paused</visible>
					<animation delay="150" time="300" effect="fade">Visible</animation>
					<animation delay="0" time="200" effect="fade">Hidden</animation>
					<right>80</right>
					<bottom>160</bottom>
					<width>160</width>
					<height>160</height>
					<texture>osd/osd_pause.png</texture>
					<colordiffuse>$INFO[Skin.String(OSDButtonsColor)]</colordiffuse>
				</control>
				<control type="image">
					<visible>Player.Forwarding</visible>
					<animation delay="150" time="300" effect="fade">Visible</animation>
					<animation delay="0" time="200" effect="fade">Hidden</animation>
					<right>90</right>
					<bottom>190</bottom>
					<width>120</width>
					<height>120</height>
					<texture>osd/osd_ff.png</texture>
					<colordiffuse>$INFO[Skin.String(OSDButtonsColor)]</colordiffuse>
				</control>
				<control type="image">
					<visible>Player.Rewinding</visible>
					<animation delay="150" time="300" effect="fade">Visible</animation>
					<animation delay="0" time="200" effect="fade">Hidden</animation>
					<right>100</right>
					<bottom>190</bottom>
					<width>120</width>
					<height>120</height>
					<texture flipx="true">osd/osd_ff.png</texture>
					<colordiffuse>$INFO[Skin.String(OSDPrimaryTextColor)]</colordiffuse>
				</control>
		
			
			<!--Process/Seekbar-->
			<control type="progress" id="1">
				<description>ProgressbarCache</description>
				<posx>510</posx>
				<posy>210</posy>
				<width>810</width>
				<info>Player.ProgressCache</info>
				<midtexture border="6" colordiffuse="grey">common/progress/progressmid.png</midtexture>
			</control>
			<control type="progress" id="23">
				<description>Progress Bar</description>
				<posx>510</posx>
				<posy>210</posy>
				<width>810</width>
				<visible>!VideoPlayer.HasEpg</visible>
				<info>Player.Progress</info>
			</control>
			<control type="progress" id="23">
				<description>Progress Bar</description>
				<posx>510</posx>
				<posy>210</posy>
				<width>810</width>
				<visible>VideoPlayer.HasEpg</visible>
				<info>PVR.EpgEventProgress</info>
			</control>
		</control>
	</include>
    
	<include name="OSDPanelModern">
		<control type="group">
			<bottom>0</bottom>
			<height>290</height>
			<!--Panel-->
			<control type="image">
				<posx>0</posx>
				<posy>0</posy>
				<width>100%</width>
				<height>290</height>
				<texture border="5">$VAR[osdpanelimage]</texture>
				<colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
			</control>

			<!-- music cover with cd art -->
            <control type="group">
                <visible>Player.HasAudio + !Skin.HasSetting(HideOSDDisc)</visible>
                <!-- disc art -->
                <control type="image">
                    <posx>150</posx>
                    <posy>10</posy>
                    <width>280</width>
                    <height>280</height>
                    <aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
                    <fadetime>300</fadetime>
                    <animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
                    <texture background="true" fallback="defaultcovers/cd_medium.png" diffuse="diffuse/cdmask_new.png">$VAR[PlayerDiscArtImage]</texture>
                </control>
                <!-- cover background + cover image-->
                <control type="group">
                    <posx>20</posx>
                    <posy>10</posy>
                    <width>280</width>
                    <height>280</height>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/music_cover_cd.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/music_cover_cd.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/music_cover_cd.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <fadetime>200</fadetime>
                        <bordersize>5</bordersize>
                        <texture background="true" border="5" fallback="defaultmusicsongs.png" diffuse="diffuse/music_cover_cd.png">$VAR[AudioPlayerCoverImage]</texture>
                        <aspectratio align="left" aligny="center" scalediffuse="false">keep</aspectratio>
                    </control>
                </control>
            </control>
            
            <!-- music cover without cd art -->
            <control type="group">
                <visible>Player.HasAudio + Skin.HasSetting(HideOSDDisc)</visible>
                <!-- cover background + cover image-->
                <control type="group">
                    <posx>20</posx>
                    <posy>10</posy>
                    <width>280</width>
                    <height>280</height>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/panel.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/panel.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/panel.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <fadetime>200</fadetime>
                        <bordersize>5</bordersize>
                        <texture background="true" border="5" fallback="defaultmusicsongs.png" diffuse="diffuse/panel.png">$VAR[AudioPlayerCoverImage]</texture>
                        <aspectratio align="left" aligny="center" scalediffuse="false">keep</aspectratio>
                    </control>
                </control>
            </control>

			
            <!-- video cover and discart -->
			<control type="group">
                <visible>Player.HasVideo</visible>
                <!-- discart -->
                <control type="image">
                    <posx>100</posx>
                    <posy>20</posy>
                    <width>250</width>
                    <height>250</height>
                    <aligny>center</aligny>
                    <fadetime>300</fadetime>
                    <bordersize>20</bordersize>
                    <animation effect="rotate" end="-360" center="auto" time="12000" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
                    <animation effect="fade" start="0" end="100" delay="800" time="1200" reversible="false"/>
                    <texture background="true" diffuse="diffuse/cdmask_medium_new.png" fallback="defaultcovers/cd_medium.png" border="5">$VAR[PlayerDiscArtImage]</texture>
                    <aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
                    <visible>Player.HasVideo + [!String.IsEmpty(Player.Art(poster)) | !String.IsEmpty(Player.Art(tvshow.poster))]</visible>
                    <visible>!Skin.HasSetting(HideOSDDisc) + ![VideoPlayer.Content(livetv) + Skin.HasSetting(NoPvrArtOSD)]</visible>
                </control>

                <!--Video Cover-->
                <control type="image">
                    <posx>60</posx>
                    <posy>20</posy>
                    <width>180</width>
                    <height>250</height>
                    <fadetime>200</fadetime>
                    <texture background="true">$VAR[OSDImageDefault]</texture>
                    <aspectratio align="left" aligny="center">keep</aspectratio>
					<visible>Player.HasVideo + [!String.IsEmpty(Window(Home).Property(SkinHelper.Player.AnimatedPoster)) | !String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster)) | !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Poster))]</visible>
				</control>
				<!--Cover no poster-->
				<control type="image">
					<posx>40</posx>
					<bottom>20</bottom>
					<width>160</width>
					<height>160</height>
					<fadetime>200</fadetime>
					<texture background="true">$VAR[OSDImageNoPoster]</texture>
					<aspectratio align="left" aligny="bottom">keep</aspectratio>
					<visible>Player.HasVideo + [String.IsEmpty(Window(Home).Property(SkinHelper.Player.AnimatedPoster)) + String.IsEmpty(Player.Art(tvshow.poster)) + String.IsEmpty(Player.Art(poster)) + String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Poster))]</visible>
				</control>

            </control>
			
			<control type="group">
				<animation effect="slide" end="50" time="0" condition="Player.HasAudio + !Skin.HasSetting(HideOSDDisc)">Conditional</animation>
				<!-- OSDLabel1 -->
				<control type="label">
					<posx>400</posx>
					<posy>20</posy>
					<width>1000</width>
					<align>left</align>
					<font>Light40</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>$VAR[OSDLabel1]</label>
					<scroll>false</scroll>
				</control>
                <!-- OSDLabel2 -->
				<control type="label">
					<posx>400</posx>
					<posy>80</posy>
					<width>980</width>
					<align>left</align>
					<font>Light42</font>
					<textcolor>$INFO[Skin.String(OSDSecondaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDSecondaryTextShadowColor)]</shadowcolor>
					<label>[B]$VAR[OSDLabel2][/B]</label>
					<scroll>false</scroll>
				</control>

				<control type="progress">
					<description>ProgressbarCache</description>
					<posx>540</posx>
					<posy>160</posy>
					<height>20</height>
					<width>700</width>
					<info>Player.ProgressCache</info>
					<visible>Player.HasDuration + !VideoPlayer.content(livetv)</visible>
					
					<texturebg border="5" colordiffuse="00ffffff">diffuse/panel.png</texturebg>
					<lefttexture/>
					<midtexture border="5" colordiffuse="$INFO[Skin.String(OSDProgressBarCacheColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
                    <visible>!String.IsEqual(Skin.String(OSDProgressBarCacheColor),None)</visible>
				</control>
				<control type="progress" id="23">
					<description>Progress Bar</description>
					<posx>540</posx>
					<posy>160</posy>
					<height>20</height>
					<width>700</width>
					<info>Player.Progress</info>
					<visible>!VideoPlayer.HasEpg</visible>
					<texturebg border="5" colordiffuse="$VAR[OSDProgressBarBackgroundColor]">diffuse/panel_trans.png</texturebg>
					<lefttexture/>
					<midtexture border="5" colordiffuse="$INFO[Skin.String(OSDProgressBarColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
				</control>
				<control type="progress" id="23">
					<description>Progress Bar</description>
					<posx>540</posx>
					<posy>160</posy>
					<height>20</height>
					<width>700</width>
					<info>PVR.EpgEventProgress</info>
					<visible>VideoPlayer.HasEpg</visible>
					<texturebg border="5" colordiffuse="$VAR[OSDProgressBarBackgroundColor]">diffuse/panel_trans.png</texturebg>
					<lefttexture/>
					<midtexture border="5" colordiffuse="$INFO[Skin.String(OSDProgressBarColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
				</control>
				<control type="image">
					<description>Progress Bar Border</description>
					<posx>540</posx>
					<posy>160</posy>
					<height>20</height>
					<width>700</width>
					<visible>Player.HasDuration</visible>
					<texture border="5" colordiffuse="$INFO[Skin.String(OSDProgressBarBorderColor)]">diffuse/thinborder.png</texture>
				</control>
                <control type="slider" id="401">
                    <description>Seek Slider</description>
                    <posx>540</posx>
					<posy>150</posy>
					<height>20</height>
					<width>700</width>
                    <texturesliderbar>colors/color_transparent.png</texturesliderbar>
                    <textureslidernib border="5" colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">diffuse/seekslider.png</textureslidernib>
                    <textureslidernibfocus>colors/color_white.png</textureslidernibfocus>
                    <visible>Player.Seeking</visible>
                </control>

				<!--Process/Seekbar-->
				<control type="label">
					<!--Play Time-->
					<posx>400</posx>
					<posy>140</posy>
					<width>160</width>
					<align>left</align>
					<font>Light28</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>$VAR[PlayTime]</label>
					
				</control>
				<control type="label">
					<!--Play Time-->
					<posx>1280</posx>
					<posy>140</posy>
					<width>160</width>
					<align>left</align>
					<font>Light28</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>$VAR[RemainingTime,- ]</label>
					<visible>Player.HasDuration</visible>
					
				</control>
				
			<!-- media flags -->
			<control type="group">
                <posx>400</posx>
                <posy>215</posy>
                <include>mediaflags</include>
                <visible>![Window.IsActive(videoosd) + ![Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(subtitlesearch)]]</visible>
                <visible>Player.HasVideo</visible>
                <animation effect="fade" time="400" delay="500" reversible="false">Visible</animation>
            </control>
            <control type="group">
                <posx>400</posx>
                <posy>215</posy>
                <include>mediaflagsAudio</include>
                <visible>![Window.IsActive(musicosd) + ![Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(subtitlesearch)]]</visible>
                <visible>!Player.HasVideo</visible>
                <animation effect="fade" time="400" delay="500" reversible="false">Visible</animation>
            </control>
        </control>


		<control type="image">
			<!--Stars music-->
			<visible>Window.IsActive(visualisation)</visible>
			<right>55</right>
			<posy>250</posy>
			<width>200</width>
			<height>50</height>
			<aspectratio aligny="top" align="right">keep</aspectratio>
			<colordiffuse>$INFO[Skin.String(OSDPrimaryTextColor)]</colordiffuse>
			<texture fallback="ratings/star_rating_simple/rating0.png">$VAR[musicrating_stars_player]</texture>
		</control>
			
		    <!--OSD: right side below clock-->
		    <control type="label">
				<!--PlayerActionLabel-->
				<animation type="Conditional" condition="Player.Paused | Player.Forwarding | Player.Rewinding">
					<effect type="slide" start="0,0" end="-160,0" time="200" tween="cubic" easing="inout" delay="0" />
				</animation>
				<right>60</right>
				<posy>90</posy>
				<width>890</width>
				<align>right</align>
				<font>Reg30</font>
				<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
				<label>$VAR[PlayerActionLabel]</label>
				
			</control>
			
			<control type="label">
				<!--Total duration-->
				<animation type="Conditional" condition="Player.Paused | Player.Forwarding | Player.Rewinding">
					<effect type="slide" start="0,0" end="-160,0" time="200" tween="cubic" easing="inout" delay="0" />
				</animation>
				<right>60</right>
				<posy>140</posy>
				<width>940</width>
				<align>right</align>
				<font>Light28</font>
				<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
				<label>$VAR[TotalDuration,[B]$LOCALIZE[180]: [/B]]</label>
				
			</control>
            
            <!-- OSD label 3 -->
            <control type="label">
                <right>60</right>
				<posy>215</posy>
                <font>flags</font>
                <width>800</width>
                <height>30</height>
                <align>right</align>
                <textcolor>$VAR[mediaFlagsFontColor]</textcolor>
                <label>$VAR[OSDLabel3]</label>
            </control>
			<!-- pause img -->
			<control type="image">
				<visible>Player.Paused</visible>
				<animation delay="150" time="300" effect="fade">Visible</animation>
				<animation delay="0" time="200" effect="fade">Hidden</animation>
				<right>50</right>
				<bottom>110</bottom>
				<width>160</width>
				<height>160</height>
				<texture>osd/osd_pause.png</texture>
				<colordiffuse>$INFO[Skin.String(OSDButtonsColor)]</colordiffuse>
			</control>
			<!-- ff/rr img -->
			<control type="image">
				<visible>Player.Forwarding</visible>
				<animation delay="150" time="300" effect="fade">Visible</animation>
				<animation delay="0" time="200" effect="fade">Hidden</animation>
				<right>60</right>
				<bottom>130</bottom>
				<width>120</width>
				<height>120</height>
				<texture>osd/osd_ff.png</texture>
				<colordiffuse>$INFO[Skin.String(OSDButtonsColor)]</colordiffuse>
			</control>
			<control type="image">
				<visible>Player.Rewinding</visible>
				<animation delay="150" time="300" effect="fade">Visible</animation>
				<animation delay="0" time="200" effect="fade">Hidden</animation>
				<right>70</right>
				<bottom>130</bottom>
				<width>120</width>
				<height>120</height>
				<texture flipx="true">osd/osd_ff.png</texture>
				<colordiffuse>$INFO[Skin.String(OSDPrimaryTextColor)]</colordiffuse>
			</control>

			<!--Clock-->
            <control type="label">
                <right>55</right>
                <posy>10</posy>
                <width>400</width>
                <height>100</height>
                <align>right</align>
                <info>System.Time</info>
                <font>Light60</font>
                <aligny>center</aligny>
                <textcolor>$INFO[Skin.String(OSDSecondaryTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(OSDSecondaryTextShadowColor)]</shadowcolor>
                <visible>!Skin.HasSetting(EnableTouchSupport)</visible>
                
                <animation type="Conditional" condition="Player.Paused | Player.Forwarding | Player.Rewinding">
                    <effect type="slide" start="0,0" end="-160,0" time="200" tween="cubic" easing="inout" delay="0" />
                </animation>
            </control>

		</control>
    </include>
	
	<include name="OSDPanelModernSlim">
		<control type="group">
			<bottom>0</bottom>
			<height>200</height>
			<!--Panel-->
			<control type="image">
				<posx>0</posx>
				<posy>0</posy>
				<width>100%</width>
				<height>200</height>
				<texture border="5">$VAR[osdpanelimage]</texture>
				<colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
			</control>
			
			<!--Cover movies - poster-->
			<control type="image" id="1">
				<posx>40</posx>
				<posy>-80</posy>
				<width>190</width>
				<height>265</height>
				<fadetime>200</fadetime>
				<texture background="true">$VAR[OSDImageDefault]</texture>
				<aspectratio align="left" aligny="bottom">stretch</aspectratio>
                <visible>Player.HasVideo + [!String.IsEmpty(Window(Home).Property(SkinHelper.Player.AnimatedPoster)) | !String.IsEmpty(Player.Art(tvshow.poster)) | !String.IsEmpty(Player.Art(poster)) | !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Poster))]</visible>
            </control>

            <!-- Cover No Poster  -->
            <control type="image">
                <posx>20</posx>
                <posy>-30</posy>
                <width>165</width>
                <height>165</height>
                <fadetime>200</fadetime>
                <texture background="true">$VAR[OSDImageNoPoster]</texture>
                <aspectratio align="left" aligny="bottom">keep</aspectratio>
                <visible>Player.HasVideo + [String.IsEmpty(Window(Home).Property(SkinHelper.Player.AnimatedPoster)) + String.IsEmpty(Player.Art(tvshow.poster)) + String.IsEmpty(Player.Art(poster)) + String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Poster))]</visible>
            </control>

			<!--clearlogo-->
			<control type="image" id="1">
				<posx>250</posx>
				<posy>-80</posy>
				<width>600</width>
				<height>70</height>
				<fadetime>200</fadetime>
				<texture background="true">$VAR[VideoPlayerClearLogo]</texture>
				<aspectratio align="left" aligny="bottom">keep</aspectratio>
				<visible>!VideoPlayer.Content(livetv) + [!String.IsEmpty(Player.Art(poster)) | !String.IsEmpty(Player.Art(tvshow.poster))]</visible>
			</control>
			
			<control type="group">
				<!-- OSDLabel1 -->
                <control type="label">
					<posx>250</posx>
					<posy>5</posy>
					<width>1100</width>
					<align>left</align>
					<font>Light40</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>[B]$VAR[OSDLabel1,, • ][/B]$VAR[OSDLabel2]</label>
					<scroll>false</scroll>
                    <animation time="300" effect="fade" delay="300">Visible</animation>
                    <animation time="100" effect="fade" delay="0">Hidden</animation>
					<visible>![[Window.IsActive(musicosd) | Window.IsActive(videoosd)] + ![Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(subtitlesearch)]]</visible>
				</control>
                <!-- media flags -->
                <control type="group">
                    <posx>250</posx>
					<posy>85</posy>
                    <include>mediaflags</include>
                    <animation time="300" effect="fade" delay="300">Visible</animation>
                    <animation time="100" effect="fade" delay="0">Hidden</animation>
                    <visible>![[Window.IsActive(musicosd) | Window.IsActive(videoosd)] + ![Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(subtitlesearch)]]</visible>
                </control>

				<control type="progress" id="1">
					<description>ProgressbarCache</description>
					<left>250</left>
					<right>40</right>
					<width>1630</width>
					<posy>150</posy>
					<height>33</height>
					<info>Player.ProgressCache</info>
					<texturebg border="5" colordiffuse="00ffffff">diffuse/panel.png</texturebg>
					<lefttexture/>
					<midtexture border="5" colordiffuse="$INFO[Skin.String(OSDProgressBarCacheColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
					<visible>Player.HasDuration</visible>
                    <visible>!String.IsEqual(Skin.String(OSDProgressBarCacheColor),None)</visible>
					
				</control>
				<control type="progress" id="23">
					<description>Progress Bar</description>
					<left>250</left>
					<right>40</right>
					<width>1630</width>
					<posy>150</posy>
					<height>33</height>
					<info>Player.Progress</info>
					<texturebg border="5" colordiffuse="$VAR[OSDProgressBarBackgroundColor]">diffuse/panel_trans.png</texturebg>
					<lefttexture/>
					<midtexture border="5" colordiffuse="$INFO[Skin.String(OSDProgressBarColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
					<visible>!VideoPlayer.HasEpg</visible>
				</control>
				<control type="progress" id="23">
					<description>Progress Bar</description>
					<left>250</left>
					<right>40</right>
					<width>1630</width>
					<posy>150</posy>
					<height>33</height>
					<visible>VideoPlayer.HasEpg</visible>
					<info>PVR.EpgEventProgress</info>
					<texturebg border="5" colordiffuse="$VAR[OSDProgressBarBackgroundColor]">diffuse/panel_trans.png</texturebg>
					<lefttexture/>
					<midtexture border="5" colordiffuse="$INFO[Skin.String(OSDProgressBarColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
					
				</control>
                <control type="slider" id="401">
                    <description>Seek Slider</description>
                    <left>250</left>
					<right>40</right>
					<width>1630</width>
					<posy>140</posy>
					<height>25</height>
                    <texturesliderbar>colors/color_transparent.png</texturesliderbar>
                    <textureslidernib border="5" colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">diffuse/seekslider.png</textureslidernib>
                    <textureslidernibfocus>colors/color_white.png</textureslidernibfocus>
                    <visible>Player.Seeking</visible>
                </control>

				<!--Process/Seekbar-->
				<control type="label">
					<!--Play Time-->
					<posx>254</posx>
					<posy>136</posy>
					<width>400</width>
					<align>left</align>
					<font>Light28</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>$VAR[PlayTime]</label>
					
				</control>
				<control type="label">
					<!--Play Time-->
					<right>42</right>
					<posy>136</posy>
					<width>400</width>
					<align>right</align>
					<font>Light28</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>$VAR[RemainingTime]</label>
					
				</control>

			</control>

			<!--Clock-->
            <control type="label">
                <right>40</right>
				<posy>0</posy>
				<width>400</width>
				<height>100</height>
				<align>right</align>
                <info>System.Time</info>
                <font>Light60</font>
                <aligny>top</aligny>
                <textcolor>$INFO[Skin.String(OSDSecondaryTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(OSDSecondaryTextShadowColor)]</shadowcolor>
            </control>

		    <control type="label">
				<right>40</right>
				<posy>60</posy>
				<width>890</width>
				<align>right</align>
				<font>Reg26</font>
				<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
				<label>$VAR[PlayerActionLabel]</label>
				
			</control>
            <control type="label">
				<right>40</right>
				<posy>95</posy>
				<width>890</width>
				<align>right</align>
				<font>Reg26</font>
				<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
				<label>$VAR[OSDLabel3]</label>
				
			</control>

		</control>
    </include>

	<include name="OSDPanelBingie">
<!-- Title Info on Idle -->
		<control type="group">
			<top>0</top>
			<left>0</left>
			<height>100%</height>
			<width>100%</width>
<!-- CLEAR LOGO on PAUSE -->
			<visible>Player.Paused + System.IdleTime(1)</visible>
			<visible>![Control.IsVisible(552233) | Window.IsActive(OSDVideoSettings) | Window.IsActive(OSDAudioSettings) | Window.IsActive(OSDSubtitleSettings) | Window.IsActive(subtitlesearch) | Window.IsActive(sliderdialog)]</visible>
			<animation delay="1000" time="300" effect="fade">Visible</animation>
			<animation delay="0" time="300" effect="fade">Hidden</animation>
			<!-- Vignette Mask -->
			<control type="image">
				<width>100%</width>
				<height>100%</height>
				<texture background="true" border="15">special://home/addons/resource.images.backgroundoverlays.basic/resources/vignette.png</texture>
				<colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
			</control>
			<control type="grouplist">
				<top>350</top>
				<left>65</left>
				<height>500</height>
				<width>70%</width>
				<orientation>vertical</orientation>
				<itemgap>2</itemgap>
				<usecontrolcoords>true</usecontrolcoords>
				<!--clearlogo-->
				<control type="image" id="1">
					<width>800</width>
					<height>310</height>
					<fadetime>200</fadetime>
					<align>left</align>
					<texture background="true">$VAR[VideoPlayerClearLogo]</texture>
					<aspectratio align="left" aligny="center">keep</aspectratio>
					<visible>!String.IsEmpty(Control.GetLabel(1))</visible>
				</control>
				<!-- Title -->
				<control type="label">
					<top>100</top>
					<width>auto</width>
					<align>left</align>
					<font>Reg60</font>
					<textcolor>white</textcolor>
					<shadowcolor>dimgray</shadowcolor>
					<label>[B]$VAR[OSDLabel4][/B]</label>
					<scroll>false</scroll>
					<wrapmultiline>true</wrapmultiline>
					<visible>!Control.IsVisible(1)</visible>
				</control>
				<!-- Sublabel -->
				<control type="label">
					<width>auto</width>
					<aligny>top</aligny>
					<align>left</align>
					<font>Reg32</font>
					<textcolor>white</textcolor>
					<label>$VAR[OSDLabel5]</label>
					<scroll>false</scroll>
				</control>
			</control>
		</control>

		<control type="group">
			<bottom>0</bottom>
			<height>290</height>
			<control type="group">
<!-- Progress Bars  White Line Bottom Center-->
				<control type="progress">
					<visible>!VideoPlayer.HasEpg</visible>
					<description>ProgressbarCache</description>
					<posx>384</posx>
					<posy>169</posy>
					<height>7</height>
					<width>1152</width>
					<texturebg border="2" colordiffuse="white">diffuse/panel.png</texturebg>
					<lefttexture/>
					<midtexture border="2" colordiffuse="$INFO[Skin.String(OSDProgressBarCacheColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
					<info>Player.ProgressCache</info>
				</control>
<!-- Progress Bars  Color Line Bottom Center-->				
				<control type="progress" id="23">
					<visible>!VideoPlayer.HasEpg</visible>
					<description>Progress Bar</description>
					<posx>384</posx>
					<posy>169</posy>
					<height>7</height>
					<width>1152</width>
					<texturebg colordiffuse="ffcccccc">diffuse/panel_trans.png</texturebg>
					<lefttexture/>
					<midtexture colordiffuse="$INFO[Skin.String(OSDProgressBarColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
					<info>Player.Progress</info>
					<reveal>true</reveal>
				</control>
				<control type="progress" id="23">
					<visible>VideoPlayer.HasEpg</visible>
					<posx>516</posx>
					<posy>169</posy>
					<height>7</height>
					<width>1020</width>
					<info>PVR.EpgEventProgress</info>
					<texturebg border="2" colordiffuse="fff0f0f0">diffuse/panel_trans.png</texturebg>
					<lefttexture/>
					<midtexture border="2" colordiffuse="$INFO[Skin.String(OSDProgressBarColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
				</control>
				<control type="slider" id="401">
					<description>Seek Slider</description>
					<include content="posx" condition="VideoPlayer.HasEpg">
						<param name="posx" value="516" />
					</include>
					<posx>384</posx>
					<posy>163</posy>
					<height>11</height>
					<include content="width" condition="VideoPlayer.HasEpg">
						<param name="width" value="1020" />
					</include>
					<width>1152</width>
					<texturesliderbar>colors/color_transparent.png</texturesliderbar>
					<textureslidernib border="2" colordiffuse="$INFO[Skin.String(OSDProgressBarColor)]">common/slider/slider_button_nofocus.png</textureslidernib>
					<textureslidernibfocus>colors/color_white.png</textureslidernibfocus>
					<visible>Player.SeekEnabled + [Player.Seeking | Skin.HasSetting(EnableTouchSupport)]</visible>
				</control>

				<!-- Play Time / Remaining Time -->
				<control type="label">
					<description>Play Time</description>
					<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
					<include content="posx" condition="VideoPlayer.HasEpg">
						<param name="posx" value="406" />
					</include>
					<posx>274</posx>
					<posy>140</posy>
					<width>160</width>
					<align>left</align>
					<font>Reg30</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>[B]$VAR[PlayTimeFormat][/B]</label>
				</control>
				<control type="label">
					<description>Time Remaining</description>
					<posx>1566</posx>
					<posy>140</posy>
					<width>160</width>
					<align>left</align>
					<font>Reg30</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>[B]$VAR[TimeRemainingFormat][/B]</label>
				</control>

				<!-- Forwarding/Rewinding Indicators -->
				<control type="image">
					<visible>Player.Forwarding | Player.Rewinding</visible>
					<texture>$VAR[ForwardRewindIndicatorImage]</texture>
					<include>PlayerImageIndicatorDefs</include>
				</control>

<!--Player Seek Time Pop Up/Action Label-->
				<control type="label" id="79591">
					<visible>false</visible>     <!-- Added to Remove JumpIndicator -->
					<posy>100</posy>
					<width>1920</width>
					<align>center</align>
					<font>Light38</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>[B]$VAR[PlayerActionLabelBingie][/B]</label>
				</control> -->
				
				<!-- Live TV Info -->
				<control type="label">
					<posy>178</posy>
					<posx>516</posx>
					<width>1020</width>
					<height>auto</height>
					<aligny>top</aligny>
					<font>Light26</font>
					<textcolor>white</textcolor>
					<shadowcolor>dimgray</shadowcolor>
					<label>[B]$VAR[PlayerTitle][UPPERCASE]$INFO[VideoPlayer.Season,S,]$INFO[VideoPlayer.Episode,E,][/UPPERCASE]$INFO[VideoPlayer.EpisodeName, ","][/B]$INFO[Player.StartTime, [B]|[/B] ,]$INFO[VideoPlayer.EndTime,-,]$INFO[VideoPlayer.NextTitle, [B]|[/B] $LOCALIZE[31065]: ,][CR]$INFO[VideoPlayer.ChannelName]</label>
					<scroll>false</scroll>
					<visible>VideoPlayer.Content(livetv)</visible>
				</control>
			</control>
		</control>
	</include>
	
    <include name="OSDPanelModernSlimMusic">
		<control type="group">
			<bottom>0</bottom>
			<height>200</height>
			<!--Panel-->
			<control type="image">
				<posx>0</posx>
				<posy>0</posy>
				<width>100%</width>
				<height>200</height>
				<texture border="5">$VAR[osdpanelimage]</texture>
				<colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
			</control>
            
            <!-- music cover with cd art -->
            <control type="group">
                <visible>!Skin.HasSetting(HideOSDDisc)</visible>
                <!-- disc art -->
                <control type="image">
                    <posx>150</posx>
                    <bottom>10</bottom>
                    <width>280</width>
                    <height>280</height>
                    <aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
                    <fadetime>300</fadetime>
                    <animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
                    <texture background="true" fallback="defaultcovers/cd_medium.png" diffuse="diffuse/cdmask_new.png">$VAR[PlayerDiscArtImage]</texture>
                </control>
                <!-- cover background + cover image-->
                <control type="group">
                    <posx>20</posx>
                    <bottom>10</bottom>
                    <width>280</width>
                    <height>280</height>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/music_cover_cd.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/music_cover_cd.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/music_cover_cd.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <fadetime>200</fadetime>
                        <bordersize>5</bordersize>
                        <texture background="true" border="5" fallback="defaultmusicsongs.png" diffuse="diffuse/music_cover_cd.png">$VAR[AudioPlayerCoverImage]</texture>
                        <aspectratio align="left" aligny="center" scalediffuse="false">keep</aspectratio>
                    </control>
                </control>
            </control>
            
            <!-- music cover without cd art -->
            <control type="group">
                <visible>Skin.HasSetting(HideOSDDisc)</visible>
                <!-- cover background + cover image-->
                <control type="group">
                    <posx>20</posx>
                    <bottom>10</bottom>
                    <width>280</width>
                    <height>280</height>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/panel.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/panel.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <aspectratio scalediffuse="true" align="center" aligny="center">stretch</aspectratio>
                        <texture border="5">diffuse/panel.png</texture>
                        <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
                    </control>
                    <control type="image">
                        <fadetime>200</fadetime>
                        <bordersize>5</bordersize>
                        <texture background="true" border="5" fallback="defaultmusicsongs.png" diffuse="diffuse/panel.png">$VAR[AudioPlayerCoverImage]</texture>
                        <aspectratio align="left" aligny="center" scalediffuse="false">keep</aspectratio>
                    </control>
                </control>
            </control>

			<control type="group">
				<!-- OSDLabel1 -->
                <control type="label">
					<posx>430</posx>
					<posy>5</posy>
					<width>1130</width>
					<align>left</align>
					<font>Light40</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>[B]$VAR[OSDLabel1,, • ][/B]$VAR[OSDLabel2]</label>
					<scroll>false</scroll>
                    <animation time="300" effect="fade" delay="300">Visible</animation>
                    <animation time="100" effect="fade" delay="0">Hidden</animation>
					<visible>!Window.IsActive(musicosd) + !Window.IsVisible(OSDAudioSettings)</visible>
				</control>
                <!-- media flags -->
                <control type="group">
                    <posx>430</posx>
					<posy>87</posy>
                    <include>mediaflagsAudio</include>
                    <animation time="300" effect="fade" delay="300">Visible</animation>
                    <animation time="100" effect="fade" delay="0">Hidden</animation>
                    <visible>!Window.IsActive(musicosd) + !Window.IsVisible(OSDAudioSettings)</visible>
                </control>

				<control type="progress" id="1">
					<description>ProgressbarCache</description>
					<left>430</left>
					<right>40</right>
					<width>1450</width>
					<posy>150</posy>
					<height>33</height>
					<info>Player.ProgressCache</info>
					<texturebg border="5" colordiffuse="00ffffff">diffuse/panel.png</texturebg>
					<lefttexture/>
					<midtexture border="5" colordiffuse="$INFO[Skin.String(OSDProgressBarCacheColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
					<visible>Player.HasDuration</visible>
                    <visible>!String.IsEqual(Skin.String(OSDProgressBarCacheColor),None)</visible>
				</control>
				<control type="progress" id="23">
					<description>Progress Bar</description>
					<left>430</left>
					<right>40</right>
					<width>1450</width>
					<posy>150</posy>
					<height>33</height>
					<info>Player.Progress</info>
					<texturebg border="5" colordiffuse="$VAR[OSDProgressBarBackgroundColor]">diffuse/panel_trans.png</texturebg>
					<lefttexture/>
					<midtexture border="5" colordiffuse="$INFO[Skin.String(OSDProgressBarColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
					<visible>!VideoPlayer.Content(livetv)</visible>
				</control>
				<control type="progress" id="23">
					<description>Progress Bar</description>
					<left>430</left>
					<right>40</right>
					<width>1450</width>
					<posy>150</posy>
					<height>33</height>
					<info>PVR.EpgEventProgress</info>
					<visible>VideoPlayer.Content(livetv)</visible>
					<texturebg border="5" colordiffuse="$VAR[OSDProgressBarBackgroundColor]">diffuse/panel_trans.png</texturebg>
					<lefttexture/>
					<midtexture border="5" colordiffuse="$INFO[Skin.String(OSDProgressBarColor)]">diffuse/panel.png</midtexture>
					<righttexture/>
					<overlaytexture/>
				</control>
                <control type="slider" id="401">
                    <description>Seek Slider</description>
                    <left>430</left>
					<right>40</right>
					<width>1450</width>
					<posy>140</posy>
					<height>25</height>
                    <texturesliderbar>colors/color_transparent.png</texturesliderbar>
                    <textureslidernib border="5" colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">diffuse/seekslider.png</textureslidernib>
                    <textureslidernibfocus>colors/color_white.png</textureslidernibfocus>
                    <visible>Player.Seeking</visible>
                </control>

				<!--Process/Seekbar-->
				<control type="label">
					<!--Play Time-->
					<posx>434</posx>
					<posy>136</posy>
					<width>400</width>
					<align>left</align>
					<font>Light28</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>$VAR[PlayTime]</label>
				</control>
				<control type="label">
					<!--Play Time-->
					<right>42</right>
					<posy>136</posy>
					<width>400</width>
					<align>right</align>
					<font>Light28</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>$VAR[RemainingTime]</label>
				</control>
			</control>
            
            <!--Stars music-->
            <control type="image">
                <visible>Window.IsActive(visualisation)</visible>
                <visible>![Window.IsActive(musicosd) + !Window.IsVisible(OSDAudioSettings)]</visible>
                <include>animation_fade_visible_hidden</include>
                <right>35</right>
				<posy>20</posy>
                <width>200</width>
                <height>50</height>
                <aspectratio aligny="top" align="left">keep</aspectratio>
                <colordiffuse>$INFO[Skin.String(OSDPrimaryTextColor)]</colordiffuse>
                <texture fallback="ratings/star_rating_simple/rating0.png">$VAR[musicrating_stars_player]</texture>
            </control>

            <control type="label">
				<right>40</right>
				<posy>70</posy>
				<width>890</width>
				<align>right</align>
				<font>Reg26</font>
				<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
				<label>$VAR[OSDLabel3]</label>
                <visible>!Window.IsActive(musicosd) + !Window.IsVisible(OSDAudioSettings)</visible>
                <include>animation_fade_visible_hidden</include>
			</control>
            
		</control>
    </include>
		
	<include name="MusicOSDClassic">
		<include>animation_fade_visible_hidden</include>
		
		<!--Player States-->
		<control type="image">
			<visible>Player.Paused</visible>
			<animation delay="300" time="400" effect="fade">Visible</animation>
			<posx>760</posx>
			<!--Center 960-->
			<posy>340</posy>
			<!--Center 540-->
			<width>400</width>
			<height>400</height>
			<texture>osd/classic/osd_pause.png</texture>
		</control>
		<control type="label">
			<posx>0</posx>
			<posy>0</posy>
			<height>100%</height>
			<width>100%</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>Light270</font>
			<textcolor>eewhite</textcolor>
			<label>FFx2</label>
			<visible>Player.Forwarding2x</visible>
		</control>
		<control type="label">
			<posx>0</posx>
			<posy>0</posy>
			<height>100%</height>
			<width>100%</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>Light270</font>
			<textcolor>eewhite</textcolor>
			<label>FFx4</label>
			<visible>Player.Forwarding4x</visible>
		</control>
		<control type="label">
			<posx>0</posx>
			<posy>0</posy>
			<height>100%</height>
			<width>100%</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>Light270</font>
			<textcolor>eewhite</textcolor>
			<label>FFx8</label>
			<visible>Player.Forwarding8x</visible>
		</control>
		<control type="label">
			<posx>0</posx>
			<posy>0</posy>
			<height>100%</height>
			<width>100%</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>Light270</font>
			<textcolor>eewhite</textcolor>
			<label>FFx16</label>
			<visible>Player.Forwarding16x</visible>
		</control>
		<control type="label">
			<posx>0</posx>
			<posy>0</posy>
			<height>100%</height>
			<width>100%</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>Light270</font>
			<textcolor>eewhite</textcolor>
			<label>FFx32</label>
			<visible>Player.Forwarding32x</visible>
		</control>
		<control type="label">
			<posx>0</posx>
			<posy>0</posy>
			<height>100%</height>
			<width>100%</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>Light270</font>
			<textcolor>eewhite</textcolor>
			<label>RWx2</label>
			<visible>Player.Rewinding2x</visible>
		</control>
		<control type="label">
			<posx>0</posx>
			<posy>0</posy>
			<height>100%</height>
			<width>100%</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>Light270</font>
			<textcolor>eewhite</textcolor>
			<label>RWx4</label>
			<visible>Player.Rewinding4x</visible>
		</control>
		<control type="label">
			<posx>0</posx>
			<posy>0</posy>
			<height>100%</height>
			<width>100%</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>Light270</font>
			<textcolor>eewhite</textcolor>
			<label>RWx8</label>
			<visible>Player.Rewinding8x</visible>
		</control>
		<control type="label">
			<posx>0</posx>
			<posy>0</posy>
			<height>100%</height>
			<width>100%</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>Light270</font>
			<textcolor>eewhite</textcolor>
			<label>RWx16</label>
			<visible>Player.Rewinding16x</visible>
		</control>
		<control type="label">
			<posx>0</posx>
			<posy>0</posy>
			<height>100%</height>
			<width>100%</width>
			<align>center</align>
			<aligny>center</aligny>
			<font>Light270</font>
			<textcolor>eewhite</textcolor>
			<label>RWx32</label>
			<visible>Player.Rewinding32x</visible>
		</control>
		
		
		<control type="group">
			<bottom>20</bottom>
			<height>376</height>
			<!--Panel-->
			<control type="image">
				<posx>210</posx>
				<width>1560</width>
				<texture>osd/classic/osd_panel.png</texture>
			</control>
			
			
			
			<!--Cover-->
			<control type="image">
				<!--No Movie-->
				<posx>290</posx>
				<posy>75</posy>
				<width>220</width>
				<height>220</height>
				<fadetime>200</fadetime>
				<texture background="true" fallback="colors/color_keyboard.png" diffuse="diffuse/music_cover.png">$VAR[AudioPlayerCoverImage]</texture>
				<aspectratio align="left" aligny="top">stretch</aspectratio>
				<visible>!String.IsEmpty(MusicPlayer.Cover)</visible>
			</control>

			<!-- OSDLabel1 -->
			<control type="label">
				<posx>550</posx>
				<posy>70</posy>
				<width>900</width>
				<align>left</align>
				<font>Light45</font>
				<textcolor>FFfffeff</textcolor>
				<label>$VAR[OSDLabel1]</label>
				<scroll>false</scroll>
			</control>
			<!-- OSDLabel2 -->
			<control type="label">
				<posx>550</posx>
				<posy>120</posy>
				<width>900</width>
				<align>left</align>
				<font>Light45</font>
				<textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
				<label>[B]$VAR[OSDLabel2][/B]</label>
				<scroll>false</scroll>
			</control>

			<!-- OSDLabel3 -->
			<control type="label">
				<posx>550</posx>
				<posy>255</posy>
				<width>900</width>
				<align>left</align>
				<font>Reg28</font>
				<textcolor>black</textcolor>
				<label>$VAR[OSDLabel3]</label>
				<visible>!Window.IsActive(musicosd)</visible>
				<animation time="300" effect="fade" delay="300">Visible</animation>
			</control>
			<!--Time-->
			<control type="label">
				<!--Left Play Time-->
				<posx>550</posx>
				<posy>180</posy>
				<width>200</width>
				<align>left</align>
				<font>Light28</font>
				<textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
				<label>$VAR[PlayTime]</label>
			</control>
			<control type="label">
				<!--Right Time Remaining-->
				<posx>1662</posx>
				<posy>180</posy>
				<width>200</width>
				<align>right</align>
				<font>Light28</font>
				<textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
				<label>- $VAR[RemainingTime]</label>
			</control>
			
			<control type="grouplist">
				<!--Clock-->
				<posx>1265</posx>
				<posy>70</posy>
				<width>400</width>
				<height>100</height>
				<align>right</align>
				<itemgap>4</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<include>animation_fade_visible_hidden</include>
				<control type="label">
					<width min="0" max="150">auto</width>
					<height>80</height>
					<info>System.Time(hh:mm)</info>
					<font>Light60</font>
					<aligny>center</aligny>
					<textcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</textcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(system.time,AM)</visible>
					<width min="0" max="150">auto</width>
					<height>80</height>
					<label>378</label>
					<font>Light60</font>
					<aligny>center</aligny>
					<textcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</textcolor>
				</control>
				<control type="label">
					<visible>String.EndsWith(system.time,PM)</visible>
					<width min="0" max="150">auto</width>
					<height>80</height>
					<label>379</label>
					<font>Light60</font>
					<aligny>center</aligny>
					<textcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</textcolor>
				</control>
			</control>
			
			<control type="grouplist" id="200">
				<!--OSD-->
				<posx>540</posx>
				<posy>256</posy>
				<width>1000</width>
				<height>60</height>
				<itemgap>0</itemgap>
				<orientation>horizontal</orientation>
				<visible>Window.IsActive(musicosd)</visible>
				<control type="button" id="201">
					<!--Skip Back-->
					<!--visible>ControlGroup(20).HasFocus()</visible-->
					<include>animation_fade_visible_hidden</include>
					<width>60</width>
					<height>60</height>
					<label>210</label>
					<font/>
					<texturefocus>osd/classic/prevtrackfo.png</texturefocus>
					<texturenofocus>osd/classic/prevtracknf.png</texturenofocus>
					<onclick>PlayerControl(Previous)</onclick>
				</control>
				<control type="button" id="202">
					<label/>
					<!--RR-->
					<include>animation_fade_visible_hidden</include>
					<width>60</width>
					<height>60</height>
					<font/>
					<texturefocus>osd/classic/rewindfo.png</texturefocus>
					<texturenofocus>osd/classic/rewindnf.png</texturenofocus>
					<onclick>PlayerControl(Rewind)</onclick>
					<visible>Player.SeekEnabled</visible>
				</control>
				<control type="togglebutton" id="203">
					<label/>
					<altlabel/>
					<!--Play Pause-->
					<include>animation_fade_visible_hidden</include>
					<width>164</width>
					<height>60</height>
					<font/>
					<texturefocus>osd/classic/pausefo.png</texturefocus>
					<texturenofocus>osd/classic/pausenf.png</texturenofocus>
					<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
					<alttexturefocus>osd/classic/playfo.png</alttexturefocus>
					<alttexturenofocus>osd/classic/playnf.png</alttexturenofocus>
					<onclick>PlayerControl(Play)</onclick>
                    <visible>Player.PauseEnabled</visible>
				</control>
				<control type="button" id="204">
					<label/>
					<!--Stop-->
					<include>animation_fade_visible_hidden</include>
					<width>60</width>
					<height>60</height>
					<font/>
					<texturefocus>osd/classic/stopfo.png</texturefocus>
					<texturenofocus>osd/classic/stopnf.png</texturenofocus>
					<onclick>PlayerControl(Stop)</onclick>
				</control>
				<control type="button" id="205">
					<label/>
					<!--FF-->
					<include>animation_fade_visible_hidden</include>
					<width>60</width>
					<height>60</height>
					<font/>
					<texturefocus>osd/classic/forwardfo.png</texturefocus>
					<texturenofocus>osd/classic/forwardnf.png</texturenofocus>
					<onclick>PlayerControl(Forward)</onclick>
                    <visible>Player.SeekEnabled</visible>
				</control>
				<control type="button" id="206">
					<!--Next-->
					<!--visible>ControlGroup(20).HasFocus()</visible-->
					<include>animation_fade_visible_hidden</include>
					<width>60</width>
					<height>60</height>
					<label>209</label>
					<font/>
					<texturefocus>osd/classic/nexttrackfo.png</texturefocus>
					<texturenofocus>osd/classic/nexttracknf.png</texturenofocus>
					<onclick>PlayerControl(Next)</onclick>
				</control>
				<control type="button" id="1">
					<description>Audio Settings</description>
					<width>200</width>
					<height>60</height>
					<texturefocus/>
					<texturenofocus/>
					<textoffsetx>0</textoffsetx>
					<font>Reg20</font>
					<textcolor>black</textcolor>
					<focusedcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</focusedcolor>
					<label>$LOCALIZE[486]$INFO[Playlist.Repeat, : ]</label>
					<onclick>PlayerControl(Repeat)</onclick>
				</control>
				<control type="button" id="2">
					<width>250</width>
					<height>60</height>
					<texturefocus/>
					<texturenofocus/>
					<textoffsetx>0</textoffsetx>
					<font>Reg20</font>
					<textcolor>black</textcolor>
					<focusedcolor>$INFO[Skin.String(GeneralHighlightTextColor)]</focusedcolor>
					<label>$LOCALIZE[191]$INFO[Playlist.Random, : ]</label>
					<onclick>PlayerControl(Random)</onclick>
				</control>
			</control>
			
			<!--Process/Seekbar-->
			<control type="progress" id="23">
				<description>Progress Bar</description>
				<posx>700</posx>
				<posy>205</posy>
				<width>800</width>
				<visible>!VideoPlayer.HasEpg</visible>
				<info>Player.Progress</info>
			</control>
			<control type="progress" id="23">
				<description>Progress Bar</description>
				<posx>700</posx>
				<posy>205</posy>
				<width>800</width>
				<info>PVR.EpgEventProgress</info>
				<visible>VideoPlayer.HasEpg</visible>
			</control>
		</control>
	</include>
    
	<include name="OSDButtonsClassic">
		<control type="grouplist" id="100">
			<animation effect="slide" start="0,400" end="0,0" tween="cubic" easing="out" delay="0" time="250" reversible="false" condition="!Player.ShowInfo + !Skin.HasSetting(LowPerformanceMode)">WindowOpen</animation>
			<animation effect="fade" start="0" end="100" delay="0" time="300" reversible="false" condition="Player.ShowInfo">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" delay="0" time="300" reversible="false" condition="Player.ShowInfo">WindowClose</animation>
			<!--Settings-->
			<posx>1495</posx>
			<bottom>80</bottom>
			<width>1000</width>
			<height>60</height>
			<itemgap>0</itemgap>
			<orientation>horizontal</orientation>
            <visible>![Window.IsActive(OSDVideoSettings) | Window.IsActive(OSDAudioSettings) | Window.IsActive(subtitlesearch) | Window.IsActive(sliderdialog)]</visible>
			<control type="button" id="101">
				<!--Audio Settings-->
				<width>60</width>
				<height>60</height>
				<label>13396</label>
				<font/>
				<texturefocus>osd/classic/audiofo.png</texturefocus>
				<texturenofocus>osd/classic/audionf.png</texturenofocus>
				<onclick>ActivateWindow(124)</onclick>
			</control>
			<control type="button" id="102">
				<!--Video Settings-->
				<description>Video Settings</description>
				<width>60</width>
				<height>60</height>
				<label>13395</label>
				<align>left</align>
				<font/>
				<texturefocus>osd/classic/videofo.png</texturefocus>
				<texturenofocus>osd/classic/videonf.png</texturenofocus>
				<onclick>ActivateWindow(123)</onclick>
			</control>
			<control type="button" id="104">
				<!--Subtitles-->
				<description>Subtitles</description>
				<width>60</width>
				<height>60</height>
				<label>287</label>
				<font/>
				<texturefocus>osd/classic/subtitlesfo.png</texturefocus>
				<texturenofocus>osd/classic/subtitlesnf.png</texturenofocus>
				<onclick>ActivateWindow(SubtitleSearch)</onclick>
				<visible>!VideoPlayer.Content(livetv)</visible>
			</control>
			<control type="button" id="105">
				<!--teletext-->
				<width>60</width>
				<height>60</height>
				<label>287</label>
				<font/>
				<texturefocus>osd/classic/teletextfo.png</texturefocus>
				<texturenofocus>osd/classic/teletextnf.png</texturenofocus>
				<onclick>ActivateWindow(Teletext)</onclick>
				<visible>VideoPlayer.Content(livetv) + VideoPlayer.HasTeletext</visible>
			</control>
		</control>
		<control type="grouplist" id="200">
			<!--OSD-->
			<posx>540</posx>
			<bottom>80</bottom>
			<width>1000</width>
			<height>60</height>
			<itemgap>0</itemgap>
			<onright>101</onright>
            <visible>![Window.IsActive(OSDVideoSettings) | Window.IsActive(OSDAudioSettings) | Window.IsActive(subtitlesearch) | Window.IsActive(sliderdialog)]</visible>
			<orientation>horizontal</orientation>
			<control type="button" id="201">
				<!--Skip Back-->
				<visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<label>210</label>
				<font/>
				<texturefocus>osd/classic/prevtrackfo.png</texturefocus>
				<texturenofocus>osd/classic/prevtracknf.png</texturenofocus>
				<onclick>PlayerControl(Previous)</onclick>
			</control>
			<control type="button" id="202">
				<label/>
				<!--RR-->
				<visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<font/>
				<texturefocus>osd/classic/rewindfo.png</texturefocus>
				<texturenofocus>osd/classic/rewindnf.png</texturenofocus>
				<onclick>PlayerControl(Rewind)</onclick>
                <visible>Player.SeekEnabled</visible>
			</control>
			<control type="togglebutton" id="203">
				<label/>
				<altlabel/>
				<!--Play Pause-->
				<visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
				<include>animation_fade_visible_hidden</include>
				<width>164</width>
				<height>60</height>
				<font/>
				<texturefocus>osd/classic/pausefo.png</texturefocus>
				<texturenofocus>osd/classic/pausenf.png</texturenofocus>
				<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
				<alttexturefocus>osd/classic/playfo.png</alttexturefocus>
				<alttexturenofocus>osd/classic/playnf.png</alttexturenofocus>
				<onclick>PlayerControl(Play)</onclick>
                <visible>Player.PauseEnabled</visible>
			</control>
			<control type="button" id="204">
				<label/>
				<!--Stop-->
				<visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<font/>
				<texturefocus>osd/classic/stopfo.png</texturefocus>
				<texturenofocus>osd/classic/stopnf.png</texturenofocus>
				<onclick>PlayerControl(Stop)</onclick>
			</control>
			<control type="button" id="205">
				<label/>
				<!--FF-->
				<visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<font/>
				<texturefocus>osd/classic/forwardfo.png</texturefocus>
				<texturenofocus>osd/classic/forwardnf.png</texturenofocus>
				<onclick>PlayerControl(Forward)</onclick>
                <visible>Player.SeekEnabled</visible>
			</control>
			<control type="button" id="206">
				<!--Next-->
				<visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<label>209</label>
				<font/>
				<texturefocus>osd/classic/nexttrackfo.png</texturefocus>
				<texturenofocus>osd/classic/nexttracknf.png</texturenofocus>
				<onclick>PlayerControl(Next)</onclick>
			</control>
			<control type="button" id="214">
				<!--bookmarks-->
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<label/>
				<font/>
				<texturefocus>osd/classic/channelfo.png</texturefocus>
				<texturenofocus>osd/classic/channelnf.png</texturenofocus>
				<onclick>ActivateWindow(VideoBookmarks)</onclick>
				<visible>Player.HasVideo</visible>
                <visible>!VideoPlayer.Content(livetv)</visible>
			</control>
            <control type="togglebutton" id="10">
                <!-- record -->
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<label/>
				<font/>
				<texturefocus>osd/classic/recordofffo.png</texturefocus>
				<texturenofocus>osd/classic/recordoffnf.png</texturenofocus>
				<alttexturefocus>osd/classic/recordonfo.png</alttexturefocus>
				<alttexturenofocus>osd/classic/recordonnf.png</alttexturenofocus>
				<usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
				<onclick>PVR.ToggleRecordPlayingChannel</onclick>
				<visible>PVR.CanRecordPlayingChannel</visible>
                <visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
			</control>
            <control type="button" id="806">
				<!--pvr osd channels-->
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<label/>
				<font/>
				<texturefocus>osd/classic/channelfo.png</texturefocus>
				<texturenofocus>osd/classic/channelnf.png</texturenofocus>
                <visible>VideoPlayer.Content(livetv)</visible>
                <onclick>ActivateWindow(PVROSDChannels)</onclick>
			</control>
            <control type="button" id="807">
				<!--pvr osd guide-->
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<label/>
				<font/>
				<texturefocus>osd/classic/epgfo.png</texturefocus>
				<texturenofocus>osd/classic/epgnf.png</texturenofocus>
                <visible>VideoPlayer.Content(livetv)</visible>
                <onclick>ActivateWindow(pvrchannelguide)</onclick>
			</control>
			<control type="button" id="215">
				<!--disc menu-->
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<label/>
				<font/>
				<texturefocus>osd/classic/infofo.png</texturefocus>
				<texturenofocus>osd/classic/infonf.png</texturenofocus>
				<onclick>PlayerControl(ShowVideoMenu)</onclick>
				<visible>VideoPlayer.HasMenu</visible>
			</control>
            <control type="button" id="705">
				<!--stereoscopic-->
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<label/>
				<font/>
				<texturefocus>osd/classic/stereoscopicfo.png</texturefocus>
				<texturenofocus>osd/classic/stereoscopicnf.png</texturenofocus>
				<onclick>StereoMode</onclick>
				<visible>VideoPlayer.IsStereoscopic</visible>
			</control>
            <control type="button" id="808">
				<!--infopanel-->
				<include>animation_fade_visible_hidden</include>
				<width>60</width>
				<height>60</height>
				<label/>
				<font/>
				<texturefocus>osd/classic/infofo.png</texturefocus>
				<texturenofocus>osd/classic/infonf.png</texturenofocus>
				<visible>Player.HasVideo</visible>
				<onclick>Skin.ToggleSetting(EnableOSDInfo)</onclick>
			</control>
		</control>
		<control type="slider" id="401">
            <description>Seekbar</description>
            <posx>700</posx>
            <bottom>166</bottom>
            <width>800</width>
            <visible>Window.IsActive(videoosd)</visible>
            <visible>![Window.IsActive(OSDVideoSettings) | Window.IsActive(OSDAudioSettings) | Window.IsActive(subtitlesearch) | Window.IsActive(sliderdialog)]</visible>
			<visible>Player.HasDuration</visible>
			<action>seek</action>
            <texturefocus/>
            <texturenofocus/>
            <texturesliderbar border="5" colordiffuse="$INFO[Skin.String(OSDPanelColor)]">diffuse/panel_trans.png</texturesliderbar>
            <textureslidernib border="5" colordiffuse="$INFO[Skin.String(ButtonColor)]">diffuse/panel.png</textureslidernib>
            <textureslidernibfocus border="5" colordiffuse="$INFO[Skin.String(ButtonFocusColor)]">diffuse/panel.png</textureslidernibfocus>
        </control>
	</include>
	
	<include name="OSDButtonsModern">
        <!-- close dialog -->
        <control type="group">
            <include>animation_fade_visible_hidden</include>
            <right>65</right>
            <bottom>210</bottom>
            <width>60</width>
            <height>60</height>
            <include condition="Skin.HasSetting(EnableTouchSupport)">close_button</include>
            <visible>Skin.HasSetting(EnableTouchSupport)</visible>
            <visible>!Window.IsActive(subtitlesearch)</visible>
            <visible>!Window.IsActive(sliderdialog)</visible>
            <animation type="Conditional" condition="Player.Paused | Player.Forwarding | Player.Rewinding">
                <effect type="slide" start="0,0" end="-160,0" time="200" tween="cubic" easing="inout" delay="0" />
            </animation>
            <animation effect="slide" end="22" time="0" condition="Skin.HasSetting(UseSlimOSDPanel)">Conditional</animation>
        </control>
        
        <!--SeekBar -->
        <include condition="Skin.HasSetting(UseSlimOSDPanel) + Player.HasVideo">SeekBar_Slim</include>
        <include condition="[!Skin.HasSetting(UseSlimOSDPanel) + !Skin.HasSetting(UseBingieOSD)] + Player.HasVideo">SeekBar_Normal</include>
		<include condition="[!Skin.HasSetting(UseSlimOSDPanel) + Skin.HasSetting(UseBingieOSD)] + Player.HasVideo">SeekBar_Bingie</include>

		<!-- OSD buttons -->
		<include condition="Player.HasVideo + Skin.HasSetting(UseBingieOSD)">OSDButtons_Bingie_Layout_Factory</include>
		<include condition="![Player.HasVideo + Skin.HasSetting(UseBingieOSD)]">OSDButtons_Default_Layout_Factory</include>
			
	</include>

	<include name="OSDButtons_Bingie_Layout_Factory">
		<include content="OSDButtons_Bingie_Layout" condition="String.IsEqual(Skin.String(osd_buttonstyle),slim)">
			<param name="topsize" value="80" />
			<param name="bottomsize" value="65" />
			<param name="gap" value="6" />
			<param name="iconspath" value="osd/slim/" />
			<param name="toposdposleft" value="65" />
			<param name="bottomosdposleft" value="165" />
			<param name="posbottom" value="90" />
			<param name="postop" value="85" />
		</include>

		<include content="OSDButtons_Bingie_Layout" condition="String.IsEqual(Skin.String(osd_buttonstyle),rounded)">
			<param name="topsize" value="85" />
			<param name="bottomsize" value="55" />
			<param name="gap" value="6" />
			<param name="iconspath" value="osd/rounded/" />
			<param name="toposdposleft" value="65" />
			<param name="bottomosdposleft" value="165" />
			<param name="posbottom" value="90" />
			<param name="postop" value="85" />
		</include>
	</include>

	<include name="OSDButtons_Default_Layout_Factory">
		<include content="OSDButtons_Layout" condition="String.IsEqual(Skin.String(osd_buttonstyle),rounded) + !Skin.HasSetting(EnableLargeOSDButtons)">
			<param name="size" value="75" />
			<param name="gap" value="7" />
			<param name="iconspath" value="osd/rounded/" />
			<param name="posleft" value="390" />
			<param name="posbottom" value="10" />
		</include>
		<include content="OSDButtons_Layout" condition="String.IsEqual(Skin.String(osd_buttonstyle),rounded) + Skin.HasSetting(EnableLargeOSDButtons)">
			<param name="size" value="100" />
			<param name="gap" value="7" />
			<param name="iconspath" value="osd/rounded/" />
			<param name="posleft" value="380" />
			<param name="posbottom" value="0" />
		</include>
		<include content="OSDButtons_Layout" condition="String.IsEqual(Skin.String(osd_buttonstyle),slim) + !Skin.HasSetting(EnableLargeOSDButtons)">
			<param name="size" value="90" />
			<param name="gap" value="7" />
			<param name="iconspath" value="osd/slim/" />
			<param name="posleft" value="380" />
			<param name="posbottom" value="10" />
		</include>
		<include content="OSDButtons_Layout" condition="String.IsEqual(Skin.String(osd_buttonstyle),slim) + Skin.HasSetting(EnableLargeOSDButtons)">
			<param name="size" value="140" />
			<param name="gap" value="-30" />
			<param name="iconspath" value="osd/slim/" />
			<param name="posleft" value="370" />
			<param name="posbottom" value="-20" />
		</include>
	</include>
	
    <include name="OSDButtons_Layout">
		<control type="grouplist" id="200">
			<animation effect="slide" start="0,400" end="0,0" tween="cubic" easing="out" delay="0" time="250" reversible="false" condition="!Player.ShowInfo + !Skin.HasSetting(LowPerformanceMode)">WindowOpen</animation>
			<animation effect="fade" start="0" end="100" delay="0" time="300" reversible="false" condition="Player.ShowInfo">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" delay="0" time="300" reversible="false" condition="Player.ShowInfo">WindowClose</animation>
			<posx>$PARAM[posleft]</posx>
			<bottom>$PARAM[posbottom]</bottom>
			<width>1540</width>
			<height>$PARAM[size]</height>
			<itemgap>$PARAM[gap]</itemgap>
			<onleft>200</onleft>
			<onright>200</onright>
			<orientation>horizontal</orientation>
			<animation effect="slide" end="-150,-70" time="0" condition="Player.HasVideo + Skin.HasSetting(UseSlimOSDPanel)">Conditional</animation>
            <animation effect="slide" end="30,-70" time="0" condition="Player.HasAudio + Skin.HasSetting(UseSlimOSDPanel)">Conditional</animation>
			<animation effect="slide" end="50" time="0" condition="Player.HasAudio + !Skin.HasSetting(UseSlimOSDPanel) + ![!Skin.HasSetting(UseSlimOSDPanel) + Skin.HasSetting(HideOSDDisc)]">Conditional</animation>
			<visible>![Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(subtitlesearch) | Window.IsVisible(selectdialog)]</visible>
			<control type="togglebutton" id="201">
				<description>Skip Back or previous channel</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>210</label>
                <altlabel>210</altlabel>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]prevtrack.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]prevtrack.png</texturenofocus>
				<usealttexture>VideoPlayer.Content(livetv)</usealttexture>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]channelup.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]channelup.png</alttexturenofocus>
				<onclick condition="!VideoPlayer.Content(livetv)">PlayerControl(Previous)</onclick>
				<onclick condition="VideoPlayer.Content(livetv)">ChannelUp</onclick>
                <visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
			</control>
			<control type="button" id="202">
				<label/>
				<description>RR</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<font/>
                <label>209</label>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]rewind.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]rewind.png</texturenofocus>
				<onclick>PlayerControl(Rewind)</onclick>
                <visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
                <visible>Player.SeekEnabled</visible>
			</control>
			<control type="togglebutton" id="203">
				<altlabel>208</altlabel>
				<description>Play Pause</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<font/>
                <label>208</label>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]pause.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]pause.png</texturenofocus>
				<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]play.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]play.png</alttexturenofocus>
				<onclick>PlayerControl(Play)</onclick>
                <visible>Player.PauseEnabled</visible>
                <visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
			</control>
			<control type="button" id="204">
				<description>Stop</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<font/>
                <label>36036</label>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]stop.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]stop.png</texturenofocus>
				<onclick>PlayerControl(Stop)</onclick>
                <visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
			</control>
			<control type="button" id="205">
				<description>FF</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<font/>
                <label>210</label>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]forward.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]forward.png</texturenofocus>
				<onclick>PlayerControl(Forward)</onclick>
                <visible>Player.SeekEnabled</visible>
                <visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
			</control>
			<control type="togglebutton" id="206">
				<description>Next</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>209</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]nexttrack.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]nexttrack.png</texturenofocus>
				<usealttexture>VideoPlayer.Content(livetv)</usealttexture>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]channeldown.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]channeldown.png</alttexturenofocus>
				<onclick condition="!VideoPlayer.Content(livetv)">PlayerControl(Next)</onclick>
				<onclick condition="VideoPlayer.Content(livetv)">ChannelDown</onclick>
                <visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
			</control>
			<control type="button" id="207">
			  <width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
			  <label>$LOCALIZE[486]$INFO[Playlist.Repeat, : ]</label>
			  <font/>
			  <texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]repeat.png</texturefocus>
			  <texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]repeat.png</texturenofocus>
			  <onclick>PlayerControl(Repeat)</onclick>
			  <visible>!Playlist.IsRepeatOne + !Playlist.IsRepeat</visible>
              <visible>!VideoPlayer.Content(livetv)</visible>
			</control>
			<control type="button" id="208">
			  <width>$PARAM[size]</width>
			  <height>$PARAM[size]</height>
			  <texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]repeatone.png</texturefocus>
			  <texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]repeatone.png</texturenofocus>
			  <visible>Playlist.IsRepeatOne</visible>
              <visible>!VideoPlayer.Content(livetv)</visible>
			  <onclick>PlayerControl(Repeat)</onclick>
			</control>
			<control type="button" id="210">
			  <width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
			  <texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]repeatall.png</texturefocus>
			  <texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]repeatall.png</texturenofocus>
			  <visible>Playlist.IsRepeat</visible>
              <visible>!VideoPlayer.Content(livetv)</visible>
			  <onclick>PlayerControl(Repeat)</onclick>
			</control>
			<control type="togglebutton" id="212">
			  <width>$PARAM[size]</width>
              <height>$PARAM[size]</height>
			  <label>$LOCALIZE[590]$INFO[Playlist.Random, : ]</label>
			  <altlabel>$LOCALIZE[590] : $LOCALIZE[16041]</altlabel>
			  <font/>
			  <texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]randomoff.png</texturefocus>
			  <texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]randomoff.png</texturenofocus>
			  <usealttexture>Playlist.IsRandom</usealttexture>
			  <alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]Randomon.png</alttexturefocus>
			  <alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]Randomon.png</alttexturenofocus>
			  <onclick>PlayerControl(Random)</onclick>
			  <visible>Player.HasAudio</visible>
			</control>
			<control type="togglebutton" id="10">
				<description>Record</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>209</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]recordoff.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]recordoff.png</texturenofocus>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]recordon.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]recordon.png</alttexturenofocus>
				<usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
				<onclick>PVR.ToggleRecordPlayingChannel</onclick>
				<visible>PVR.CanRecordPlayingChannel</visible>
                <visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>
			</control>
			<control type="button" id="214">
				<description>bookmarks</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>209</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]bookmarks.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]bookmarks.png</texturenofocus>
				<onclick>ActivateWindow(VideoBookmarks)</onclick>
				<visible>Player.HasVideo</visible>
				<visible>!VideoPlayer.Content(livetv)</visible>
			</control>
			<control type="button" id="215">
				<description>disc menu</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>209</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]dvd.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]dvd.png</texturenofocus>
				<onclick>PlayerControl(ShowVideoMenu)</onclick>
				<visible>VideoPlayer.HasMenu</visible>
			</control>
			<control type="button" id="705">
				<description>stereoscopic</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>209</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]stereoscopic.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]stereoscopic.png</texturenofocus>
				<onclick>StereoMode</onclick>
				<visible>VideoPlayer.IsStereoscopic</visible>
			</control>
			<control type="button" id="101">
				<description>Audio Settings</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>13396</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]audio.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]audio.png</texturenofocus>
				<onclick>ActivateWindow(124)</onclick>
			</control>
			<control type="button" id="102">
				<description>Video Settings</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>13395</label>
				<align>left</align>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]video.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]video.png</texturenofocus>
				<onclick>ActivateWindow(123)</onclick>
				<visible>Player.HasVideo</visible>
			</control>
			<control type="button" id="104">
				<description>Subtitles</description>
			    <width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>287</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]subtitles.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]subtitles.png</texturenofocus>
				<onclick>ActivateWindow(osdsubtitlesettings)</onclick>
				<visible>!VideoPlayer.Content(livetv)</visible>
				<visible>Player.HasVideo</visible>
			</control>
			<control type="button" id="105">
				<description>teletext</description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>287</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]teletext.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]teletext.png</texturenofocus>
				<onclick>ActivateWindow(Teletext)</onclick>
				<visible>VideoPlayer.Content(livetv) + VideoPlayer.HasTeletext</visible>
				<visible>Player.HasVideo</visible>
			</control>
			<control type="togglebutton" id="701">
				<description> lyrics </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>31128</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]lyrics.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]lyrics.png</texturenofocus>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]lyrics.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]lyrics.png</alttexturenofocus>
				<onclick>Close</onclick>
				<onclick>RunScript($INFO[Skin.String(LyricScript_iconspath)])</onclick>
				<altclick>Skin.SetAddon(LyricScript_iconspath,xbmc.python.lyrics)</altclick>
				<altclick>Close</altclick>
				<altclick>RunScript($INFO[Skin.String(LyricScript_iconspath)])</altclick>
				<usealttexture>!Skin.String(LyricScript_iconspath)</usealttexture>
				<visible>Player.HasAudio</visible>
				<visible>System.HasAddon(script.cu.lrclyrics)</visible>
			</control>
			<control type="button" id="500">
				<description> vizualisation addon </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>12006</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]viz.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]viz.png</texturenofocus>
				<visible>Player.HasAudio</visible>
			</control>
            <control type="button" id="21417">
				<description> vizualisation settings </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>$LOCALIZE[250] $LOCALIZE[21417]</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]settings.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]settings.png</texturenofocus>
				<visible>Player.HasAudio + Visualisation.Enabled </visible>
                <onclick>Addon.Default.OpenSettings(xbmc.player.musicviz)</onclick>
			</control>
            <control type="button" id="703">
				<description> vizualisation presets </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>$LOCALIZE[250] $LOCALIZE[21417]</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]epg.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]epg.png</texturenofocus>
				<visible>Player.HasAudio + Visualisation.Enabled + [String.IsEqual(Visualisation.Name,milkdrop) | String.IsEqual(Visualisation.Name,vortex) | Visualisation.HasPresets ]</visible>
                <onclick>ActivateWindow(122)</onclick>
			</control>
			<control type="button" id="806">
				<description> pvr </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>12006</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]channellist.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]channellist.png</texturenofocus>
				<visible>VideoPlayer.Content(livetv)</visible>
				<onclick>ActivateWindow(PVROSDChannels)</onclick>
			</control>
			<control type="button" id="807">
				<description> pvr </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>12006</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]epg.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]epg.png</texturenofocus>
				<visible>VideoPlayer.Content(livetv)</visible>
                <onclick>ActivateWindow(pvrchannelguide)</onclick>
			</control>
            <control type="button" id="811">
				<description> playlist </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>12006</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]teletext.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]teletext.png</texturenofocus>
				<visible>!String.IsEqual(Playlist.Length(music),0) + Player.HasAudio</visible>
                <onclick>SetProperty(playlistdialog,show,Home)</onclick>
                <onclick>Dialog.Close(MusicOSD)</onclick>
                <onclick>ActivateWindow(musicplaylist)</onclick>
			</control>
			<control type="button" id="808">
				<description> infopanel </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>31133</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]info.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]info.png</texturenofocus>
				<visible>Player.HasVideo</visible>
				<onclick>Skin.ToggleSetting(EnableOSDInfo)</onclick>
			</control>
            <control type="button" id="809">
				<description> touch - volume up </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>volup</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]volumeup.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]volumeup.png</texturenofocus>
				<visible>Skin.HasSetting(EnableTouchSupport)</visible>
				<onclick>VolumeUp</onclick>
			</control>
            <control type="button" id="810">
				<description> touch - volume down </description>
				<width>$PARAM[size]</width>
				<height>$PARAM[size]</height>
				<label>voldown</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]volumedown.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]volumedown.png</texturenofocus>
				<visible>Skin.HasSetting(EnableTouchSupport)</visible>
				<onclick>VolumeDown</onclick>
			</control>
		</control>

	</include>
	
	<include name="SeekBar_Slim">
		<control type="slider" id="87">
			<description>Seekbar</description>
			<left>250</left>
			<right>40</right>
			<width>1630</width>
			<bottom>34</bottom>
			<height>17</height>
			<visible>Window.IsActive(videoosd)</visible>
			<visible>Player.HasDuration</visible>
			<action>seek</action>
			<texturesliderbar>colors/color_transparent.png</texturesliderbar>
			<textureslidernib>colors/color_transparent.png</textureslidernib>
			<textureslidernibfocus border="5" colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">diffuse/panel.png</textureslidernibfocus>
			<visible>!VideoPlayer.Content(LiveTV)</visible>
		</control>
		<!--Process/Seekbar-->
		<control type="label">
			<!--Play Time-->
			<posx>254</posx>
			<bottom>9</bottom>
			<height>50</height>
			<width>400</width>
			<align>left</align>
			<font>Light28</font>
			<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
			<label>$VAR[PlayTime]</label>
			
		</control>
		<control type="label">
			<!--Play Time-->
			<right>42</right>
			<bottom>9</bottom>
			<height>50</height>
			<width>400</width>
			<align>right</align>
			<font>Light28</font>
			<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
			<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
			<label>$VAR[RemainingTime]</label>
			
		</control>
	</include>
	
	<include name="SeekBar_Normal">
		<control type="slider">
			<description>Seekbar</description>
			<posx>540</posx>
			<bottom>120</bottom>
			<height>10</height>
			<width>700</width>
			<visible>Player.HasDuration</visible>
			<action>seek</action>
			<texturesliderbar>colors/color_transparent.png</texturesliderbar>
			<textureslidernib>colors/color_transparent.png</textureslidernib>
			<textureslidernibfocus border="5" colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">diffuse/panel.png</textureslidernibfocus>
			<visible>!VideoPlayer.Content(LiveTV)</visible>
            <animation effect="slide" end="50" time="0" condition="Player.HasAudio + !Skin.HasSetting(HideOSDDisc)">Conditional</animation>
            <visible>![Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(subtitlesearch) | Window.IsVisible(selectdialog)]</visible>     		
        </control>
		<control type="image">
			<description>Progress Bar Border</description>
			<posx>540</posx>
			<bottom>110</bottom>
			<height>20</height>
			<width>700</width>
			<visible>Player.HasDuration</visible>
			<visible> !VideoPlayer.Content(LiveTV)</visible>
			<texture border="5" colordiffuse="$INFO[Skin.String(OSDProgressBarBorderColor)]">diffuse/thinborder.png</texture>
            <animation effect="slide" end="50" time="0" condition="Player.HasAudio + !Skin.HasSetting(HideOSDDisc)">Conditional</animation>
            <visible>![Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(subtitlesearch) | Window.IsVisible(selectdialog)]</visible>
		</control>
	</include>

	<include name="SeekBar_Bingie">
		<control type="slider">
			<description>Seekbar</description>
			<posx>384</posx>
			<posy>165</posy>
			<height>7</height>
			<width>1152</width>
			<visible>Player.HasDuration</visible>
			<action>seek</action>
			<texturesliderbar>colors/color_transparent.png</texturesliderbar>
			<textureslidernib>colors/color_transparent.png</textureslidernib>
			<textureslidernibfocus border="5" colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">diffuse/panel.png</textureslidernibfocus>
			<visible>!VideoPlayer.Content(LiveTV)</visible>
			<animation effect="slide" end="50" time="0" condition="Player.HasAudio + !Skin.HasSetting(HideOSDDisc)">Conditional</animation>
			<visible>![Window.IsVisible(OSDVideoSettings) | Window.IsVisible(OSDAudioSettings) | Window.IsVisible(subtitlesearch) | Window.IsVisible(selectdialog)]</visible>
		</control>
	</include>
    
    <include name="Small_OSD_Seek_Panel">
        <control type="group">
            <!-- small panel if OSD disabled on seek -->
			<left>705r</left>
			<top>20</top>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>490</width>
				<height>150</height>
				<texture border="5">diffuse/panel.png</texture>
				<colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
			</control>
			<control type="image">
				<left>10</left>
				<top>10</top>
				<width>470</width>
				<height>130</height>
				<texture border="5">diffuse/panel.png</texture>
				<colordiffuse>$INFO[Skin.String(GeneralPanelsColor)]</colordiffuse>
			</control>
			<control type="label">
				<posx>20</posx>
				<posy>0</posy>
				<width>350</width>
				<align>left</align>
				<font>Reg24</font>
				<textcolor>$INFO[Skin.String(ViewDetailsHighlightTextColor)]</textcolor>
				<shadowcolor>$INFO[Skin.String(ViewDetailsHighlightTextShadowColor)]</shadowcolor>
				<label>$VAR[PlayerActionLabelSmall]</label>
			</control>
			<!-- total runtime -->
			<control type="label">
				<posx>20</posx>
				<posy>40</posy>
				<width>800</width>
				<align>left</align>
				<font>Reg20</font>
				<textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
				<label>$VAR[TotalDuration,[B]$LOCALIZE[180]: [/B]]</label>
			</control>
			<control type="image">
				<visible>Player.Paused</visible>
				<left>390</left>
				<top>10</top>
				<width>80</width>
				<height>80</height>
				<texture>osd/osd_pause.png</texture>
			</control>
			<control type="image">
				<visible>Player.Forwarding</visible>
				<left>400</left>
				<top>25</top>
				<width>60</width>
				<height>60</height>
				<texture>osd/osd_ff.png</texture>
			</control>
			<control type="image">
				<visible>Player.Rewinding</visible>
				<left>395</left>
				<top>25</top>
				<width>60</width>
				<height>60</height>
				<texture flipx="true">osd/osd_ff.png</texture>
			</control>
			<control type="image">
				<visible>!Player.Rewinding + !Player.Forwarding + !Player.Paused</visible>
				<left>380</left>
				<top>10</top>
				<width>80</width>
				<height>80</height>
				<texture>defaultaddoninfolibrary.png</texture>
			</control>
			<control type="label">
				<!--elapsed Time-->
				<left>20</left>
				<top>80</top>
				<width>150</width>
				<align>left</align>
				<font>Reg20</font>
				<textcolor>white</textcolor>
				<label>$VAR[PlayTime]</label>
				<visible>Player.HasDuration</visible>
			</control>
			<control type="label">
				<!--remaining Time-->
				<left>260</left>
				<top>80</top>
				<width>200</width>
				<align>right</align>
				<font>Reg20</font>
				<textcolor>white</textcolor>
				<label>$VAR[RemainingTime,- ]</label>
				<visible>Player.HasDuration</visible>
			</control>
			<control type="progress">
				<description>ProgressbarCache</description>
				<left>120</left>
				<top>104</top>
				<width>230</width>
				<height>15</height>
				<info>Player.ProgressCache</info>
			</control>
			<control type="progress" id="23">
				<description>Progressbar</description>
				<left>120</left>
				<top>104</top>
				<width>230</width>
				<height>15</height>
				<info>Player.Progress</info>
				<visible>!VideoPlayer.HasEpg</visible>
			</control>
			<control type="progress" id="23">
				<description>Progress Bar</description>
				<left>120</left>
				<top>104</top>
				<width>230</width>
				<height>15</height>
				<info>PVR.EpgEventProgress</info>
				<visible>VideoPlayer.HasEpg</visible>
			</control>
                 <control type="slider" id="401">
				<description>Seek Slider</description>
				<left>120</left>
				<top>95</top>
				<width>230</width>
				<height>18</height>
				<texturesliderbar>colors/color_transparent.png</texturesliderbar>
                <textureslidernib border="5" colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">diffuse/seekslider.png</textureslidernib>
                <textureslidernibfocus>colors/color_white.png</textureslidernibfocus>
				<visible>Player.Seeking</visible>
			</control>
		</control>
    </include>
	
    <include name="WeatherInfoOSD">
        <!-- weather info displayed in video OSD and video info -->
        <control type="group">
            <posx>50</posx>
            <bottom>292</bottom>
            <width>128</width>
            <height>128</height>
            <visible>!String.IsEmpty(Window(Weather).Property(Current.FanartCode)) + Skin.String(WeatherIconPack.path)</visible>
            <include>HideOsdConditions</include>
			
            <!--Current Weather-->
            <control type="multiimage">
                <!--Current Weather Icon-->
                <imagepath>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$INFO[Skin.String(WeatherIconPack.ext)]</imagepath>
                <width>128</width>
                <height>128</height>
                <aspectratio align="left" aligny="bottom">keep</aspectratio>
            </control>
			<!-- active weather alert icon overlay -->
            <control type="image">
                <texture>special://skin/extras/media/weather-alert.png</texture>
				<width>128</width>
                <height>128</height>
                <aspectratio align="left" aligny="bottom">keep</aspectratio>
				<visible>!String.IsEmpty(Window(Weather).Property(Alerts)) + !String.IsEmpty(Window(Weather).Property(Alerts.IsFetched)) + Skin.HasSetting(EnableWeatherAlertOverlay)</visible>
            </control>
            <control type="label">
                <!--Current Temp-->
                <width>300</width>
                <height>128</height>
                <posx>132</posx>
                <posy>0</posy>
                <font>Bold30</font>
                 <!-- colors should be hardcoded because display on video -->
                <textcolor>white</textcolor>
                <shadowcolor>black</shadowcolor>
                <align>left</align>
                <label>$INFO[Window(Weather).Property(Current.Temperature)] $INFO[System.TemperatureUnits]</label>
            </control>
			<!--Current Conditions-->
			<control type="label">
                <width>300</width>
                <height>128</height>
                <posx>132</posx>
                <posy>32</posy>
                <font>Reg24</font>
                <!-- colors should be hardcoded because display on video -->
                <textcolor>white</textcolor>
                <shadowcolor>black</shadowcolor>
                <align>left</align>
                <label>$INFO[Window(Weather).Property(Current.Condition)]</label>
                <visible>Weather.IsFetched</visible>
            </control>
        </control>
    </include>

	<include name="WeatherInfoOSDSlim">
        <!-- weather info displayed in video OSD and video info changes made for Slim OSD option -->
        <control type="group">
            <right>20</right>
            <bottom>200</bottom>
            <width>550</width>
            <height>128</height>
            <visible>!String.IsEmpty(Window(Weather).Property(Current.FanartCode)) + Skin.String(WeatherIconPack.path)</visible>
			<animation end="0,60" time="0" effect="slide" condition="Skin.HasSetting(UseBingieOSD)">Conditional</animation>
            <include>HideOsdConditions</include>

            <!--Current Weather-->
            <control type="multiimage">
                <!--Current Weather Icon-->
                <imagepath>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$INFO[Skin.String(WeatherIconPack.ext)]</imagepath>
				<right>0</right>
                <width>128</width>
                <height>128</height>
                <top>10</top>
                <bottom>0</bottom>
                <aspectratio align="right" aligny="bottom">keep</aspectratio>
            </control>
			<!-- active weather alert icon overlay -->
            <control type="image">
                <texture>special://skin/extras/media/weather-alert.png</texture>
				<right>0</right>
                <width>128</width>
                <height>128</height>
                <top>10</top>
                <bottom>0</bottom>
                <aspectratio align="right" aligny="bottom">keep</aspectratio>
				<visible>!String.IsEmpty(Window(Weather).Property(Alerts)) + !String.IsEmpty(Window(Weather).Property(Alerts.IsFetched)) + Skin.HasSetting(EnableWeatherAlertOverlay)</visible>
            </control>
            <control type="label">
                <!--Current Temp-->
                <width>400</width>
                <height>30</height>
                <right>140</right>
                <bottom>50</bottom>
                <font>Bold30</font>
                 <!-- colors should be hardcoded because display on video -->
                <textcolor>white</textcolor>
                <shadowcolor>black</shadowcolor>
                <align>right</align>
                <label>$INFO[Window(Weather).Property(Current.Temperature)] $INFO[System.TemperatureUnits]</label>
                <visible>Weather.IsFetched</visible>
            </control>
			<!--Current Conditions-->
			<control type="label">
                <width>400</width>
                <height>30</height>
                <right>140</right>
                <bottom>15</bottom>
                <font>Reg24</font>
                 <!-- colors should be hardcoded because display on video -->
                <textcolor>white</textcolor>
                <shadowcolor>black</shadowcolor>
                <align>right</align>
                <label>$INFO[Window(Weather).Property(Current.Condition)]</label>
                <visible>Weather.IsFetched</visible>
            </control>
        </control>
    </include>
    
    <include name="OSDInfoPanel">
        <control type="group" id="552233">
            <visible>[Skin.HasSetting(EnableOSDInfo) + [[Player.Paused + Skin.HasSetting(OSDShowInfoOnPause)] | Window.IsActive(videoosd)]] | [Player.ShowInfo + !Window.IsActive(videoosd)]</visible>
            <visible>!Window.IsActive(notification) + !Window.IsActive(extendedprogressdialog) + !Window.IsActive(DialogPlayerProcessInfo.xml)</visible>
			<animation effect="fade" time="350">VisibleChange</animation>
            <include>HideOsdConditions</include>
			<include condition="!Skin.HasSetting(EnableOSDInfoLarge) + !Skin.HasSetting(EnableOSDInfoBingie) + !Skin.HasSetting(UseBingieOSD)">OSDInfoPanelSmall</include>
			<include condition="Skin.HasSetting(EnableOSDInfoLarge) + !Skin.HasSetting(UseBingieOSD)">OSDInfoPanelLarge</include>
			<include condition="Skin.HasSetting(EnableOSDInfoBingie) | Skin.HasSetting(UseBingieOSD)">OSDInfoPanelBingie</include>
        </control>
    </include>
    
    <include name="OSDInfoPanelSmall">
        <!--OSD Info Panel-->
        <!--Info Stuff-->
        <control type="group">
             <width>100%</width>
             <height>275</height>
             <!-- background -->
             <control type="image">
                 <texture border="5">diffuse/panel.png</texture>
                 <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
             </control>
             <!-- Plot -->
             <control type="group">
                 <!--logo-->
                 <control type="image">
                     <posx>1520</posx>
                     <posy>20</posy>
                     <width>356</width>
                     <height>200</height>
                     <fadetime>200</fadetime>
                     <texture background="true">$VAR[OSDInfoImage]</texture>
                     <aspectratio align="left" aligny="top">keep</aspectratio>
                     <visible>[!String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearart))]</visible>
                 </control>
                 <!-- plot when clearlogo visible -->
                 <control type="textbox">
                     <posx>38</posx>
                     <posy>30</posy>
                     <width>1450</width>
                     <height>200</height>
                     <visible>[!String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearart))]</visible>
                     <label fallback="19055">[B]$INFO[VideoPlayer.Premiered,,  • ]$INFO[VideoPlayer.Duration,, min. • ]$INFO[VideoPlayer.MPAA, • ]$INFO[VideoPlayer.RatingAndVotes, • ]$INFO[VideoPlayer.EpisodeName,, • ][/B][CR]$INFO[VideoPlayer.Plot]</label>
                     <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
                     <shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
                     <align>justify</align>
                     <font>Light28</font>
                 </control>
                 <!-- plot when clearlogo NOT visible -->
                 <control type="textbox">
                     <posx>38</posx>
                     <posy>30</posy>
                     <width>1810</width>
                     <height>190</height>
                     <visible>![!String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearart)) | !String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearlogo))]</visible>
                     <label fallback="19055">[B]$INFO[VideoPlayer.Premiered,,  • ]$INFO[VideoPlayer.Duration,, min. • ]$INFO[VideoPlayer.MPAA, • ]$INFO[VideoPlayer.RatingAndVotes, • ]$INFO[VideoPlayer.EpisodeName,, • ][/B][CR]$INFO[VideoPlayer.Plot]</label>
                     <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
                     <shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
                     <align>justify</align>
                     <font>Light28</font>
                 </control>
                <!-- media flags -->
                <control type="group">
                     <posx>38</posx>
                     <posy>240</posy>
                    <include>mediaflags_text</include>
                    <visible>Skin.HasSetting(EnableOSDInfoMediaFlags)</visible>
                </control>
             
             </control>
         </control>
     </include> 
    
    <include name="OSDInfoPanelSmallOrg">
        <!--OSD Info Panel-->
        <!--Info Stuff-->
        <control type="group">
			<!-- background -->
			<control type="image">
				<posx>0</posx>
				<posy>0</posy>
				<width>100%</width>
				<height>190</height>
				<texture border="5">diffuse/panel.png</texture>
				<colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
			</control>
            <!-- Plot -->
            <control type="group">
                <posx>0</posx>
                <posy>20</posy>
                <width>1780</width>
                <height>190</height>
				<!--logo-->
				<control type="image">
					<posx>40</posx>
					<posy>0</posy>
					<width>260</width>
					<height>160</height>
					<fadetime>200</fadetime>
					<texture background="true">$VAR[OSDInfoImage]</texture>
					<aspectratio align="left" aligny="top">keep</aspectratio>
                    <visible>[!String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearart))]</visible>
				</control>
                <!-- plot when clearlogo visible -->
                <control type="textbox">
                    <posx>350</posx>
                    <posy>0</posy>
                    <width>1500</width>
                    <height>160</height>
                    <visible>[!String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearart))]</visible>
                    <label fallback="19055">[B]$INFO[VideoPlayer.Premiered,,  • ]$INFO[VideoPlayer.Duration,, min. • ]$INFO[VideoPlayer.MPAA, • ]$INFO[VideoPlayer.RatingAndVotes, • ]$INFO[VideoPlayer.EpisodeName,, • ][/B][CR]$INFO[VideoPlayer.Plot]</label>
                    <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
                    <align>justify</align>
                    <font>Light28</font>
                </control>
                <!-- plot when clearlogo NOT visible -->
                <control type="textbox">
                    <posx>40</posx>
                    <posy>0</posy>
                    <width>1810</width>
                    <height>160</height>
                    <visible>![!String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearart)) | !String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearlogo))]</visible>
                    <label fallback="19055">[B]$INFO[VideoPlayer.Premiered,,  • ]$INFO[VideoPlayer.Duration,, min. • ]$INFO[VideoPlayer.MPAA, • ]$INFO[VideoPlayer.RatingAndVotes, • ]$INFO[VideoPlayer.EpisodeName,, • ][/B][CR]$INFO[VideoPlayer.Plot]</label>
                    <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
                    <align>justify</align>
                    <font>Light28</font>
                </control>
            </control>
        </control>
    </include>
    
    <include name="OSDInfoPanelLarge">
         <!--OSD Info Panel-->
         <!--Info Stuff-->
         <control type="group">
            <animation effect="slide" start="0" end="0,-120" time="0" condition="Skin.HasSetting(ShowWeatherVideoInfoOSD) | Skin.HasTheme(classic)">Conditional</animation>
             <!-- background -->
             <control type="image">
                 <posx>200</posx>
                 <posy>170</posy>
                 <width>1520</width>
                 <height>610</height>
                 <texture border="15">diffuse/bgpanel.png</texture>
                 <colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
             </control>
             <!-- Plot -->
             <control type="group">
                 <posx>200</posx>
                 <posy>190</posy>
                 <width>1380</width>
                 <height>610</height>
                 <!--logo-->
                 <control type="image">
                     <posx>40</posx>
                     <posy>0</posy>
                     <width>260</width>
                     <height>560</height>
                     <fadetime>200</fadetime>
                     <texture background="true">$VAR[OSDInfoImage]</texture>
                     <aspectratio align="left" aligny="top">keep</aspectratio>
                     <visible>[!String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearart))]</visible>
                 </control>
                 <!-- plot when clearlogo visible -->
                 <control type="textbox">
                     <posx>350</posx>
                     <posy>0</posy>
                     <width>1130</width>
                     <height>560</height>
                     <visible>[!String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearart))]</visible>
                     <label fallback="19055">[B]$INFO[VideoPlayer.Premiered,,  • ]$INFO[VideoPlayer.Duration,, min. • ]$INFO[VideoPlayer.MPAA, • ]$INFO[VideoPlayer.RatingAndVotes, • ]$INFO[VideoPlayer.EpisodeName,, • ][/B][CR]$INFO[VideoPlayer.Plot]</label>
                     <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
                     <shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
                     <align>justify</align>
                     <font>Light36</font>
                 </control>
                 <!-- plot when clearlogo NOT visible -->
                 <control type="textbox">
                     <posx>40</posx>
                     <posy>0</posy>
                     <width>1440</width>
                     <height>560</height>
                     <visible>![!String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearart)) | !String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearlogo))]</visible>
                     <label fallback="19055">[B]$INFO[VideoPlayer.Premiered,,  • ]$INFO[VideoPlayer.Duration,, min. • ]$INFO[VideoPlayer.MPAA, • ]$INFO[VideoPlayer.RatingAndVotes, • ]$INFO[VideoPlayer.EpisodeName,, • ][/B][CR]$INFO[VideoPlayer.Plot]</label>
                     <textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
                     <shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
                     <align>justify</align>
                     <font>Light36</font>
                 </control>
             </control>
         </control>
     </include>

	<include name="OSDInfoPanelBingie">
<!--BINGIE OSD Info Panel-->
		<control type="group">
			<!-- background -->
			<control type="image">
				<width>100%</width>
				<height>100%</height>
				<texture background="true" border="15">special://home/addons/resource.images.backgroundoverlays.basic/resources/vignette.png</texture>
				<colordiffuse>$INFO[Skin.String(OSDPanelColor)]</colordiffuse>
			</control>
			
<!-- Finish Time OSD Info -->
				<control type="label">
					<description>Finish Time</description>
					<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
					<include content="posx" condition="VideoPlayer.HasEpg">
						<param name="posx" value="406" />
					</include>
					<bottom>30</bottom>
					<left>265</left>
					<width>400</width>
					<align>left</align>
					<font>Reg30</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<!--<label>$VAR[FinishTime, [B]$LOCALIZE[31112]: [/B]]</label>-->
					<label>[B]$LOCALIZE[31112]: [/B] [B]$VAR[FinishTime][/B] </label>
				</control>
				
<!-- Current Time OSD Info-->
				<control type="label">
					<description>Current Time</description>
					<bottom>30</bottom>
					<posy>0</posy>
					<width>1920</width>
					<align>center</align>
					<font>Bold30</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<info>System.Time</info>
				</control>
				
<!-- Total Duration OSD Info -->
				<control type="label">
					<description>Total Duration</description>
					<animation end="-45,0" time="0" effect="slide" condition="[!String.IsEqual(Player.Duration(hh),00) + Player.Seeking + [String.IsEqual(Player.TimeRemaining(hh),00) | [VideoPlayer.HasEpg + String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Duration(hh),00) + String.IsEqual(Player.TimeRemaining(hh),00)">Conditional</animation>
					<include content="posx" condition="VideoPlayer.HasEpg">
						<param name="posx" value="406" />
					</include>
					<bottom>30</bottom>
					<right>187</right>
					<width>300</width>
					<align>left</align>
					<font>Reg30</font>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>$INFO[Skin.String(OSDPrimaryTextShadowColor)]</shadowcolor>
					<label>[B]$LOCALIZE[180]: $VAR[TotalDuration][/B]</label>
				</control>
<!-- Discart OSD Info-->
                <control type="image">
                    <visible>true</visible>              <!-- True = On / False = Off -->
		    <posx>265</posx>
                    <posy>230</posy>
                    <width>300</width>
                    <height>300</height>
                    <aligny>center</aligny>
                    <fadetime>300</fadetime>
                    <bordersize>20</bordersize>
<!-- Animation to Move Discart to the Left when Playtime hits> 1 hour -->
		    <animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
		    <animation effect="rotate" end="-360" center="auto" time="12000" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
                    <animation effect="fade" start="0" end="100" delay="800" time="1200" reversible="false"/>
                    <texture background="true" diffuse="diffuse/cdmask_medium_new.png" fallback="defaultcovers/cd_medium.png" border="5">$VAR[PlayerDiscArtImage]</texture>
                    <aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
                    <visible>Player.HasVideo + [!String.IsEmpty(Player.Art(poster)) | !String.IsEmpty(Player.Art(tvshow.poster))]</visible>
               </control>

<!--Poster - Video Cover OSD Pause-->
			<control type="image" id="39623">
				<posx>254</posx>
				<posy>320</posy>
				<align>left</align>
				<aligny>center</aligny>
				<width>320</width>
				<fadetime>200</fadetime>
				<texture background="true">$VAR[OSDImageDefault]</texture> -->
				<bordertexture border="20" colordiffuse="black">diffuse/poster_shadow.png</bordertexture>
				<bordersize>20</bordersize>
				<aspectratio align="left" aligny="top">keep</aspectratio>
				<animation end="0" time="0" effect="fade" condition="String.Contains(Control.GetLabel(39623),DefaultVideo)">Conditional</animation>
<!-- Animation to Move Poster to the Left when Playtime hits> 1 hour -->
				<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
				<include content="posx" condition="VideoPlayer.HasEpg">
					<param name="posx" value="406" />
				</include>
			</control>

<!-- Info -->
			<control type="grouplist">
<!-- Animation to Move Whole Control to the Left when Playtime hits> 1 hour -->
				<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
				<include content="posx" condition="VideoPlayer.HasEpg">
				<param name="posx" value="406" />
				</include>
				<!-- hide for trailers -->
				<visible>!String.Contains(VideoPlayer.Title, -trailer.)</visible>
				<animation end="-250,0" time="0" effect="slide" condition="String.Contains(Control.GetLabel(39623),DefaultVideo)">Conditional</animation>
				<posx>579</posx>
				<posy>250</posy>
				<width>1380</width>
				<height>610</height>
				<orientation>vertical</orientation>
<!-- You're watching label -->
				<control type="label">
					<align>left</align>
					<width>250</width>
					<label>31366</label>
					<font>Reg32</font>
				</control>

<!-- TITLE of Movie -->
				<control type="label">
					<visible>false</visible>              <!-- True = On / False = Off -->
					<width>1130</width>
					<align>left</align>
					<font>Bold74</font>
					<textcolor>white</textcolor>
					<shadowcolor>dimgray</shadowcolor>
					<label>[B]$VAR[OSDLabel4][/B]</label>
					<scroll>true</scroll>
				</control>

<!-- Clear Logo Title - Your Watching -->				
				<control type="image">
					<visible>false</visible>              <!-- True = On / False = Off -->
					<width>400</width>
					<height>150</height>
					<align>left</align>
					<texture background="true">$VAR[VideoPlayerClearLogo]</texture>
					<aspectratio align="left" aligny="center">keep</aspectratio>
				</control>
<!-- Clearart Title - Your Watching -->
				<control type="image">
					<visible>true</visible>              <!-- True = On / False = Off -->
					<width>400</width>
					<height>250</height>
					<align>left</align>
					<texture background="true">$VAR[OSDInfoImage]</texture>
                    <aspectratio align="left" aligny="center">keep</aspectratio>
                    <visible>[!String.IsEmpty(Player.Art(clearlogo)) | !String.IsEmpty(Player.Art(clearart)) | !String.IsEmpty(Player.Art(tvshow.clearlogo)) | !String.IsEmpty(Player.Art(tvshow.clearart))]</visible>
				</control>				
				
				<!-- OSDLabel5 -->
				<control type="label" id="74823">
					<width>980</width>
					<align>left</align>
					<font>Reg34</font>
					<textcolor>white</textcolor>
					<shadowcolor>dimgray</shadowcolor>
					<label>$VAR[OSDLabel5]</label>
					<scroll>false</scroll>
					<visible>!String.IsEmpty(Control.GetLabel(74823))</visible>
				</control>
				<!-- details info -->
				<control type="label">
					<width>1000</width>
					<height>45</height>
					<align>left</align>
					<font>Reg24</font>
					<textcolor>white</textcolor>
					<shadowcolor>dimgray</shadowcolor>
					<label>$VAR[premiered_or_year,,   ]$INFO[VideoPlayer.MPAA,,   ]$INFO[VideoPlayer.Duration(mins),,m]</label>
					<scroll>false</scroll>
				</control>
				<!-- Tagline -->
				<control type="label">
					<width>1130</width>
					<align>left</align>
					<font>Reg32</font>
					<textcolor>white</textcolor>
					<shadowcolor>dimgray</shadowcolor>
					<label>[B]$INFO[VideoPlayer.Tagline][/B]</label>
					<scroll>false</scroll>
					<visible>!String.IsEmpty(VideoPlayer.Tagline)</visible>
				</control>
				<!-- plot -->
				<control type="textbox">
					<width>1130</width>
					<height>560</height>
					<label>$INFO[VideoPlayer.Plot]</label>
					<textcolor>$INFO[Skin.String(OSDPrimaryTextColor)]</textcolor>
					<shadowcolor>dimgray</shadowcolor>
					<align>justify</align>
					<font>Reg28</font>
					<visible>!String.IsEmpty(VideoPlayer.Plot)</visible>
				</control>
			</control>
		</control>
	</include>
    
    <variable name="OSDImageDefault">
        <value condition="![VideoPlayer.Content(livetv) + Skin.HasSetting(NoPvrArtOSD)] + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.AnimatedPoster))">$INFO[Window(Home).Property(SkinHelper.Player.AnimatedPoster)]</value>
		<value condition="![VideoPlayer.Content(livetv) + Skin.HasSetting(NoPvrArtOSD)] + !String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
        <value condition="![VideoPlayer.Content(livetv) + Skin.HasSetting(NoPvrArtOSD)] + !String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <!-- no posters -->
		<value condition="!String.IsEmpty(Player.Icon)">$INFO[Player.Icon]</value>
		<value condition="!String.IsEmpty(PVR.EpgEventIcon)">$INFO[PVR.EpgEventIcon]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Cover)">$INFO[VideoPlayer.Cover]</value>
		<value>defaultvideo.png</value>
	 </variable>

	<variable name="OSDImageNoPoster">
        <value condition="Skin.HasSetting(SkinHelper.EnablePVRThumbs)">http://localhost:52307/getthumb&amp;title=$ESCINFO[VideoPlayer.Title]</value>
		<value condition="!String.IsEmpty(Player.Icon)">$INFO[Player.Icon]</value>
		<value condition="!String.IsEmpty(PVR.EpgEventIcon)">$INFO[PVR.EpgEventIcon]</value>
		<value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Cover)">$INFO[VideoPlayer.Cover]</value>
	</variable>

	<variable name="OSDLabel1">
        <value condition="Player.HasVideo + VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelNumberLabel,, - ]$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + Player.IsInternetStream + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.AddonName)) + String.IsEmpty(VideoPlayer.TvShowTitle)">$INFO[Window(Home).Property(SkinHelper.Player.AddonName)]</value>
        <value condition="Player.HasVideo + VideoPlayer.Content(episodes) + !String.IsEmpty(VideoPlayer.TvShowTitle)">$INFO[VideoPlayer.TVShowTitle] • $LOCALIZE[20373] $INFO[VideoPlayer.Season]</value>
        <value condition="Player.HasAudio + !String.IsEmpty(MusicPlayer.Artist)">$INFO[MusicPlayer.Artist]</value>
        <value condition="Player.HasAudio + String.IsEmpty(MusicPlayer.Artist) + !String.IsEmpty(MusicPlayer.ChannelName)">$INFO[MusicPlayer.ChannelName]</value>
        <value condition="Player.HasAudio + String.IsEmpty(MusicPlayer.Artist) + String.IsEmpty(MusicPlayer.ChannelName) + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.AddonName))">$INFO[Window(Home).Property(SkinHelper.Player.AddonName)]</value>
        <value>$LOCALIZE[31040]</value>
	 </variable>

	 <variable name="OSDLabel2">
        <value condition="Player.HasVideo + VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.Episode]. $INFO[VideoPlayer.Title]</value>
        <value condition="Player.HasVideo + VideoPlayer.Content(livetv) + [!String.IsEmpty(VideoPlayer.Episode) + !String.IsEmpty(VideoPlayer.EpisodeName)]">$INFO[VideoPlayer.Title] - $INFO[VideoPlayer.EpisodeName]</value>
        <value condition="Player.HasVideo">$INFO[VideoPlayer.Title]</value>
        <value condition="Player.HasAudio">$INFO[MusicPlayer.Title]</value>
	 </variable>
     
	 <variable name="OSDLabel3">
        <value condition="Player.HasVideo + VideoPlayer.Content(livetv) + !String.IsEmpty(VideoPlayer.NextTitle) + !Window.IsActive(VideoOSD)">$LOCALIZE[19031]: $INFO[VideoPlayer.NextTitle]</value>
        <value condition="Player.HasVideo + !VideoPlayer.Content(livetv) + String.IsEmpty(VideoPlayer.NextTitle) + !Window.IsActive(VideoOSD) + !String.IsEmpty(player.chaptercount) + !String.IsEqual(player.chaptercount,00)">$INFO[player.chapter,[B]$LOCALIZE[21396]:[/B] ,]$INFO[player.chaptercount,/,]$INFO[player.chaptername, - ,]</value>
        <value condition="Player.HasAudio + !String.IsEmpty(MusicPlayer.Offset(1).Artist) + !Window.IsActive(MusicOSD)">[COLOR=$INFO[Skin.String(OSDSecondaryTextColor)]]$LOCALIZE[554]:[/COLOR] $INFO[MusicPlayer.PlaylistPosition]/$INFO[MusicPlayer.PlaylistLength] - [COLOR=$INFO[Skin.String(OSDSecondaryTextColor)]]$LOCALIZE[19031]:[/COLOR] $INFO[MusicPlayer.Offset(1).Artist] - $INFO[MusicPlayer.Offset(1).Title]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Genre) + !Window.IsActive(VideoOSD) + !String.Contains(VideoPlayer.Genre,unknown)">$LOCALIZE[515]: $INFO[VideoPlayer.Genre]</value>
	 </variable>

	<variable name="OSDLabel4">
		<value condition="Player.HasVideo + VideoPlayer.Content(livetv)">$INFO[VideoPlayer.ChannelNumberLabel,,: ]$INFO[VideoPlayer.ChannelName]</value>
		<value condition="Player.HasVideo + Player.IsInternetStream + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.AddonName)) + String.IsEmpty(VideoPlayer.TvShowTitle)">$INFO[Window(Home).Property(SkinHelper.Player.AddonName)]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(episodes) + !String.IsEmpty(VideoPlayer.TvShowTitle)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value condition="Player.HasAudio + !String.IsEmpty(MusicPlayer.Artist)">$INFO[MusicPlayer.Artist]</value>
		<value condition="Player.HasAudio + String.IsEmpty(MusicPlayer.Artist) + !String.IsEmpty(MusicPlayer.ChannelName)">$INFO[MusicPlayer.ChannelName]</value>
		<value condition="Player.HasAudio + String.IsEmpty(MusicPlayer.Artist) + String.IsEmpty(MusicPlayer.ChannelName) + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.AddonName))">$INFO[Window(Home).Property(SkinHelper.Player.AddonName)]</value>
		<value condition="Player.HasVideo + ![String.Contains(VideoPlayer.Title,movie-trailer) | String.Contains(VideoPlayer.Title,tvshow-trailer)]">$INFO[VideoPlayer.Title]</value>
		<value condition="Player.HasVideo + [String.Contains(VideoPlayer.Title,movie-trailer) | String.Contains(VideoPlayer.Title,tvshow-trailer)]"/>
		<value>$LOCALIZE[31040]</value>
	</variable>

	<variable name="OSDLabel5">
		<value condition="Player.HasVideo + VideoPlayer.Content(Episodes)">[UPPERCASE]$INFO[VideoPlayer.Season,S,]$INFO[VideoPlayer.Episode,E,][/UPPERCASE]$INFO[VideoPlayer.Title, ","]</value>
		<value condition="Player.HasVideo + VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Title]$INFO[VideoPlayer.EpisodeName, - ,]</value>
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Title]</value>
	</variable>

	<variable name="PlayerTitle">
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value>$INFO[VideoPlayer.Title]</value>
	</variable>

	<variable name="PlayTimeFormat">
		<value condition="Player.Seeking">$VAR[SeekTime]</value>
		<value condition="VideoPlayer.HasEPG + String.IsEqual(PVR.EpgEventElapsedTime(hh),00)">$INFO[PVR.EpgEventElapsedTime(mm:ss)]</value>
		<value condition="VideoPlayer.HasEPG">$INFO[PVR.EpgEventElapsedTime]</value>
		<value condition="String.IsEqual(Player.Time(hh),00)">$INFO[Player.Time(mm:ss)]</value>
		<value>$INFO[Player.Time]</value>
	</variable>

	<variable name="TimeRemainingFormat">
		<value condition="VideoPlayer.HasEPG + String.IsEqual(PVR.EpgEventRemainingTime(hh),00)">$INFO[PVR.EpgEventRemainingTime(mm:ss)]</value>
		<value condition="VideoPlayer.HasEPG">$INFO[PVR.EpgEventRemainingTime]</value>
		<value condition="String.IsEqual(Player.TimeRemaining(hh),00)">$INFO[Player.TimeRemaining(mm:ss)]</value>
		<value>$INFO[Player.TimeRemaining]</value>
	</variable>

	<variable name="PlayTime">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventElapsedTime)">$INFO[PVR.EpgEventElapsedTime]</value>
		<value>$INFO[Player.Time]</value>
	</variable>

	<variable name="RemainingTime">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventRemainingTime)">$INFO[PVR.EpgEventRemainingTime]</value>
		<value>$INFO[Player.TimeRemaining]</value>
	</variable>

	<variable name="TotalDuration">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventDuration)">$INFO[PVR.EpgEventDuration]</value>
		<value>$INFO[Player.Duration]</value>
	</variable>

	<variable name="TotalDurationFormatted">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventDuration) + String.IsEqual(PVR.EpgEventDuration(hh),00) + [!String.IsEqual(PVR.EpgEventDuration(mm),00) | !String.IsEqual(PVR.EpgEventDuration(ss),00)]">$INFO[PVR.EpgEventDuration(mm:ss)]</value>
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventDuration) + [!String.IsEqual(PVR.EpgEventDuration(mm),00) | !String.IsEqual(PVR.EpgEventDuration(ss),00) | !String.IsEqual(PVR.EpgEventDuration(hh),00)]">$INFO[PVR.EpgEventDuration]</value>
		<value condition="!String.IsEmpty(Player.Duration) + String.IsEqual(Player.Duration(hh),00)">$INFO[Player.Duration(mm:ss)]</value>
		<value condition="!String.IsEmpty(Player.Duration)">$INFO[Player.Duration]</value>
	</variable>

	<variable name="SeekTime">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventSeekTime) + String.IsEqual(PVR.EpgEventSeekTime(hh),00)">$INFO[PVR.EpgEventSeekTime(mm:ss)]</value>
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventSeekTime)">$INFO[PVR.EpgEventSeekTime]</value>
		<value condition="String.IsEqual(Player.SeekTime(hh),00)">$INFO[Player.SeekTime(mm:ss)]</value>
		<value>$INFO[Player.SeekTime]</value>
	</variable>

	<variable name="FinishTime">
		<value condition="[PVR.IsPlayingTV | VideoPlayer.HasEpg] + !String.IsEmpty(PVR.EpgEventFinishTime)">$INFO[PVR.EpgEventFinishTime]</value>
		<value>$INFO[Player.FinishTime]</value>
	</variable>

	<variable name="premiered_or_year">
		<value condition="VideoPlayer.Content(episodes)">$INFO[VideoPlayer.Premiered]</value>
		<value>$INFO[VideoPlayer.Year]</value>
	</variable>
     
     <variable name="PlayerActionLabel">
		<value condition="[Player.Paused + Player.Caching] + !Player.Seeking">[B]$LOCALIZE[15107]:[/B] $INFO[Player.CacheLevel]%</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize) + ![Player.Forwarding | Player.Rewinding] + Player.seeking">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekStepSize]</value>
		<value condition="Player.DisplayAfterSeek  + ![Player.Forwarding | Player.Rewinding] + !String.IsEmpty(Player.SeekOffset)">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekOffset]</value>
		<value condition="Player.seeking">[B]$LOCALIZE[31255][/B] $VAR[SeekTime] - $VAR[TotalDuration]</value>
		<value condition="Player.Forwarding2x">[B]$LOCALIZE[31253][/B] x2</value>
		<value condition="Player.Forwarding4x">[B]$LOCALIZE[31253][/B] x4</value>
		<value condition="Player.Forwarding8x">[B]$LOCALIZE[31253][/B] x8</value>
		<value condition="Player.Forwarding16x">[B]$LOCALIZE[31253][/B] x16</value>
		<value condition="Player.Forwarding32x">[B]$LOCALIZE[31253][/B] x32</value>
		<value condition="Player.Rewinding2x">[B]$LOCALIZE[31254][/B] x2</value>
		<value condition="Player.Rewinding4x">[B]$LOCALIZE[31254][/B] x4</value>
		<value condition="Player.Rewinding8x">[B]$LOCALIZE[31254][/B] x8</value>
		<value condition="Player.Rewinding16x">[B]$LOCALIZE[31254][/B] x16</value>
		<value condition="Player.Rewinding32x">[B]$LOCALIZE[31254][/B] x32</value>
		<value condition="!String.IsEmpty(Player.FinishTime) | !String.IsEmpty(PVR.EpgEventFinishTime)">$LOCALIZE[31112]: $VAR[FinishTime]</value>
	 </variable>
	 
	 <variable name="PlayerActionLabelSmall">
		<value condition="[Player.Paused + Player.Caching] + !Player.Seeking">[B]$LOCALIZE[15107]:[/B] $INFO[Player.CacheLevel]%</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize) + ![Player.Forwarding | Player.Rewinding] + Player.seeking">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekStepSize]</value>
		<value condition="Player.DisplayAfterSeek  + ![Player.Forwarding | Player.Rewinding] + !String.IsEmpty(player.chaptercount) + !String.IsEqual(player.chaptercount,00)">$INFO[player.chapter,[B]$LOCALIZE[21396]:[/B] ,]$INFO[player.chaptercount,/,]</value>
		<value condition="Player.DisplayAfterSeek  + ![Player.Forwarding | Player.Rewinding] + !String.IsEmpty(Player.SeekOffset)">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekOffset]</value>
		<value condition="Player.Seeking + !String.IsEmpty(player.chaptercount) + !String.IsEqual(player.chaptercount,00)">$INFO[player.chapter,[B]$LOCALIZE[21396]:[/B] ,]$INFO[player.chaptercount,/,]</value>
		<value condition="Player.Seeking">[B]$LOCALIZE[31255][/B] $VAR[SeekTime] - $VAR[TotalDuration]</value>
		<value condition="Player.Forwarding2x">[B]$LOCALIZE[31253][/B] x2</value>
		<value condition="Player.Forwarding4x">[B]$LOCALIZE[31253][/B] x4</value>
		<value condition="Player.Forwarding8x">[B]$LOCALIZE[31253][/B] x8</value>
		<value condition="Player.Forwarding16x">[B]$LOCALIZE[31253][/B] x16</value>
		<value condition="Player.Forwarding32x">[B]$LOCALIZE[31253][/B] x32</value>
		<value condition="Player.Rewinding2x">[B]$LOCALIZE[31254][/B] x2</value>
		<value condition="Player.Rewinding4x">[B]$LOCALIZE[31254][/B] x4</value>
		<value condition="Player.Rewinding8x">[B]$LOCALIZE[31254][/B] x8</value>
		<value condition="Player.Rewinding16x">[B]$LOCALIZE[31254][/B] x16</value>
		<value condition="Player.Rewinding32x">[B]$LOCALIZE[31254][/B] x32</value>
		<value condition="!String.IsEmpty(Player.FinishTime) | !String.IsEmpty(PVR.EpgEventFinishTime)">[B]$LOCALIZE[31112]:[/B] $VAR[FinishTime]</value>
	 </variable>
	 
	 <variable name="PlayerActionLabelLarge">
		<value condition="[Player.Paused + Player.Caching] + !Player.Seeking">[B]$LOCALIZE[15107]:[/B] $INFO[Player.CacheLevel]%</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize) + ![Player.Forwarding | Player.Rewinding] + Player.seeking">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekStepSize]</value>
		<value condition="Player.DisplayAfterSeek  + ![Player.Forwarding | Player.Rewinding] + !String.IsEmpty(Player.SeekOffset)">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekOffset]</value>
		<value condition="Player.Seeking">[B]$LOCALIZE[31255][/B] $VAR[SeekTime] - $VAR[TotalDuration]</value>
		<value condition="Player.Forwarding2x">[B]$LOCALIZE[31253][/B] x2</value>
		<value condition="Player.Forwarding4x">[B]$LOCALIZE[31253][/B] x4</value>
		<value condition="Player.Forwarding8x">[B]$LOCALIZE[31253][/B] x8</value>
		<value condition="Player.Forwarding16x">[B]$LOCALIZE[31253][/B] x16</value>
		<value condition="Player.Forwarding32x">[B]$LOCALIZE[31253][/B] x32</value>
		<value condition="Player.Rewinding2x">[B]$LOCALIZE[31254][/B] x2</value>
		<value condition="Player.Rewinding4x">[B]$LOCALIZE[31254][/B] x4</value>
		<value condition="Player.Rewinding8x">[B]$LOCALIZE[31254][/B] x8</value>
		<value condition="Player.Rewinding16x">[B]$LOCALIZE[31254][/B] x16</value>
		<value condition="Player.Rewinding32x">[B]$LOCALIZE[31254][/B] x32</value>
		<value condition="Player.Paused">[B]$LOCALIZE[31251][/B]</value>
	 </variable>

	<variable name="PlayerActionLabelBingie">
		<value condition="Player.DisplayAfterSeek  + ![Player.Forwarding | Player.Rewinding | Player.Paused] + !String.IsEmpty(Player.SeekOffset) + String.StartsWith(Player.SeekOffset,-83)">00:00</value>
		<value condition="!Player.Seeking + Player.DisplayAfterSeek  + ![Player.Forwarding | Player.Rewinding | Player.Paused] + !String.IsEmpty(Player.SeekOffset)">$INFO[Player.SeekOffset]</value>
		<value condition="Player.Forwarding2x | Player.Rewinding2x">x2</value>
		<value condition="Player.Forwarding4x | Player.Rewinding4x">x4</value>
		<value condition="Player.Forwarding8x | Player.Rewinding8x">x8</value>
		<value condition="Player.Forwarding16x | Player.Rewinding16x">x16</value>
		<value condition="Player.Forwarding32x | Player.Rewinding32x">x32</value>
	</variable>
     
     <include name="HideOsdConditions">
        <visible>
            !Window.IsActive(pvrchannelguide) + !Window.IsActive(PVROSDTeletext) + !Window.IsActive(PVROSDChannels) + !Window.IsActive(videobookmarks) +
            !Window.IsActive(sliderdialog) + !Window.IsActive(subtitlesearch) + !Window.IsActive(script.pseudotv.TVOverlay.xml) +
            !Window.IsActive(script.pseudotv.live.TVOverlay.xml) + !Window.IsActive(selectdialog) + !Window.IsActive(musicplaylist)
        </visible>
     </include>

	<!-- Seek/Pause Image Indicator Defs -->
	<include name="PlayerImageIndicatorDefs">
		<animation delay="150" time="300" effect="fade">Visible</animation>
		<animation delay="0" time="200" effect="fade">Hidden</animation>
		<animation effect="zoom" start="100" end="130" center="auto" condition="true">Conditional</animation>
		<left>165</left>
		<bottom>90</bottom>
		<width>60</width>
		<height>60</height>
		<colordiffuse>$INFO[Skin.String(OSDButtonsFocusColor)]</colordiffuse>
		<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
	</include>

	<include name="OSDButtons_Bingie_Layout">
		<control type="grouplist" id="300">
			<animation type="WindowOpen">
				<effect type="slide" start="0,-400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="0" end="100" delay="0" time="350" reversible="false"/>
			</animation>
			<animation type="WindowClose">
				<effect type="slide" start="0,0" end="0,-400" tween="cubic" easing="out" delay="0" time="450" reversible="false" condition="Window.IsVisible(1158)"/>
				<effect type="fade" start="100" end="0" delay="0" time="350" reversible="false" condition="Window.IsVisible(1158)"/>
				<effect type="fade" start="100" end="0" delay="0" time="150" reversible="false" condition="!Window.IsVisible(1158)"/>
			</animation>

			<posx>$PARAM[toposdposleft]</posx>
			<top>$PARAM[postop]</top>
			<width>auto</width>
			<height>500</height>
			<itemgap>25</itemgap>
			<onleft>noop</onleft>
            <onright>noop</onright>
			<ondown>200</ondown>
			<orientation>vertical</orientation>
			<usecontrolcoords>true</usecontrolcoords>
            <control type="grouplist" id="400">
                <width>auto</width>
                <height>$PARAM[topsize]</height>
                <itemgap>$PARAM[gap]</itemgap>
                <onleft>noop</onleft>
                <onright>noop</onright>
                <ondown>200</ondown>
                <orientation>horizontal</orientation>

				<control type="button" id="204">
					<description>Exit</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<font/>
					<label>36036</label>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]back_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]back.png</texturenofocus>
					<onclick>PlayerControl(Stop)</onclick>
					<include>Top_OSD_Button_Zoom_Anim</include>
				</control>
				<control type="button" id="104">
					<description>Subtitles</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<label>287</label>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]subtitles_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]subtitles.png</texturenofocus>
					<onclick>ActivateWindow(osdsubtitlesettings)</onclick>
					<visible>!VideoPlayer.Content(livetv)</visible>
					<include>Top_OSD_Button_Zoom_Anim</include>
					<visible>Skin.HasSetting(bingie_videoosd_buttons_subtitles)</visible>
				</control>
                <control type="button" id="101">
                    <description>Audio Settings</description>
                    <width>$PARAM[topsize]</width>
                    <height>$PARAM[topsize]</height>
                    <label>13396</label>
                    <font/>
                    <texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]audio_fo.png</texturefocus>
                    <texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]audio.png</texturenofocus>
                    <onclick>ActivateWindow(124)</onclick>
                    <include>Top_OSD_Button_Zoom_Anim</include>
					<visible>Skin.HasSetting(bingie_videoosd_buttons_audio)</visible>
                </control>
                <control type="button" id="102">
                    <description>Video Settings</description>
                    <width>$PARAM[topsize]</width>
                    <height>$PARAM[topsize]</height>
                    <label>13395</label>
                    <align>left</align>
                    <font/>
                    <texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]video_fo.png</texturefocus>
                    <texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]video.png</texturenofocus>
                    <onclick>ActivateWindow(123)</onclick>
                    <include>Top_OSD_Button_Zoom_Anim</include>
					<visible>Skin.HasSetting(bingie_videoosd_buttons_video)</visible>
                </control>
				<control type="button" id="215">
					<description>discmenu</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]dvd_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]dvd.png</texturenofocus>
					<onclick>PlayerControl(ShowVideoMenu)</onclick>
					<visible>VideoPlayer.HasMenu</visible>
					<include>Top_OSD_Button_Zoom_Anim</include>
					<visible>Skin.HasSetting(bingie_videoosd_buttons_discmenu)</visible>
				</control>
				<control type="button" id="807">
					<description>pvrguide</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]epg_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]epg.png</texturenofocus>
					<visible>VideoPlayer.Content(livetv) + VideoPlayer.HasEpg</visible>
					<onclick>ActivateWindow(pvrchannelguide)</onclick>
					<include>Top_OSD_Button_Zoom_Anim</include>
					<visible>Skin.HasSetting(bingie_videoosd_buttons_pvrguide)</visible>
				</control>
				<control type="button" id="214">
					<description>bookmarks</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]bookmarks_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]bookmarks.png</texturenofocus>
					<onclick>ActivateWindow(VideoBookmarks)</onclick>
					<visible>!VideoPlayer.Content(livetv)</visible>
					<include>Top_OSD_Button_Zoom_Anim</include>
					<visible>Skin.HasSetting(bingie_videoosd_buttons_bookmarks)</visible>
				</control>
				<control type="togglebutton" id="10">
					<description>record</description>
					<include>Top_OSD_Button_Zoom_Anim</include>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<label/>
					<font/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]recordoff_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]recordoff.png</texturenofocus>
					<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]recordon_fo.png</alttexturefocus>
					<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]recordon.png</alttexturenofocus>
					<usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
					<onclick>PVR.ToggleRecordPlayingChannel</onclick>
					<visible>PVR.CanRecordPlayingChannel</visible>
				</control>
				<control type="button" id="209">
					<description>Play From Beginning</description>
					<width>$PARAM[topsize]</width>
					<height>$PARAM[topsize]</height>
					<font/>
					<label/>
					<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]reset_fo.png</texturefocus>
					<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]reset.png</texturenofocus>
					<onclick>seek(-298800)</onclick>
					<onclick condition="Player.Paused">PlayerControl(Play)</onclick>
					<include>Top_OSD_Button_Zoom_Anim</include>
					<visible>Player.SeekEnabled</visible>
				</control>
                <control type="button" id="808">
                    <description>infopanel</description>
                    <width>$PARAM[topsize]</width>
                    <height>$PARAM[topsize]</height>
                    <label>31133</label>
                    <font/>
                    <texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]info_fo.png</texturefocus>
                    <texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]info.png</texturenofocus>
                    <visible>Player.HasVideo + !String.Contains(VideoPlayer.Title, -trailer.)</visible>
                    <onclick>Skin.ToggleSetting(EnableOSDInfo)</onclick>
                    <include>Top_OSD_Button_Zoom_Anim</include>
					<visible>Skin.HasSetting(bingie_videoosd_buttons_info)</visible>
                </control>
            </control>
            <control type="label">
                <visible>ControlGroup(300).HasFocus() | Player.Paused</visible>
				<animation effect="fade" start="0" end="100" time="250">VisibleChange</animation>
				<left>100</left>
                <height>auto</height>
                <width>auto</width>
                <align>left</align>
                <font>Reg28</font>
                <textcolor>99fffeff</textcolor>
                <label>$VAR[osd_button_description]</label>
                <scroll>false</scroll>
            </control>
        </control>

		<control type="grouplist" id="200">
			<animation type="WindowOpen">
				<effect type="slide" start="0,400" end="0,0" tween="cubic" easing="out" delay="0" time="450" reversible="false"/>
				<effect type="fade" start="0" end="100" delay="0" time="350" reversible="false"/>
			</animation>
			<animation type="WindowClose">
				<effect type="slide" start="0,0" end="0,400" tween="cubic" easing="out" delay="0" time="450" reversible="false" condition="Window.IsVisible(1158)"/>
				<effect type="fade" start="100" end="0" delay="0" time="350" reversible="false" condition="Window.IsVisible(1158)"/>
				<effect type="fade" start="100" end="0" delay="0" time="150" reversible="false" condition="!Window.IsVisible(1158)"/>
			</animation>
			<animation end="$PARAM[bottomsize],0" time="0" effect="slide" condition="VideoPlayer.Content(livetv) + !Player.PauseEnabled">Conditional</animation>
			<animation end="-45,0" time="0" effect="slide" condition="[Player.Seeking + [!String.IsEqual(Player.SeekTime(hh),00) | [VideoPlayer.HasEpg + !String.IsEqual(PVR.EpgEventSeekTime(hh),00)]]] | [VideoPlayer.HasEPG + !String.IsEqual(PVR.EpgEventElapsedTime(hh),00)] | !String.IsEqual(Player.Time(hh),00)">Conditional</animation>
			<animation effect="fade" start="100" end="0" time="50" condition="Player.Forwarding | Player.Rewinding">Conditional</animation>

			<posx>$PARAM[bottomosdposleft]</posx>
			<bottom>$PARAM[posbottom]</bottom>
			<width>1540</width>
			<height>$PARAM[bottomsize]</height>
			<itemgap>$PARAM[gap]</itemgap>
			<onleft condition="!Player.SeekEnabled">noop</onleft>
            <onleft condition="Player.SeekEnabled + Player.Paused">PlayerControl(Play)</onleft>
            <onleft condition="Player.SeekEnabled">back</onleft>
			<onright condition="!Player.SeekEnabled">noop</onright>
            <onright condition="Player.SeekEnabled + Player.Paused">PlayerControl(Play)</onright>
			<onright condition="Player.SeekEnabled">back</onright>
			<onup>300</onup>
			<orientation>horizontal</orientation>
			<animation effect="fade" start="100" end="50" time="0" condition="!ControlGroup(200).HasFocus()">Conditional</animation>

			<control type="button" id="201">
				<include>Bottom_OSD_Button_Zoom_Anim</include>
				<description>previous channel</description>
				<width>$PARAM[bottomsize]</width>
				<height>$PARAM[bottomsize]</height>
				<label>210</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]channelup_fo.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]channelup.png</texturenofocus>
				<onclick>ChannelUp</onclick>
				<visible>VideoPlayer.Content(livetv)</visible>
			</control>
			<control type="button" id="206">
				<include>Bottom_OSD_Button_Zoom_Anim</include>
				<description>Next channel</description>
				<width>$PARAM[bottomsize]</width>
				<height>$PARAM[bottomsize]</height>
				<label>209</label>
				<font/>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]channeldown_fo.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsColor)]">$PARAM[iconspath]channeldown.png</texturenofocus>
				<onclick>ChannelDown</onclick>
				<visible>VideoPlayer.Content(livetv)</visible>
			</control>
			<control type="togglebutton" id="203">
				<include>Bottom_OSD_Button_Zoom_Anim</include>
				<animation effect="fade" start="100" end="60">unfocus</animation>
				<altlabel>208</altlabel>
				<description>Play Pause</description>
				<width>$PARAM[bottomsize]</width>
				<height>$PARAM[bottomsize]</height>
				<font/>
				<label>208</label>
				<texturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]pause_new_fo.png</texturefocus>
				<texturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]pause_new.png</texturenofocus>
				<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
				<alttexturefocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]play_new_fo.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$INFO[Skin.String(OSDButtonsFocusColor)]">$PARAM[iconspath]play_new_nf.png</alttexturenofocus>
				<onclick>PlayerControl(Play)</onclick>
				<visible>Player.PauseEnabled</visible>
			</control>
		</control>
	</include>

	<include name="JumpIndicator">
		<control type="group">
			<visible>Player.Seeking + !String.IsEmpty(Player.SeekStepSize)</visible>
			<visible>$PARAM[visibility]</visible>
			<animation delay="150" time="200" effect="fade">Visible</animation>
			<animation time="250" start="100" end="0" effect="fade" condition="String.IsEmpty(Player.SeekStepSize)">Hidden</animation>
			<centerleft>$PARAM[centerleft]</centerleft>
			<control type="image">
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<align>center</align>
				<height>100%</height>
				<texture colordiffuse="ccfffeff">$PARAM[image]</texture>
			</control>
			<control type="label">
				<height>100%</height>
				<width>auto</width>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[Player.SeekStepSize]</label>
				<font>$PARAM[font]</font>
				<textcolor>ccfffeff</textcolor>
			</control>
		</control>
	</include>

	<include name="JumpIndicatorMidscreen">
		<control type="group">
			<top>450</top>
			<height>80</height>
			<align>center</align>
			<include content="JumpIndicator">
				<param name="visibility" value="!String.Contains(Player.SeekStepSize,-)" />
				<param name="centerleft" value="75%" />
				<param name="image" value="osd/forward_jump.png" />
				<param name="font" value="Light18" />
			</include>
			<include content="JumpIndicator">
				<param name="visibility" value="String.Contains(Player.SeekStepSize,-)" />
				<param name="centerleft" value="25%" />
				<param name="image" value="osd/rewind_jump.png" />
				<param name="font" value="Light18" />
			</include>
		</control>
	</include>

	<include name="JumpIndicatorMinimal">
		<control type="group">
			<bottom>250</bottom>
			<height>70</height>
			<align>center</align>
			<include content="JumpIndicator">
				<param name="visibility" value="true" />
				<param name="centerleft" value="50%" />
				<param name="image" value="$VAR[jump_indicator_image]" />
				<param name="font" value="Light16" />
			</include>
		</control>
	</include>

	<variable name="jump_indicator_image">
		<value condition="!String.IsEmpty(Player.SeekStepSize) + String.Contains(Player.SeekStepSize,-)">osd/rewind_jump.png</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize) + !String.Contains(Player.SeekStepSize,-)">osd/forward_jump.png</value>
	</variable>

    <variable name="osd_button_description">
		<value condition="Control.HasFocus(10)">[UPPERCASE]$LOCALIZE[264][/UPPERCASE]</value>
        <value condition="Control.HasFocus(204)">[UPPERCASE]$LOCALIZE[13012][/UPPERCASE]</value>
		<value condition="Control.HasFocus(209)">[UPPERCASE]$LOCALIZE[12021][/UPPERCASE]</value>
        <value condition="Control.HasFocus(101)">[UPPERCASE]$LOCALIZE[292][/UPPERCASE]</value>
        <value condition="Control.HasFocus(102)">[UPPERCASE]$LOCALIZE[291][/UPPERCASE]</value>
        <value condition="Control.HasFocus(104)">[UPPERCASE]$LOCALIZE[24012][/UPPERCASE]</value>
		<value condition="Control.HasFocus(214)">[UPPERCASE]$LOCALIZE[298][/UPPERCASE]</value>
		<value condition="Control.HasFocus(215)">[UPPERCASE]$LOCALIZE[33061][/UPPERCASE]</value>
		<value condition="Control.HasFocus(807)">[UPPERCASE]$LOCALIZE[4][/UPPERCASE]</value>
        <value condition="Control.HasFocus(808)">[UPPERCASE]$LOCALIZE[29915][/UPPERCASE]</value>
		<value>[UPPERCASE]$LOCALIZE[33063][/UPPERCASE]</value>
    </variable>

	<variable name="VideoRatingTopBarLabel">
		<value condition="String.Contains(VideoPlayer.MPAA,rated)">$INFO[VideoPlayer.MPAA]</value>
		<value>$INFO[VideoPlayer.MPAA,$LOCALIZE[31023] ,]</value>
	</variable>

	<variable name="ForwardRewindIndicatorImage">
		<value condition="Player.Forwarding">osd/slim/forward_fo.png</value>
		<value condition="Player.Rewinding">osd/slim/rewind_fo.png</value>
	</variable>
</includes>
