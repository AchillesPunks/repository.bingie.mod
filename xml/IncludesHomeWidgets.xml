<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>
    <include name="widget_layout_default">
        <include content="widget_layout_poster" condition="String.IsEqual(Skin.String(widgetstyle),poster)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_landscape" condition="String.IsEqual(Skin.String(widgetstyle),landscape)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_landscapesmall" condition="String.IsEqual(Skin.String(widgetstyle),landscapesmall)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_singlebox" condition="String.IsEqual(Skin.String(widgetstyle),single box) | Skin.String(widgetstyle, singlebox)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_widebox" condition="String.IsEqual(Skin.String(widgetstyle),wide box) | Skin.String(widgetstyle, widebox)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_smallposter" condition="String.IsEqual(Skin.String(widgetstyle),small poster) | Skin.String(widgetstyle, smallposter)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_square" condition="String.IsEqual(Skin.String(widgetstyle),square)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_minisquare" condition="String.IsEqual(Skin.String(widgetstyle),minisquare)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_banner" condition="String.IsEqual(Skin.String(widgetstyle),banner)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_landscapelarge" condition="String.IsEqual(Skin.String(widgetstyle),landscapelarge)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_landscapedetails" condition="String.IsEqual(Skin.String(widgetstyle),landscapedetails)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_posterdetails" condition="String.IsEqual(Skin.String(widgetstyle),posterdetails)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <!--<include content="widget_layout_highlight" condition="String.IsEqual(Skin.String(widgetstyle),highlight)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>-->
    </include>
    <include name="widget_layout_None">
        <include content="widget_layout_default">
            <param name="widgetid" value="$PARAM[widgetid]"/>
            <param name="widgetTags" value="$PARAM[widgetTags]"/>
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
    </include>

    <!-- widget poster layout -->
    <include name="widget_layout_poster">
        <include condition="$PARAM[multiRows]">widget_layout_poster_multi</include>
        <height>340</height>
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_poster_animation</include>
        <itemlayout height="340" width="225">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>225</width>
                <height>340</height>
                <include>PosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">PosterTagOverlay</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
                </control>
               <include>Poster_New_Episodes_Tag_Overlay</include>
            </control>
        </itemlayout>
        <focusedlayout height="340" width="225">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>225</width>
                <height>340</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <control type="image">
                    <visible>![String.IsEqual(Skin.String(HomeLayout),bingie) + Skin.HasSetting(EnableFixedFrameWidgets) + Skin.HasSetting(EnableFixedFocusWidgets) + [[Window.IsActive(Home) | $EXP[IsBingieListsActive]] | [[$EXP[IsBingieHubsActive]] + Skin.HasSetting(LockHubWidgets)]]]</visible>
                    <visible>Control.HasFocus($PARAM[widgetid])</visible>
                    <include>PosterThumbFO_Defs</include>
                    <include>thumbsborder_focused</include>
                </control>
                <include>PosterThumbLayout</include>
                <include condition="!Window.IsActive(Home)">PosterTagOverlay</include>
                <control type="group">
                    <include condition="Skin.HasSetting(CaseOverlays)">PosterCaseOverlay</include>
                </control>
                <control type="group">
                    <!--Watched Overlay-->
                    <right>8</right>
                    <top>8</top>
                    <include>WatchedIndicatorNormal</include>
                    <animation type="Conditional" condition="Skin.HasTheme(classic)">
                        <effect type="slide" end="3,-3" time="0"  />
                    </animation>
                </control>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">PosterTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
                <include>Poster_New_Episodes_Tag_Overlay</include>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="poster"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_poster_multi">
        <height>760</height>
    </include>
    
    <!-- widget poster details layout -->
    <include name="widget_layout_posterdetails">
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_posterdetails_animation</include>
        <height>380</height>
        <orientation>horizontal</orientation>
        <itemlayout height="380" width="261">
          <control type="group">
              <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                  <param name="left" value="bingie_no_circular_posx"/>
              </include>
            <width>250</width>
            <height>370</height>
            <include>PosterPanelLayout</include>
            <control type="group">
                <description>widget label overlay</description>
                <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">PosterTagOverlay</include>
                <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                    <param name="prefix" value="Poster" />
                </include>
                <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
            </control>
          </control>
        </itemlayout>
        <focusedlayout height="380" width="261" condition="!Control.HasFocus($PARAM[widgetid])">
          <control type="group">
              <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                  <param name="left" value="bingie_no_circular_posx"/>
              </include>
            <width>250</width>
            <height>370</height>
            <include>PosterPanelLayout</include>
            <control type="group">
                <description>widget label overlay</description>
                <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">PosterTagOverlay</include>
                <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
                <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                    <param name="prefix" value="Poster" />
                </include>
            </control>
            <include content="HiddenWidgetButton">
                <param name="widgetstyle" value="posterdetails" />
                <param name="widgetid" value="$PARAM[widgetid]" />
            </include>
          </control>
        </focusedlayout>
        <focusedlayout width="780" height="380" condition="Control.HasFocus($PARAM[widgetid])">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>768</width>
                <height>370</height>
                <include content="widget_layout_posterdetails_widebox">
                    <param name="widgetid" value="$PARAM[widgetid]" />
                </include>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="posterdetails" />
                    <param name="widgetid" value="$PARAM[widgetid]" />
                </include>
            </control>
        </focusedlayout>
	</include>

    <include name="widget_layout_posterdetails_widebox">
        <!-- wide box widget -->
        <control type="group">
            <control type="image">
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
            </control>
            <control type="image">
                <texture border="5">diffuse/thinborder.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsBorderFocusColor)]</colordiffuse>
            </control>
            <!-- poster image -->
            <control type="group">
                <width>250</width>
                <height>370</height>
                <include>PosterPanelLayout</include>
              </control>
            <control type="textbox">
                <left>260</left>
                <right>30</right>
                <top>8</top>
                <aligny>top</aligny>
                <height>40</height>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoLabel]</label>
            </control>
            <control type="textbox">
                <left>260</left>
                <right>30</right>
                <top>50</top>
                <bottom>20</bottom>
                <font>Reg24</font>
                <align>justify</align>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="!Skin.HasSetting(DisablePlotAutoScroll)" />
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
            </control>
        </control>
    
    </include>
    
    <!-- widget small poster layout -->
    <include name="widget_layout_smallposter">
        <include condition="$PARAM[multiRows]">widget_layout_smallposter_multi</include>
        <height>253</height>
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_smallposter_animation</include>
        <itemlayout height="253" width="182" condition="!$EXP[IsVerticalLayout]">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>162</width>
                <height>240</height>
                <include>SmallPosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SmallPosterTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="253" width="182" condition="!$EXP[IsVerticalLayout] + !Control.HasFocus($PARAM[widgetid])">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>162</width>
                <height>240</height>
                <include>SmallPosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SmallPosterTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
            </control>
        </focusedlayout>
        <focusedlayout height="253" width="182" condition="!$EXP[IsVerticalLayout] + Control.HasFocus($PARAM[widgetid])">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>162</width>
                <height>240</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>SmallPosterPanelLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SmallPosterTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="smallposter"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
        
        <itemlayout height="253" width="162" condition="$EXP[IsVerticalLayout]">
            <control type="group">
                <width>162</width>
                <height>240</height>
                <include>SmallPosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SmallPosterTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="253" width="162" condition="$EXP[IsVerticalLayout] + !Control.HasFocus($PARAM[widgetid])">
            <control type="group">
                <width>162</width>
                <height>240</height>
                <include>SmallPosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SmallPosterTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
            </control>
        </focusedlayout>
        <focusedlayout height="253" width="162" condition="$EXP[IsVerticalLayout] + Control.HasFocus($PARAM[widgetid])">
            <control type="group">
                <width>162</width>
                <height>240</height>
                <include>SmallPosterPanelLayoutFocus</include>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SmallPosterTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">PosterTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Poster"/>
                    </include>
                </control>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="smallposter"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
        
        <animation effect="slide" start="0" end="140" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + Skin.HasSetting(VerticalHomeLargeWidget) + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,7)">Conditional</animation>
        
        <animation effect="slide" start="0" end="182" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,9)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,8)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,7)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,6)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="182" time="0" condition="Skin.HasSetting(WidgetAlignRight) + !$EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
        <animation effect="slide" start="0" end="162" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,7)">Conditional</animation>
        
        <animation effect="slide" start="0" end="162" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,6)">Conditional</animation>
        <animation effect="slide" start="0" end="162" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,5)">Conditional</animation>
        <animation effect="slide" start="0" end="162" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,4)">Conditional</animation>
        <animation effect="slide" start="0" end="162" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,3)">Conditional</animation>
        <animation effect="slide" start="0" end="162" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,2)">Conditional</animation>
        <animation effect="slide" start="0" end="162" time="0" condition="Skin.HasSetting(WidgetAlignRight) + $EXP[IsVerticalLayout] + !Integer.IsGreater(Container($PARAM[widgetid]).NumItems,1)">Conditional</animation>
    </include>
    <include name="widget_layout_smallposter_multi">
        <include condition="String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)" content="height">
            <param name="height" value="1012" />
        </include>
        <include condition="![String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)]" content="height">
            <param name="height" value="759" />
        </include>
    </include>
    
    <!-- widget square layout -->
    <include name="widget_layout_square">
        <include condition="$PARAM[multiRows]">widget_layout_square_multi</include>
        <height>263</height>
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_square_animation</include>
        <itemlayout height="263" width="262">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>240</width>
                <height>240</height>
                <include>SquarePosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SquarePosterTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">SquarePosterTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="SquarePoster"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="263" width="262">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>240</width>
                <height>240</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>SquarePosterPanelLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SquarePosterTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">SquarePosterTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="SquarePoster"/>
                    </include>
                </control>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="square"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_square_multi">
        <include condition="String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)" content="height">
            <param name="height" value="1052" />
        </include>
        <include condition="![String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)]" content="height">
            <param name="height" value="789" />
        </include>
    </include>

    <!-- widget minisquare layout -->
    <include name="widget_layout_minisquare">
        <include condition="$PARAM[multiRows]">widget_layout_minisquare_multi</include>
        <height>131</height>
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_minisquare_animation</include>
        <itemlayout height="131" width="130">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>120</width>
                <height>120</height>
                <include>SquarePosterPanelLayout</include>
            </control>
        </itemlayout>
        <focusedlayout height="131" width="130">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>120</width>
                <height>120</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>SquarePosterPanelLayoutFocus</include>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="minisquare"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_minisquare_multi">
        <height>786</height>
    </include>

    <!-- widget landscape layout -->
    <include name="widget_layout_landscape">
        <include content="widget_layout_landscape_not_vertical_layout" condition="!$EXP[IsVerticalLayout]">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_layout_landscape_vertical_layout" condition="$EXP[IsVerticalLayout]">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
    </include>

    <include name="widget_layout_landscape_vertical_layout">
        <include condition="$PARAM[multiRows]">widget_layout_landscape_multi</include>
        <height>190</height>
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_landscape_animation</include>
        <itemlayout width="326" height="190">
            <control type="group">
                <width>326</width>
                <height>190</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout width="326" height="190">
            <control type="group">
                <width>326</width>
                <height>190</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>ThumbsViewLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscape"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>

    <include name="widget_layout_landscape_not_vertical_layout">
        <include condition="$PARAM[multiRows]">widget_layout_landscape_multi</include>
        <height>210</height>
        <itemlayout width="360" height="210">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>landscape_width</width>
                <height>210</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
                <include>New_Episodes_Tag_Overlay</include>
            </control>
        </itemlayout>
        <focusedlayout width="360" height="210">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>landscape_width</width>
                <height>210</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <control type="image">
                    <visible>![String.IsEqual(Skin.String(HomeLayout),bingie) + Skin.HasSetting(EnableFixedFrameWidgets) + Skin.HasSetting(EnableFixedFocusWidgets) + [[Window.IsActive(Home) | $EXP[IsBingieListsActive]] | [[$EXP[IsBingieHubsActive]] + Skin.HasSetting(LockHubWidgets)]]]</visible>
                    <visible>Control.HasFocus($PARAM[widgetid])</visible>
                    <include>ThumbsFO_Defs</include>
                    <include>thumbsborder_focused</include>
                </control>
                <control type="image">
                    <texture border="5">home/home_focus.png</texture>
                    <colordiffuse>$VAR[ViewDetailsBorderFocusColor]</colordiffuse>
                    <aspectratio>stretch</aspectratio>
                    <visible>[Window.IsActive(Home) + Skin.HasSetting(Home_TransParentTiles)]</visible>
                    <bordersize>-4</bordersize>
                </control>
                <include>ThumbsViewItemLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
                <include>New_Episodes_Tag_Overlay</include>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscape"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>

    <!-- Highlight Layout -->
    <!--<include name="widget_layout_highlight">
        <height>714</height>
        <orientation>horizontal</orientation>
        <onfocus>ClearProperty(highlightfocus,home)</onfocus>
        <itemlayout height="714" width="360">
            <control type="group">
                <include content="left" condition="!Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="-230"/>
                </include>
                <width>360</width>
                <height>714</height>
                <include>PosterPanelLayout</include>
            </control>
        </itemlayout>
        <focusedlayout width="360" height="714" condition="[ControlGroup(77777).HasFocus() + !Control.HasFocus($PARAM[widgetid])] | !String.IsEqual(Window(home).property(highlightfocus),Container($PARAM[widgetid]).CurrentItem)">
            <control type="group">
                <include content="left" condition="!Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="-230"/>
                </include>
                <width>360</width>
                <height>714</height>
                <include>PosterThumbLayout</include>
            </control>
            <control type="button">
                <visible>false</visible>
                <onfocus condition="System.HasAlarm(preview_delay)">CancelAlarm(preview_delay,silent)</onfocus>
                <onfocus condition="$EXP[IsPlayingUnrecognizedContent] + String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">PlayerControl(Stop)</onfocus>
                <onfocus>ClearProperty(highlightfocus,home)</onfocus>
                <onfocus>AlarmClock(FocusHighlightWidget,SetProperty(highlightfocus,$INFO[Container($PARAM[widgetid]).CurrentItem],Home),00:03,silent)</onfocus>
                <include content="SetWidgetProps">
                    <param name="widgetid" value="$PARAM[widgetid]" />
                    <param name="widgetstyle" value="highlight" />
                </include>
                <onfocus condition="!String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">ClearProperty(KeepPlayingPreview,Home)</onfocus>
                <onunfocus condition="System.HasAlarm(preview_delay)">CancelAlarm(preview_delay,silent)</onunfocus>
                <onunfocus condition="$EXP[IsPlayingUnrecognizedContent] + String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">PlayerControl(Stop)</onunfocus>
            </control>
        </focusedlayout>
        <focusedlayout width="1256" height="714" condition="[!ControlGroup(77777).HasFocus() | Control.HasFocus($PARAM[widgetid])] + String.IsEqual(Window(home).property(highlightfocus),Container($PARAM[widgetid]).CurrentItem)">
            <control type="group">
                <include content="left" condition="!Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="-230"/>
                </include>
                <width>1256</width>
                <height>714</height>
                <animation delay="0" time="300" effect="fade" condition="true">Conditional</animation>
                <control type="image">
                    <animation delay="200" time="100" effect="fade" condition="true">Conditional</animation>
                    <bordertexture colordiffuse="d9ffffff">colors/color_white.png</bordertexture>
                    <bordersize>4</bordersize>
                    <texture background="true">home/home_matte2.png</texture>
                    <colordiffuse>ff353535</colordiffuse>
                    <include>thumbsborder_focused</include>
                </control>
                <control type="group">
                    <visible>!$EXP[IsPlayingUnrecognizedContent]</visible>
                    <width>1256</width>
                    <height>714</height>
                    <control type="image">
                        <bordertexture colordiffuse="d9ffffff">colors/color_white.png</bordertexture>
                        <bordersize>4</bordersize>
                        <include>thumbsborder_focused</include>
                        <texture background="true" diffuse="home/home_matte2.png" fallback="colors/color_keyboard.png">$VAR[LandscapeImage]</texture>
                        <aspectratio scalediffuse="false" align="center" aligny="top">scale</aspectratio>
                        <visible>![!String.IsEmpty(ListItem.Art(thumb)) + String.IsEqual(ListItem.Art(thumb),ListItem.Property(channellogo))]</visible>
                        <visible>String.IsEmpty(ListItem.Property(defaultID))</visible>
                    </control>
                </control>
                <control type="group">
                    <visible>Control.HasFocus($PARAM[widgetid]) + $EXP[IsPlayingUnrecognizedContent]</visible>
                    <left>8</left>
                    <top>8</top>
                    <width>1240</width>
                    <height>698</height>
                    <control type="videowindow">
                        <height>100%</height>
                        <width>100%</width>
                    </control>
                </control>
                <control type="group">
                    <height>125</height>
                    <bottom>15</bottom>
                    <left>30</left>
                    <control type="image">
                        <visible>!Skin.HasSetting(NoClearLogoBingie)</visible>
                        <height>88</height>
                        <width>230</width>
                        <align>left</align>
                        <fadetime>250</fadetime>
                        <aspectratio align="left" aligny="center">keep</aspectratio>
                        <texture background="true" fallback="colors/color_transparent.png">$INFO[Container($PARAM[widgetid]).ListItem.Art(clearlogo)]</texture>
                    </control>
                    <control type="label" id="6114">
                        <top>90</top>
                        <visible>!String.IsEmpty(Control.GetLabel(6114))</visible>
                        <posy>5</posy>
                        <height>35</height>
                        <width>auto</width>
                        <aligny>center</aligny>
                        <font>Reg22</font>
                        <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                        <label>$VAR[YearOrPremieredOrPVR,,    ]$VAR[GetMPAA,,    ]$VAR[DurationOrTotalSECount]</label>
                    </control>
                </control>
            </control>
            <include content="HiddenWidgetButton">
                <onunfocus>ClearProperty(highlightfocus,home)</onunfocus>
                <param name="widgetstyle" value="highlight" />
                <param name="widgetid" value="$PARAM[widgetid]" />
            </include>
        </focusedlayout>
    </include>-->

    <include name="widget_layout_landscape_multi">
        <include condition="String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)" content="height">
            <param name="height" value="950" />
        </include>
        <include condition="![String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)]" content="height">
            <param name="height" value="760" />
        </include>
    </include>
    
    <!-- widget bingie large landscape -->
    <include name="widget_layout_landscapelarge">
        <include condition="$PARAM[multiRows]">widget_layout_landscapelarge_multi</include>
        <height>260</height>
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_landscapelarge_animation</include>
        <itemlayout width="430" height="260">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>430</width>
                <height>260</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape" />
                    </include>
                    <include>New_Episodes_Tag_Overlay</include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout width="430" height="260" condition="Control.HasFocus($PARAM[widgetid])">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>430</width>
                <height>260</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>ThumbsViewLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape" />
                    </include>
                    <include>New_Episodes_Tag_Overlay</include>
                </control>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscapelarge" />
                    <param name="widgetid" value="$PARAM[widgetid]" />
                </include>
            </control>
        </focusedlayout>
        <focusedlayout width="430" height="260" condition="!Control.HasFocus($PARAM[widgetid])">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>430</width>
                <height>260</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape" />
                    </include>
                    <include>New_Episodes_Tag_Overlay</include>
                </control>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_landscapelarge_multi">
        <include condition="String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)" content="height">
            <param name="height" value="1040" />
        </include>
        <include condition="![String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)]" content="height">
            <param name="height" value="780" />
        </include>
    </include>
    
    <!-- landscape details -->
    <include name="widget_layout_landscapedetails">
        <height>210</height>
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_landscapedetails_animation</include>
        <orientation>horizontal</orientation>
        <itemlayout width="366" height="210">
			<control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>354</width>
                <height>200</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape" />
                    </include>
                </control>
            </control>
		</itemlayout>
        <focusedlayout width="1090" height="205" condition="Control.HasFocus($PARAM[widgetid])">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>1078</width>
                <height>200</height>
                <include>widget_layout_landscapelarge_widebox</include>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscapedetails" />
                    <param name="widgetid" value="$PARAM[widgetid]" />
                </include>
            </control>
        </focusedlayout>
		<focusedlayout width="366" height="210" condition="!Control.HasFocus($PARAM[widgetid])">
			<control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>354</width>
                <height>200</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape" />
                    </include>
                </control>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscapedetails" />
                    <param name="widgetid" value="$PARAM[widgetid]" />
                </include>
            </control>
		</focusedlayout>
	</include>
    <include name="widget_layout_landscapelarge_widebox">
        <!-- wide box widget -->
        <control type="group">
            <control type="image">
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
            </control>
            <control type="image">
                <texture border="5">diffuse/thinborder.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsBorderFocusColor)]</colordiffuse>
            </control>
            <!-- poster image -->
            <control type="group">
                <width>354</width>
                <height>200</height>
                <include>ThumbsViewLayout</include>
            </control>
            <control type="label">
                <left>370</left>
                <width>70%</width>
                <top>8</top>
                <aligny>top</aligny>
                <height>80</height>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoLabel]</label>
            </control>
            <control type="textbox">
                <left>370</left>
                <right>30</right>
                <top>50</top>
                <height>145</height>
                <font>Reg24</font>
                <align>justify</align>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="!Skin.HasSetting(DisablePlotAutoScroll)" />
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
            </control>
        </control>
    
    </include>
    
    <!-- widget banner layout -->
    <include name="widget_layout_banner">
        <include condition="$EXP[IsVerticalLayout] + ![$PARAM[multiRows]]" content="height">
            <param name="height" value="146" />
        </include>
        <include condition="$EXP[IsVerticalLayout] + [$PARAM[multiRows]] + ![String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)]" content="height">
            <param name="height" value="876" />
        </include>
        <include condition="$EXP[IsVerticalLayout] + [$PARAM[multiRows]] + [String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)]" content="height">
            <param name="height" value="1022" />
        </include>
        <include condition="!$EXP[IsVerticalLayout]" content="height">
            <param name="height" value="126" />
        </include>
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_banner_animation</include>
        <itemlayout height="126" width="610" condition="!$EXP[IsVerticalLayout]">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>598</width>
                <height>120</height>
                <control type="image">
                    <texture border="5">diffuse/banner.png</texture>
                    <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                    <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                    <include>thumbsborder_unfocused</include>
                </control>
                <include>BannerLayout</include>
            </control>
        </itemlayout>
        <focusedlayout height="126" width="610" condition="!$EXP[IsVerticalLayout]">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>598</width>
                <height>120</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <control type="image">
                    <texture border="5">diffuse/banner.png</texture>
                    <colordiffuse>$INFO[Skin.String(HomeViewDetailsBorderFocusColor)]</colordiffuse>
                    <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                    <include>thumbsborder_focused</include>
                </control>
                <include>BannerLayout</include>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="banner"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
        <itemlayout height="146" width="650" condition="$EXP[IsVerticalLayout]">
            <control type="image">
                <texture border="5">diffuse/banner.png</texture>
                <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                <include>thumbsborder_unfocused</include>
            </control>
            <include>BannerLayout</include>
        </itemlayout>
        <focusedlayout height="146" width="650" condition="$EXP[IsVerticalLayout]">
            <control type="group">
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <control type="image">
                    <texture border="5">diffuse/banner.png</texture>
                    <colordiffuse>$INFO[Skin.String(HomeViewDetailsBorderFocusColor)]</colordiffuse>
                    <aspectratio scalediffuse="false" align="left">stretch</aspectratio>
                    <include>thumbsborder_focused</include>
                </control>
                <include>BannerLayout</include>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="banner"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    
    <!-- widget landscapesmall layout -->
    <include name="widget_layout_landscapesmall">
        <include condition="$PARAM[multiRows]">widget_layout_landscapesmall_multi</include>
        <height>148</height>
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_landscapesmall_animation</include>
        <itemlayout width="262" height="148" condition="!$EXP[IsVerticalLayout]">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>99%</width>
                <height>100%</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlaySmall</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout width="262" height="148" condition="!$EXP[IsVerticalLayout] + Control.HasFocus($PARAM[widgetid])">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>99%</width>
                <height>100%</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>ThumbsViewLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlaySmall</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscapesmall"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
        <focusedlayout width="262" height="148" condition="!$EXP[IsVerticalLayout] + !Control.HasFocus($PARAM[widgetid])">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>99%</width>
                <height>100%</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlaySmall</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
            </control>
        </focusedlayout>
        <itemlayout width="261" height="148" condition="$EXP[IsVerticalLayout]">
            <control type="group">
                <width>99%</width>
                <height>100%</height>
                <include>ThumbsViewLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlaySmall</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout width="261" height="148" condition="$EXP[IsVerticalLayout]">
            <control type="group">
                <width>99%</width>
                <height>100%</height>
                <animation effect="zoom" center="auto" start="100" end="105" time="160" tween="quadratic" condition="Skin.HasSetting(WidgetsZoomFocus)">Focus</animation>
                <include>ThumbsViewLayoutFocus</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlaySmall</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="Landscape"/>
                    </include>
                </control>
                <include content="HiddenWidgetButton">
                    <param name="widgetstyle" value="landscapesmall"/>
                    <param name="widgetid" value="$PARAM[widgetid]"/>
                </include>
            </control>
        </focusedlayout>
    </include>
    <include name="widget_layout_landscapesmall_multi">
        <include condition="String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)" content="height">
            <param name="height" value="1036" />
        </include>
        <include condition="![String.IsEqual(Skin.AspectRatio,16:10) + Skin.HasSetting(VerticalHomeLargeWidget)]" content="height">
            <param name="height" value="740" />
        </include>
    </include>
    
    <!-- widget singlebox layout -->
    <include name="widget_layout_singlebox">
        <height>340</height>
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_singlebox_animation</include>
        <itemlayout height="340" width="1820" condition="!$EXP[IsVerticalLayout]">
            <include>itemlayout_singlebox</include>
        </itemlayout>
        <focusedlayout height="340" width="1820" condition="!$EXP[IsVerticalLayout]">
            <include content="HiddenWidgetButton">
                <param name="widgetstyle" value="singlebox"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <control type="image">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <include condition="Skin.HasSetting(WidgetAlignRight)">widget_layout_singlebox_rightalign</include>
                <bordersize>0</bordersize>
                <height>330</height>
                <width>940</width>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
                <visible>Control.HasFocus($PARAM[widgetid])</visible>
            </control>
            <include content="itemlayout_singlebox">
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
        </focusedlayout>
        
        <itemlayout height="340" width="1302" condition="$EXP[IsVerticalLayout] + !Skin.HasSetting(VerticalHomeLargeWidget)">
            <include>itemlayout_singlebox</include>
        </itemlayout>
        <focusedlayout height="340" width="1302" condition="$EXP[IsVerticalLayout] + !Skin.HasSetting(VerticalHomeLargeWidget)">
            <include content="HiddenWidgetButton">
                <param name="widgetstyle" value="singlebox"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <control type="image">
                <include condition="Skin.HasSetting(WidgetAlignRight)">widget_layout_singlebox_rightalign</include>
                <bordersize>0</bordersize>
                <height>330</height>
                <width>940</width>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
                <visible>Control.HasFocus($PARAM[widgetid])</visible>
            </control>
            <include content="itemlayout_singlebox">
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
        </focusedlayout>
    
        <itemlayout height="340" width="1440" condition="$EXP[IsVerticalLayout] + Skin.HasSetting(VerticalHomeLargeWidget)">
            <include>itemlayout_singlebox</include>
        </itemlayout>
        <focusedlayout height="340" width="1440" condition="$EXP[IsVerticalLayout] + Skin.HasSetting(VerticalHomeLargeWidget)">
            <include content="HiddenWidgetButton">
                <param name="widgetstyle" value="singlebox"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <control type="image">
                <include condition="Skin.HasSetting(WidgetAlignRight)">widget_layout_singlebox_rightalign</include>
                <bordersize>0</bordersize>
                <height>330</height>
                <width>940</width>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
                <visible>Control.HasFocus($PARAM[widgetid])</visible>
            </control>
            <include content="itemlayout_singlebox">
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
        </focusedlayout>
    
    </include>
    <include name="itemlayout_singlebox">
        <!-- single box widget -->
        <control type="group">
            <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                <param name="left" value="bingie_no_circular_posx"/>
            </include>
            <height>330</height>
            <width>940</width>
            <include condition="Skin.HasSetting(WidgetAlignRight)">widget_layout_singlebox_rightalign</include>
            <control type="image">
                <bordersize>4</bordersize>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
            </control>
            <control type="image">
                <texture border="5">diffuse/thinborder.png</texture>
                <colordiffuse>darkgrey</colordiffuse>
                <bordersize>4</bordersize>
                <visible>Skin.HasTheme(skindefault)</visible>
            </control>
            <!-- poster image -->
            <control type="image">
                <width>240</width>
                <height>329</height>
                <texture border="1" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$VAR[PosterThumbList]</texture>
                <aspectratio scalediffuse="true" aligny="top" align="left">keep</aspectratio>
                <bordersize>12</bordersize>
            </control>
            <control type="label">
                <left>251</left>
                <top>0</top>
                <width>650</width>
                <aligny>center</aligny>
                <height>60</height>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoLabel]</label>
            </control>
            <control type="textbox">
                <!--description with mediaflags present -->
                <visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
                <left>251</left>
                <width>650</width>
                <top>60</top>
                <bottom>70</bottom>
                <font>Reg24</font>
                <align>justify</align>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="!Skin.HasSetting(DisablePlotAutoScroll)"/>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
            </control>
            <control type="textbox">
                <!--description with no mediaflags -->
                <visible>String.IsEmpty(ListItem.VideoCodec)</visible>
                <left>251</left>
                <width>650</width>
                <top>60</top>
                <bottom>17</bottom>
                <font>Reg24</font>
                <align>justify</align>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="!Skin.HasSetting(DisablePlotAutoScroll)"/>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
            </control>
            <control type="group">
                <height>36</height>
                <left>251</left>
                <bottom>10</bottom>
                <control type="label">
                    <font>flags</font>
                    <width>auto</width>
                    <height>30</height>
                    <visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
                    <label>$VAR[VideoFileTypeVar,, • ]$VAR[VideoCodecVar,, • ]$VAR[VideoAspectVar,, • ]$VAR[VideoResolutionVar,, • ]$VAR[AudioCodecVar,, • ]$VAR[AudioChannelsVar]$VAR[AudioLanguageVar, • ]</label>
                    <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                </control>
            </control>
            <control type="group">
                <!--Watched Overlay-->
                <right>8</right>
                <top>8</top>
                <animation effect="slide" end="-2,2" time="0" condition="!Skin.HasTheme(skindefault)">Conditional</animation>
                <include content="WatchedIndicatorLayout">
                    <param name="width" value="80"/>
                    <param name="height" value="80"/>
                    <param name="font" value="indicator_normal"/>
                    <param name="labeloffsetx" value="-30"/>
                    <param name="labeloffsety" value="-4"/>
                    <param name="overlay" value="normal"/>
                    <param name="overlay_texture" value="diffuse/icon_overlay_landscape.png"/>
                </include>
            </control>
        </control>
    </include>
    <include name="widget_layout_singlebox_rightalign">
        <right>0</right>
    </include>
    
    <!-- widget widebox layout -->
    <include name="widget_layout_widebox">
        <height>265</height>
        <include condition="String.IsEmpty(Window(Home).Property(bingieviews))">widget_layout_widebox_animation</include>
        <itemlayout height="265" width="1820" condition="!$EXP[IsVerticalLayout]">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>1808</width>
                <height>255</height>
                <include>itemlayout_widebox</include>
            </control>
        </itemlayout>
        <itemlayout height="265" width="1300" condition="$EXP[IsVerticalLayout]">
            <include>itemlayout_widebox</include>
        </itemlayout>
        <focusedlayout height="265" width="1820" condition="!$EXP[IsVerticalLayout]">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>1808</width>
                <height>255</height>
                <include>itemlayout_widebox_focus</include>
            </control>
        </focusedlayout>
         <focusedlayout height="265" width="1300" condition="$EXP[IsVerticalLayout]">
            <include>itemlayout_widebox_focus</include>
        </focusedlayout>
    </include>
    <include name="itemlayout_widebox">
        <!-- wide box widget -->
        <control type="group">
            <height>255</height>
            <control type="image">
                <bordersize>4</bordersize>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
            </control>
            <control type="image">
                <texture border="5">diffuse/thinborder.png</texture>
                <colordiffuse>darkgrey</colordiffuse>
                <bordersize>4</bordersize>
                <visible>Skin.HasTheme(skindefault)</visible>
            </control>
            <!-- poster image -->
            <control type="image">
                <width>190</width>
                <height>100%</height>
                <texture border="1" background="true" diffuse="diffuse/poster.png" fallback="DefaultVideo.png">$VAR[PosterThumbList]</texture>
                <aspectratio scalediffuse="true" aligny="top" align="left">keep</aspectratio>
                <bordersize>12</bordersize>
            </control>
            <control type="label">
                <left>200</left>
                <width>70%</width>
                <top>12</top>
                <aligny>top</aligny>
                <height>80</height>
                <font>Reg30</font>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoLabel]</label>
            </control>
            <control type="textbox">
                <left>200</left>
                <right>30</right>
                <top>60</top>
                <height>145</height>
                <font>Reg24</font>
                <align>justify</align>
                <autoscroll delay="4000" time="3000" repeat="10000" condition="!Skin.HasSetting(DisablePlotAutoScroll)"/>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
            </control>
            <control type="group">
                <!--Watched Overlay-->
                <right>8</right>
                <top>8</top>
                <animation effect="slide" end="-2,2" time="0" condition="!Skin.HasTheme(skindefault)">Conditional</animation>
                <include content="WatchedIndicatorLayout">
                    <param name="width" value="80"/>
                    <param name="height" value="80"/>
                    <param name="font" value="indicator_normal"/>
                    <param name="labeloffsetx" value="-30"/>
                    <param name="labeloffsety" value="-4"/>
                    <param name="overlay" value="normal"/>
                    <param name="overlay_texture" value="diffuse/icon_overlay_landscape.png"/>
                </include>
            </control>
        </control>
    </include>
    <include name="itemlayout_widebox_focus">
        <include content="HiddenWidgetButton">
                <param name="widgetstyle" value="widebox"/>
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <control type="image">
            <bordersize>0</bordersize>
            <texture border="15">diffuse/bgpanel.png</texture>
            <colordiffuse>$VAR[ViewDetailsFocusColor]</colordiffuse>
        </control>
        <include>itemlayout_widebox</include>
    </include>

    <include name="widget_header_multi">
        <control type="group" id="20$PARAM[widgetid]">
            <visible>Container($PARAM[widgetid]).IsUpdating | Integer.IsGreater(Container($PARAM[widgetid]).NumItems,0)</visible>
            <include condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">BingieNoCircularWidgetHeaderAnim</include>
            <include content="BingieUnfocusedWidgetFade" condition="String.IsEqual(Skin.String(HomeLayout),bingie)">
                <param name="widgetid" value="$PARAM[widgetid]" />
            </include>
            <width>100%</width>
            <height>40</height>
            <!-- fixed focus navigation -->
            <include content="SetFixedVerticalNavigationProps" condition="String.IsEqual(Skin.String(HomeLayout),bingie)">
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <include content="Fixed_Focus_Navigation_Factory" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + Skin.HasSetting(EnableFixedFocusWidgets)">
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
            <visible>String.IsEqual(Container(900).ListItem.Property(submenuVisibility),$PARAM[submenuid]) | Skin.HasSetting(ShowAllWidgets)</visible>
            <control type="image">
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>$INFO[Skin.String(ViewDetailsPanelColor)]</colordiffuse>
                <visible>!Skin.HasSetting(HideWidgetPanelBackground) + String.IsEqual(Skin.String(HomeLayout),bingie)</visible>
            </control>
            <control type="textbox">
                <height>96%</height>
                <width>99%</width>
                <font>Reg29</font>
                <include condition="Skin.HasSetting(WidgetAlignRight)">widget_header_rightalign</include>
                <include condition="!Skin.HasSetting(WidgetAlignRight)">widget_header_leftalign</include>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                <label>[B]$PARAM[widgetName][/B]</label>
                <animation effect="slide" end="50" time="0" condition="Container($PARAM[widgetid]).IsUpdating + Integer.IsEqual(Container($PARAM[widgetid]).NumItems,0) + !Skin.HasSetting(WidgetAlignRight)">Conditional</animation>
                <animation effect="slide" end="-50" time="0" condition="Container($PARAM[widgetid]).IsUpdating + Integer.IsEqual(Container($PARAM[widgetid]).NumItems,0) + Skin.HasSetting(WidgetAlignRight)">Conditional</animation>
                <visible>String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(similartitle)) + String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(genretitle))</visible>
            </control>
            <control type="textbox">
                <height>96%</height>
                <width>99%</width>
                <font>Reg29</font>
                <include condition="Skin.HasSetting(WidgetAlignRight)">widget_header_rightalign</include>
                <include condition="!Skin.HasSetting(WidgetAlignRight)">widget_header_leftalign</include>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                <label>[B]$INFO[Container($PARAM[widgetid]).ListItem.Property(similartitle),$LOCALIZE[31543] ,]$INFO[Container($PARAM[widgetid]).ListItem.Property(genretitle)][/B]</label>
                <animation effect="slide" end="50" time="0" condition="Container($PARAM[widgetid]).IsUpdating + Integer.IsEqual(Container($PARAM[widgetid]).NumItems,0) + !Skin.HasSetting(WidgetAlignRight)">Conditional</animation>
                <animation effect="slide" end="-50" time="0" condition="Container($PARAM[widgetid]).IsUpdating + Integer.IsEqual(Container($PARAM[widgetid]).NumItems,0) + Skin.HasSetting(WidgetAlignRight)">Conditional</animation>
                <visible>!String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(similartitle)) | !String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(genretitle))</visible>
            </control>
            <control type="multiimage">
                <width>100%</width>
                <height>30</height>
                <top>7</top>
                <include condition="Skin.HasSetting(WidgetAlignRight)">widget_header_rightalign</include>
                <include condition="!Skin.HasSetting(WidgetAlignRight)">widget_header_leftalign</include>
                <aspectratio align="left">keep</aspectratio>
                <imagepath background="true">$VAR[WidgetBusySpinnerPath]</imagepath>
                <timeperimage>85</timeperimage>
                <colordiffuse>$INFO[Skin.String(WidgetSpinnerTexture.Color)]</colordiffuse>
                <fadetime>0</fadetime>
                <visible>Container($PARAM[widgetid]).IsUpdating + Integer.IsEqual(Container($PARAM[widgetid]).NumItems,0)</visible>
            </control>
        </control>
    </include>
    <include name="widget_header_single">
        <control type="radiobutton" id="$PARAM[mainmenuid]505">
            <include condition="String.IsEqual(Skin.String(HomeLayout),enhanced)">widget_header_enhancedhome</include>
            <include content="textoffsetx" condition="!Skin.HasSetting(WidgetAlignRight) + String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                <param name="textoffsetx" value="bingie_no_circular_posx" />
            </include>
            <include condition="!Skin.HasSetting(WidgetAlignRight)">widget_single_header_leftalign</include>
            <include condition="Skin.HasSetting(WidgetAlignRight) + !String.IsEqual(Skin.String(HomeLayout),enhanced)">widget_header_rightalign</include>
            <include condition="![String.IsEqual(Skin.String(HomeLayout),bingie) | $EXP[IsVerticalLayout] | String.IsEqual(Skin.String(HomeLayout),enhanced)]">widget_header_single_fade</include>
            <width>100%</width>
            <height>50</height>
            <align>left</align>
            <aligny>top</aligny>
            <font>Reg32</font>
            <textoffsetx>5</textoffsetx>
            <label>$VAR[widgetlabel-$PARAM[mainmenuid]]</label>
            <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
            <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
            <onfocus>SetProperty(ShowWidget,1,home)</onfocus>
            
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],0) + $PARAM[hasWidget1] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle2])">SetProperty(widgetstyle,$PARAM[widgetStyle2])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],1) + $PARAM[hasWidget2] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle3])">SetProperty(widgetstyle,$PARAM[widgetStyle3])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],1) + !$PARAM[hasWidget2] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle1])">SetProperty(widgetstyle,$PARAM[widgetStyle1])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],2) + $PARAM[hasWidget3] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle4])">SetProperty(widgetstyle,$PARAM[widgetStyle4])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],2) + !$PARAM[hasWidget3] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle1])">SetProperty(widgetstyle,$PARAM[widgetStyle1])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],3) + $PARAM[hasWidget4] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle5])">SetProperty(widgetstyle,$PARAM[widgetStyle5])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],3) + !$PARAM[hasWidget4] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle1])">SetProperty(widgetstyle,$PARAM[widgetStyle1])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],4) + $PARAM[hasWidget5] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle6])">SetProperty(widgetstyle,$PARAM[widgetStyle6])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],4) + !$PARAM[hasWidget5] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle1])">SetProperty(widgetstyle,$PARAM[widgetStyle1])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],5) + $PARAM[hasWidget6] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle7])">SetProperty(widgetstyle,$PARAM[widgetStyle7])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],5) + !$PARAM[hasWidget6] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle1])">SetProperty(widgetstyle,$PARAM[widgetStyle1])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],6) + $PARAM[hasWidget7] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle8])">SetProperty(widgetstyle,$PARAM[widgetStyle8])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],6) + !$PARAM[hasWidget7] + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle1])">SetProperty(widgetstyle,$PARAM[widgetStyle1])</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],7) + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle1])">SetProperty(widgetstyle,$PARAM[widgetStyle1])</onclick>
            
            <onclick condition="[Skin.String(widgetvalue-$PARAM[submenuid],0) | !Skin.String(widgetvalue-$PARAM[submenuid])] + $PARAM[hasWidget1]">Skin.SetString(widgetvalue-$PARAM[submenuid],1)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],1) + $PARAM[hasWidget2]">Skin.SetString(widgetvalue-$PARAM[submenuid],2)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],1) + !$PARAM[hasWidget2]">Skin.SetString(widgetvalue-$PARAM[submenuid],0)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],2) + $PARAM[hasWidget3]">Skin.SetString(widgetvalue-$PARAM[submenuid],3)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],2) + !$PARAM[hasWidget3]">Skin.SetString(widgetvalue-$PARAM[submenuid],0)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],3) + $PARAM[hasWidget4]">Skin.SetString(widgetvalue-$PARAM[submenuid],4)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],3) + !$PARAM[hasWidget4]">Skin.SetString(widgetvalue-$PARAM[submenuid],0)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],4) + $PARAM[hasWidget5]">Skin.SetString(widgetvalue-$PARAM[submenuid],5)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],4) + !$PARAM[hasWidget5]">Skin.SetString(widgetvalue-$PARAM[submenuid],0)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],5) + $PARAM[hasWidget6]">Skin.SetString(widgetvalue-$PARAM[submenuid],6)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],5) + !$PARAM[hasWidget6]">Skin.SetString(widgetvalue-$PARAM[submenuid],0)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],6) + $PARAM[hasWidget7]">Skin.SetString(widgetvalue-$PARAM[submenuid],7)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],6) + !$PARAM[hasWidget7]">Skin.SetString(widgetvalue-$PARAM[submenuid],0)</onclick>
            <onclick condition="Skin.String(widgetvalue-$PARAM[submenuid],7)">Skin.SetString(widgetvalue-$PARAM[submenuid],0)</onclick>
            
            <onfocus condition="Skin.String(widgetvalue-$PARAM[submenuid],0) + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle1])">SetProperty(widgetstyle,$PARAM[widgetStyle1])</onfocus>
            <onfocus condition="Skin.String(widgetvalue-$PARAM[submenuid],1) + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle2])">SetProperty(widgetstyle,$PARAM[widgetStyle2])</onfocus>
            <onfocus condition="Skin.String(widgetvalue-$PARAM[submenuid],2) + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle3])">SetProperty(widgetstyle,$PARAM[widgetStyle3])</onfocus>
            <onfocus condition="Skin.String(widgetvalue-$PARAM[submenuid],3) + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle4])">SetProperty(widgetstyle,$PARAM[widgetStyle4])</onfocus>
            <onfocus condition="Skin.String(widgetvalue-$PARAM[submenuid],4) + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle5])">SetProperty(widgetstyle,$PARAM[widgetStyle5])</onfocus>
            <onfocus condition="Skin.String(widgetvalue-$PARAM[submenuid],5) + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle6])">SetProperty(widgetstyle,$PARAM[widgetStyle6])</onfocus>
            <onfocus condition="Skin.String(widgetvalue-$PARAM[submenuid],6) + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle7])">SetProperty(widgetstyle,$PARAM[widgetStyle7])</onfocus>
            <onfocus condition="Skin.String(widgetvalue-$PARAM[submenuid],7) + !Skin.String(CompareTxtDefault,$PARAM[widgetStyle8])">SetProperty(widgetstyle,$PARAM[widgetStyle8])</onfocus>
            <include content="WidgetProperties">
                <param name="widgetid" value="0" />
            </include>
            <texturenofocus/>
            <radiowidth>40</radiowidth>
            <radioheight>40</radioheight>
            <radioposx>0</radioposx>
            <radioposy>0</radioposy>
            <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">home/home_arrow_up.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(ViewDetailsTextColor)]">home/home_arrow_up.png</textureradionofocus>
            <selected>Control.HasFocus($PARAM[mainmenuid]505)</selected>
            <visible>String.IsEqual(Container(900).ListItem.Property(submenuVisibility),$PARAM[submenuid]) | Skin.HasSetting(ShowAllWidgets)</visible>
        </control>
        <control type="group" id="$PARAM[mainmenuid]905">
            <height>1</height>
            <width>100%</width>
            <visible>String.IsEqual(Container(900).ListItem.Property(submenuVisibility),$PARAM[submenuid]) | Skin.HasSetting(ShowAllWidgets)</visible>
            <animation effect="slide" delay="0" start="0" end="0,150" time="0" condition="String.Contains(Skin.String(HomeLayout),horizontal) + Skin.HasSetting(AutoShowWidgets) + String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <control type="multiimage">
                <top>40</top>
                <left>10</left>
                <width>98%</width>
                <height>80</height>
                <include content="textoffsetx" condition="!Skin.HasSetting(WidgetAlignRight) + String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="textoffsetx" value="bingie_no_circular_posx" />
                </include>
                <include condition="!Skin.HasSetting(WidgetAlignRight)">widget_single_header_leftalign</include>
                <include condition="Skin.HasSetting(WidgetAlignRight) + !String.IsEqual(Skin.String(HomeLayout),enhanced)">widget_header_rightalign</include>
                <aspectratio align="left">keep</aspectratio>
                <imagepath background="true">$VAR[WidgetBusySpinnerPath]</imagepath>
                <timeperimage>85</timeperimage>
                <colordiffuse>$INFO[Skin.String(WidgetSpinnerTexture.Color)]</colordiffuse>
                <fadetime>0</fadetime>
                <visible>
                    [Skin.String(widgetvalue-$PARAM[submenuid],7) + Container($PARAM[mainmenuid]580).IsUpdating] | 
                    [Skin.String(widgetvalue-$PARAM[submenuid],6) + Container($PARAM[mainmenuid]570).IsUpdating] | 
                    [Skin.String(widgetvalue-$PARAM[submenuid],5) + Container($PARAM[mainmenuid]560).IsUpdating] | 
                    [Skin.String(widgetvalue-$PARAM[submenuid],4) + Container($PARAM[mainmenuid]550).IsUpdating] | 
                    [Skin.String(widgetvalue-$PARAM[submenuid],3) + Container($PARAM[mainmenuid]540).IsUpdating] | 
                    [Skin.String(widgetvalue-$PARAM[submenuid],2) + Container($PARAM[mainmenuid]530).IsUpdating] | 
                    [Skin.String(widgetvalue-$PARAM[submenuid],1) + Container($PARAM[mainmenuid]520).IsUpdating] | 
                    [Skin.String(widgetvalue-$PARAM[submenuid],0) + Container($PARAM[mainmenuid]510).IsUpdating] | 
                    [!Skin.String(widgetvalue-$PARAM[submenuid]) + Container($PARAM[mainmenuid]510).IsUpdating]
                </visible>
            </control>
        </control>
    </include>
    <include name="widget_header_rightalign">
        <align>right</align>
        <textoffsetx>60</textoffsetx>
        <aspectratio align="right">keep</aspectratio>
    </include>
    <include name="widget_header_leftalign">
        <include content="left">
            <param name="left" value="65" />
        </include>
    </include>
    <include name="widget_single_header_leftalign">
        <include content="textoffsetx">
            <param name="textoffsetx" value="65" />
        </include>
    </include>
    <include name="widget_header_enhancedhome">
        <font>Reg26</font>
        <align>left</align>
        <aligny>center</aligny>
        <textoffsetx>0</textoffsetx>
        <textureradiofocus/>
        <textureradionofocus/>
        <width>337</width>
    </include>
    <include name="widget_header_single_fade">
        <animation effect="fade" delay="0" start="100" end="0" time="0" condition="String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
        <animation effect="fade" delay="0" start="0" end="100" time="200" condition="!String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
    </include>

    <include name="widget_base">
        <!-- bingie + circular + fixed -->
        <include content="widget_base_normal" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + Skin.HasSetting(EnhancedHome_Circular) + Skin.HasSetting(EnableFixedFocusWidgets)">
            <param name="containerType" value="wraplist" />
            <param name="contentStyle" value="$PARAM[contentStyle]" />
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="submenuid" value="$PARAM[submenuid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
            <param name="widgetTarget" value="$PARAM[widgetTarget]" />
            <param name="widgetPath" value="$PARAM[widgetPath]" />
            <param name="widgetSortBy" value="$PARAM[widgetSortBy]" />
            <param name="widgetSortOrder" value="$PARAM[widgetSortOrder]" />
            <param name="widgetLimit" value="$PARAM[widgetLimit]" />
            <param name="widgetStyle" value="widget_layout_default" />
            <param name="visibility" value="$PARAM[visibility]" />
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <!-- bingie + circular + not fixed -->
        <include content="widget_base_normal" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + Skin.HasSetting(EnhancedHome_Circular) + !Skin.HasSetting(EnableFixedFocusWidgets)">
            <param name="containerType" value="wraplist" />
            <param name="contentStyle" value="$PARAM[contentStyle]" />
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="submenuid" value="$PARAM[submenuid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
            <param name="widgetTarget" value="$PARAM[widgetTarget]" />
            <param name="widgetPath" value="$PARAM[widgetPath]" />
            <param name="widgetSortBy" value="$PARAM[widgetSortBy]" />
            <param name="widgetSortOrder" value="$PARAM[widgetSortOrder]" />
            <param name="widgetLimit" value="$PARAM[widgetLimit]" />
            <param name="widgetStyle" value="$PARAM[widgetStyle]" />
            <param name="visibility" value="$PARAM[visibility]" />
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <!-- bingie + not circular + not fixed -->
        <include content="widget_base_normal" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular) + !Skin.HasSetting(EnableFixedFocusWidgets)">
            <param name="containerType" value="fixedlist" />
            <param name="contentStyle" value="$PARAM[contentStyle]" />
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="submenuid" value="$PARAM[submenuid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
            <param name="widgetTarget" value="$PARAM[widgetTarget]" />
            <param name="widgetPath" value="$PARAM[widgetPath]" />
            <param name="widgetSortBy" value="$PARAM[widgetSortBy]" />
            <param name="widgetSortOrder" value="$PARAM[widgetSortOrder]" />
            <param name="widgetLimit" value="$PARAM[widgetLimit]" />
            <param name="widgetStyle" value="$PARAM[widgetStyle]" />
            <param name="visibility" value="$PARAM[visibility]" />
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <!-- bingie + not circular + fixed -->
        <include content="widget_base_normal" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular) + Skin.HasSetting(EnableFixedFocusWidgets)">
            <param name="containerType" value="fixedlist" />
            <param name="contentStyle" value="$PARAM[contentStyle]" />
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="submenuid" value="$PARAM[submenuid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
            <param name="widgetTarget" value="$PARAM[widgetTarget]" />
            <param name="widgetPath" value="$PARAM[widgetPath]" />
            <param name="widgetSortBy" value="$PARAM[widgetSortBy]" />
            <param name="widgetSortOrder" value="$PARAM[widgetSortOrder]" />
            <param name="widgetLimit" value="$PARAM[widgetLimit]" />
            <param name="widgetStyle" value="$PARAM[widgetStyle]" />
            <param name="visibility" value="$PARAM[visibility]" />
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_base_normal" condition="![String.IsEqual(Skin.String(HomeLayout),win10) | String.IsEqual(Skin.String(HomeLayout),enhanced) | String.IsEqual(Skin.String(HomeLayout),bingie)]">
            <param name="containerType" value="$PARAM[containerType]" />
            <param name="contentStyle" value="$PARAM[contentStyle]" />
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="submenuid" value="$PARAM[submenuid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
            <param name="widgetTarget" value="$PARAM[widgetTarget]" />
            <param name="widgetPath" value="$PARAM[widgetPath]" />
            <param name="widgetStyle" value="$PARAM[widgetStyle]" />
            <param name="widgetSortBy" value="$PARAM[widgetSortBy]" />
            <param name="widgetSortOrder" value="$PARAM[widgetSortOrder]" />
            <param name="widgetLimit" value="$PARAM[widgetLimit]" />
            <param name="visibility" value="$PARAM[visibility]" />
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_base_enhanced" condition="String.IsEqual(Skin.String(HomeLayout),enhanced)">
            <param name="containerType" value="$PARAM[containerType]" />
            <param name="contentStyle" value="$PARAM[contentStyle]" />
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="submenuid" value="$PARAM[submenuid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
            <param name="widgetTarget" value="$PARAM[widgetTarget]" />
            <param name="widgetPath" value="$PARAM[widgetPath]" />
            <param name="widgetStyle" value="$PARAM[widgetStyle]" />
            <param name="widgetSortBy" value="$PARAM[widgetSortBy]" />
            <param name="widgetSortOrder" value="$PARAM[widgetSortOrder]" />
            <param name="widgetLimit" value="$PARAM[widgetLimit]" />
            <param name="visibility" value="$PARAM[visibility]" />
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
        <include content="widget_base_win10" condition="String.IsEqual(Skin.String(HomeLayout),win10)">
            <param name="containerType" value="$PARAM[containerType]" />
            <param name="contentStyle" value="$PARAM[contentStyle]" />
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetName" value="$PARAM[widgetName]" />
            <param name="submenuid" value="$PARAM[submenuid]" />
            <param name="widgetTags" value="$PARAM[widgetTags]" />
            <param name="widgetTarget" value="$PARAM[widgetTarget]" />
            <param name="widgetPath" value="$PARAM[widgetPath]" />
            <param name="widgetStyle" value="$PARAM[widgetStyle]" />
            <param name="widgetSortBy" value="$PARAM[widgetSortBy]" />
            <param name="widgetSortOrder" value="$PARAM[widgetSortOrder]" />
            <param name="widgetLimit" value="$PARAM[widgetLimit]" />
            <param name="widgetInfoPanel" value="$PARAM[widgetInfoPanel]" />
            <param name="visibility" value="$PARAM[visibility]" />
            <param name="multiRows" value="$PARAM[multiRows]" />
        </include>
    </include>

    <include name="widget_base_win10">
        <include content="HomeWin10SpotlightPanel" condition="Skin.String(CompareTxtTop, $PARAM[widgetInfoPanel]) | Skin.String(CompareTxtBottom, $PARAM[widgetInfoPanel])">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="position" value="$PARAM[widgetInfoPanel]" />
        </include>
        <control type="group" id="$PARAM[widgetid]5">
            <description>Heading</description>
            <width>1</width>
            <height>1</height>
            <animation effect="slide" end="13,-50" time="0" condition="true">Conditional</animation>
            <visible>Control.IsVisible($PARAM[widgetid])</visible>
            <control type="label">
                <height>40</height>
                <width>690</width>
                <font>Reg28</font>
                <align>left</align>
                <aligny>top</aligny>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <label>$PARAM[widgetName]</label>
                <visible>String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(similartitle)) + String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(genretitle))</visible>
            </control>
            <control type="label">
                <height>40</height>
                <width>690</width>
                <font>Reg28</font>
                <align>left</align>
                <aligny>top</aligny>
                <textcolor>$INFO[Skin.String(HeaderTextColor)]</textcolor>
                <label>[B]$INFO[Container($PARAM[widgetid]).ListItem.Property(similartitle),$LOCALIZE[31543] ,]$INFO[Container($PARAM[widgetid]).ListItem.Property(genretitle)][/B]</label>
                <visible>!String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(similartitle)) | !String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(genretitle))</visible>
            </control>
            <control type="multiimage" id="$PARAM[widgetid]7">
                <width>650</width>
                <height>90</height>
                <top>200</top>
                <aspectratio align="center">keep</aspectratio>
                <imagepath background="true">$VAR[WidgetBusySpinnerPath]</imagepath>
                <timeperimage>85</timeperimage>
                <colordiffuse>$INFO[Skin.String(WidgetSpinnerTexture.Color)]</colordiffuse>
                <fadetime>0</fadetime>
                <visible>Container($PARAM[widgetid]).IsUpdating</visible>
            </control>
        </control>
        <control type="panel" id="$PARAM[widgetid]">
            <description>Widget</description>
            <focusposition>0</focusposition>
            <width>690</width>
            <animation effect="slide" end="0,440" time="0" condition="Skin.String(CompareTxtTop, $PARAM[widgetInfoPanel])">Conditional</animation>
            <include condition="Skin.String(CompareTxtDisable, $PARAM[widgetInfoPanel])">widget_base_win10_altheight</include>
            <include condition="Skin.String(CompareTxtLarge, $PARAM[widgetInfoPanel])">widget_base_win10_altheight</include>
            <height>440</height>
            <oninfo>Action(info)</oninfo>
            <orientation>vertical</orientation>
            <animation condition="!Control.HasFocus($PARAM[widgetid]) + Skin.HasSetting(Widgets_Animation)" reversible="false" type="Visible">
                <effect center="960,540" delay="280" easing="in" end="100" start="98" time="180" tween="sine" type="zoom"/>
                <effect delay="280" easing="in" end="0,0" start="0,40" time="180" tween="sine" type="slide"/>
                <effect delay="280" easing="in" end="100" start="0" time="180" tween="sine" type="fade"/>
            </animation>
            <animation time="100" effect="fade" start="0" end="100" reversible="false" easing="inout" condition="!Skin.HasSetting(Widgets_Animation)">Visible</animation>
            <include content="win10_$PARAM[widgetStyle]">
                <param name="widgetid" value="$PARAM[widgetid]" />
                <param name="widgetTags" value="$PARAM[widgetTags]" />
            </include>
            <include content="widget_base_content_$PARAM[contentStyle]">
                <param name="widgetid" value="$PARAM[widgetid]" />
                <param name="submenuid" value="$PARAM[submenuid]" />
                <param name="widgetTarget" value="$PARAM[widgetTarget]" />
                <param name="widgetPath" value="$PARAM[widgetPath]" />
                <param name="widgetSortBy" value="$PARAM[widgetSortBy]" />
                <param name="widgetSortOrder" value="$PARAM[widgetSortOrder]" />
                <param name="widgetLimit" value="$PARAM[widgetLimit]" />
            </include>
            <visible>String.IsEqual(Container(900).ListItem.Property(submenuVisibility),$PARAM[submenuid]) | Skin.HasSetting(ShowAllWidgets)</visible>
            <visible>$PARAM[visibility]</visible>
        </control>
        <include content="HomeWin10SpotlightPanelLarge" condition="Skin.String(CompareTxtLarge, $PARAM[widgetInfoPanel])">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="position" value="$PARAM[widgetInfoPanel]" />
        </include>
    </include>
    <include name="widget_base_win10_altheight">
        <height>880</height>
    </include>
    <include name="widget_base_enhanced">
        <control type="$PARAM[containerType]" id="$PARAM[widgetid]">
            <height>615</height>
            <width>362</width>
            <oninfo>Action(info)</oninfo>
            <orientation>vertical</orientation>
            <focusposition>2</focusposition>
            <scrolltime tween="cubic" easing="inout">500</scrolltime>
            <itemlayout width="350" height="205">
                <control type="group">
                    <width>337</width>
                    <height>195</height>
                    <include>ThumbsViewLayout</include>
                    <control type="group">
                        <description>widget label overlay</description>
                        <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                        <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                        <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                            <param name="prefix" value="Landscape" />
                        </include>
                    </control>
                </control>
            </itemlayout>
            <focusedlayout width="350" height="205">
                <control type="group">
                    <width>337</width>
                    <height>195</height>
                    <include>ThumbsViewLayoutFocus</include>
                    <control type="group">
                        <description>widget label overlay</description>
                        <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                        <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                        <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                            <param name="prefix" value="Landscape" />
                        </include>
                    </control>
                </control>
                <control type="button">
                    <visible>false</visible>
                    <onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[widgetid])</onfocus>
                    <onfocus condition="!Player.HasVideo + Skin.HasSetting(SpotLightTrailers)">RunScript(script.skin.helper.service,ACTION=playtrailer,MODE=windowed,YOUTUBE=$INFO[Skin.String(AutoYoutubeTrailer)],WIDGETCONTAINER=$PARAM[widgetid])</onfocus>
                    <onunfocus condition="Skin.HasSetting(SpotLightTrailers) + !String.IsEmpty(Window(Home).Property(TrailerPlaying)) + !String.IsEqual(Window(Home).Property(TrailerPlaying),fullscreen)">PlayerControl(Stop)</onunfocus>
                    <include content="WidgetProperties">
                        <param name="widgetid" value="$PARAM[widgetid]" />
                    </include>
                </control>
            </focusedlayout>
            <animation condition="!Control.HasFocus(77777) + Skin.HasSetting(Widgets_Animation)" reversible="false" type="Visible">
                <effect center="960,540" delay="280" easing="in" end="100" start="98" time="180" tween="sine" type="zoom"/>
                <effect delay="280" easing="in" end="0,0" start="0,40" time="180" tween="sine" type="slide"/>
                <effect delay="280" easing="in" end="100" start="0" time="180" tween="sine" type="fade"/>
            </animation>
            <animation time="100" effect="fade" start="0" end="100" reversible="false" easing="inout" condition="!Skin.HasSetting(Widgets_Animation)">Visible</animation>
            <include content="widget_base_content_$PARAM[contentStyle]">
                <param name="widgetid" value="$PARAM[widgetid]" />
                <param name="submenuid" value="$PARAM[submenuid]" />
                <param name="widgetTarget" value="$PARAM[widgetTarget]" />
                <param name="widgetPath" value="$PARAM[widgetPath]" />
                <param name="widgetSortBy" value="$PARAM[widgetSortBy]" />
                <param name="widgetSortOrder" value="$PARAM[widgetSortOrder]" />
                <param name="widgetLimit" value="$PARAM[widgetLimit]" />
            </include>
            <visible>String.IsEqual(Container(900).ListItem.Property(submenuVisibility),$PARAM[submenuid])</visible>
            <visible>$PARAM[visibility]</visible>
        </control>
    </include>

    <include name="WidgetBaseBingieIncludes">
        <onunfocus condition="System.HasAlarm(preview_delay)">CancelAlarm(preview_delay,silent)</onunfocus>
        <onunfocus condition="Skin.HasSetting(BingieAutoTrailer) + $EXP[IsPlayingUnrecognizedContent] + String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">PlayerControl(Stop)</onunfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(KeepPlayingPreview))">ClearProperty(KeepPlayingPreview,home)</onfocus>
        <include content="ContainerShowInfoOnclick" condition="Skin.HasSetting(ShowInformationBypass)">
            <param name="widgetid" value="$PARAM[widgetid]" />
        </include>
        <include content="SetFixedVerticalNavigationProps" condition="String.IsEqual(Skin.String(HomeLayout),bingie)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include content="Fixed_Focus_Navigation_Factory" condition="Skin.HasSetting(EnableFixedFocusWidgets)">
            <param name="widgetid" value="$PARAM[widgetid]"/>
        </include>
        <include content="BingieUnfocusedWidgetFade">
            <param name="widgetid" value="$PARAM[widgetid]" />
        </include>
    </include>

    <include name="widget_base_normal">
        <control type="$PARAM[containerType]" id="$PARAM[widgetid]">
            <visible>$PARAM[visibility]</visible>
            <visible>String.IsEqual(Container(900).ListItem.Property(submenuVisibility),$PARAM[submenuid]) | Skin.HasSetting(ShowAllWidgets)</visible>
            <visible>Container($PARAM[widgetid]).IsUpdating | Integer.IsGreater(Container($PARAM[widgetid]).NumItems,0)</visible>
            <include condition="$PARAM[multiRows]">widget_base_vertical</include>
            <orientation>horizontal</orientation>
            <width>100%</width>
            <include>ScrollTime</include>
            <preloaditems>5</preloaditems>
            <include content="WidgetBaseBingieIncludes" condition="String.IsEqual(Skin.String(HomeLayout),bingie)">
                <param name="widgetid" value="$PARAM[widgetid]" />
            </include>
            <include>WidgetsBaseAnimation</include>
            <onfocus>SetProperty(ShowWidget,1,home)</onfocus>
            <include content="$PARAM[widgetStyle]">
                <param name="widgetid" value="$PARAM[widgetid]" />
                <param name="widgetTags" value="$PARAM[widgetTags]" />
                <param name="multiRows" value="$PARAM[multiRows]" />
            </include>
            <include content="widget_base_content_$PARAM[contentStyle]">
                <param name="widgetid" value="$PARAM[widgetid]" />
                <param name="submenuid" value="$PARAM[submenuid]" />
                <param name="widgetTarget" value="$PARAM[widgetTarget]" />
                <param name="widgetPath" value="$PARAM[widgetPath]" />
                <param name="widgetSortBy" value="$PARAM[widgetSortBy]" />
                <param name="widgetSortOrder" value="$PARAM[widgetSortOrder]" />
                <param name="widgetLimit" value="$PARAM[widgetLimit]" />
            </include>
        </control>
    </include>

    <include name="widget_base_vertical">
        <width>102%</width>
        <orientation>vertical</orientation>
    </include>
    
    <include name="widget_base_content_normal">
        <content sortby="$PARAM[widgetSortBy]" sortorder="$PARAM[widgetSortOrder]" limit="$PARAM[widgetLimit]" target="$PARAM[widgetTarget]">$PARAM[widgetPath]</content>
    </include>
    <include name="widget_base_content_refresh">
        <content target="$PARAM[widgetTarget]">$VAR[$PARAM[widgetid]-refresh]</content>
    </include>
    <include name="widget_base_content_submenu">
        <content><include>skinshortcuts-group-$PARAM[submenuid]</include></content>
    </include>
    <include name="widget_base_content_weather">
        <content><include>StaticWidget_Weather</include></content>
    </include>
    <include name="widget_base_content_systeminfo">
        <content><include>StaticWidget_SystemInfo</include></content>
    </include>
    <include name="widget_base_content_rcb">
        <content><include>StaticWidget_RCB</include></content>
    </include>
    <include name="widget_base_content_categories">
        <include>StaticWidget_Categories</include>
    </include>
    <include name="widget_base_content_mylist">
        <content sortby="$PARAM[widgetSortBy]" sortorder="$PARAM[widgetSortOrder]" limit="$PARAM[widgetLimit]" target="$PARAM[widgetTarget]">special://skin/playlists/mylistshows.xsp</content>
        <content sortby="$PARAM[widgetSortBy]" sortorder="$PARAM[widgetSortOrder]" limit="$PARAM[widgetLimit]" target="$PARAM[widgetTarget]">special://skin/playlists/mylistmovies.xsp</content>
    </include>

    <include name="StaticWidget_Categories">
        <content>
            <item id="1">
                <label>$LOCALIZE[342]</label>
                <thumb>bingie/categories/movies.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/</property>
                <onclick>SetProperty(category,movies,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="2">
                <label>$LOCALIZE[20343]</label>
                <thumb>bingie/categories/tvshows.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://tvshows/titles/</property>
                <onclick>SetProperty(category,TV shows,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="3">
                <label>$LOCALIZE[31098]</label>
                <thumb>bingie/categories/topratedtvshows.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">special://skin/playlists/topratedshows.xsp</property>
                <onclick>SetProperty(category,critically-acclaimed tv shows,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="4">
                <label>$LOCALIZE[31532]</label>
                <thumb>bingie/categories/topratedmovies.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">special://skin/playlists/topratedmovies.xsp</property>
                <onclick>SetProperty(category,critically-acclaimed movies,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="5">
                <label>$LOCALIZE[31127]</label>
                <thumb>bingie/categories/recentlyadded.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">special://skin/playlists/recentlyaddedmovies.xsp</property>
                <property name="path2">special://skin/playlists/recentlyaddedshows.xsp</property>
                <onclick>SetProperty(category,recently added,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="6">
                <label>$LOCALIZE[31577]</label>
                <thumb>bingie/categories/newrelease.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">special://skin/playlists/newreleasemovies.xsp</property>
                <property name="path2">special://skin/playlists/newreleaseshows.xsp</property>
                <onclick>SetProperty(category,new release,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="7">
                <label>$LOCALIZE[31563]</label>
                <thumb>bingie/categories/popular.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">special://skin/playlists/blockbustermovies.xsp</property>
                <property name="path2">special://skin/playlists/bingeworthyshows.xsp</property>
                <onclick>SetProperty(category,popular,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="8">
                <label>$LOCALIZE[31193]</label>
                <thumb>bingie/categories/standup.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">special://skin/playlists/standup.xsp</property>
                <onclick>SetProperty(category,stand-up comedy,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="9">
                <label>Drama</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/drama.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22drama%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22drama%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,drama,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="10">
                <label>Science Fiction</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/science fiction.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22fiction%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22fiction%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,science fiction,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="11">
                <label>Action</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/action.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22action%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22action%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,action,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="12">
                <label>Thriller</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/thriller.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22thriller%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22thriller%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,thriller,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="13">
                <label>Crime</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/crime.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22crime%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22crime%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,crime,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="14">
                <label>Comedy</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/comedy.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22comedy%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22comedy%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,comedy,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="15">
                <label>Adventure</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/adventure.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22adventure%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22adventure%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,adventure,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="16">
                <label>Western</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/western.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22western%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22western%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,western,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="17">
                <label>Horror</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/horror.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22horror%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22horror%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,horror,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="18">
                <label>Family</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/family.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22family%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22family%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,family,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="19">
                <label>Animation</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/animation.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22animation%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22animation%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,animation,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="20">
                <label>Mystery</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/mystery.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22mystery%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22mystery%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,mystery,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="21">
                <label>Romance</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/romance.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22romance%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22romance%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,romance,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="22">
                <label>Documentary</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/documentary.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22docu%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22docu%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,documentary,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
            <item id="23">
                <label>Fantasy</label>
                <thumb>resource://resource.images.moviegenreicons.bingie/fantasy.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path">videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22fantasy%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</property>
                <property name="path2">videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22genre%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22fantasy%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D</property>
                <onclick>SetProperty(category,fantasy,home)</onclick>
                <onclick>ActivateWindow(1117,return)</onclick>
            </item>
        </content>
    </include>

    <include name="StaticWidget_SystemInfo">
        <!--systeminfo widgets -->
        <item>
            <label>$LOCALIZE[155]</label>
            <label2>[CR]$INFO[System.UsedSpacePercent]</label2>
            <thumb>resource://resource.images.skinicons.wide/disk2.png</thumb>
            <property name="poster">resource://resource.images.skinicons.wide/disk_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titanium/settings.jpg</property>
            <property name="plot">[CR]$INFO[System.TotalSpace] • $INFO[System.UsedSpace][CR]$INFO[System.HddTemperature]</property>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[13271]</label>
            <label2>[CR]$INFO[System.CpuUsage] • $INFO[System.CpuFrequency]</label2>
            <thumb>resource://resource.images.skinicons.wide/cpu2.png</thumb>
            <property name="poster">resource://resource.images.skinicons.wide/cpu_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titanium/cpu.jpg</property>
            <property name="plot">[CR]$LOCALIZE[401]: $INFO[System.CPUTemperature] • $LOCALIZE[13300]: $INFO[System.FanSpeed][CR]$LOCALIZE[12390]: $INFO[System.Uptime]</property>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[31257]</label>
            <label2>[CR]$INFO[System.Memory(used.percent)]</label2>
            <thumb>resource://resource.images.skinicons.wide/memory2.png</thumb>
            <property name="poster">resource://resource.images.skinicons.wide/memory_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titanium/memory.jpg</property>
            <property name="plot">[CR]$LOCALIZE[22012]: $INFO[System.Memory(total)] • $LOCALIZE[158]: $INFO[System.Memory(free)]</property>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[1006]</label>
            <label2>[CR]$INFO[Network.IPAddress]</label2>
            <thumb>resource://resource.images.skinicons.wide/network2.png</thumb>
            <property name="poster">resource://resource.images.skinicons.wide/network_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titanium/networking.jpg</property>
            <property name="plot">$INFO[Network.LinkState][CR]$LOCALIZE[443]: $INFO[System.InternetState]</property>
            <visible>System.HasNetwork</visible>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[1006]</label>
            <label2>[CR][COLOR red]$LOCALIZE[221][/COLOR]</label2>
            <thumb>resource://resource.images.skinicons.wide/network-down.png</thumb>
            <property name="poster">resource://resource.images.skinicons.wide/network_poster_down.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titanium/networking-down.jpg</property>
            <property name="plot">[COLOR red]$INFO[Network.LinkState][CR]$LOCALIZE[443]: $INFO[System.InternetState][/COLOR]</property>
            <visible>!System.HasNetwork</visible>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[131]</label>
            <label2>[CR]$INFO[System.ScreenWidth]x$INFO[System.ScreenHeight]</label2>
            <thumb>resource://resource.images.skinicons.wide/display2.png</thumb>
            <property name="poster">resource://resource.images.skinicons.wide/display_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titanium/display.jpg</property>
            <property name="plot">[CR]$INFO[System.ScreenResolution]</property>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[12395]</label>
            <label2>[CR][COLOR green]$INFO[System.BatteryLevel][/COLOR]</label2>
            <thumb>resource://resource.images.skinicons.wide/battery_good.png</thumb>
            <property name="poster">resource://resource.images.skinicons.wide/battery_good_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titanium/battery_good.jpg</property>
            <property name="plot">[CR][COLOR green]$LOCALIZE[12395]: $LOCALIZE[12321][/COLOR]</property>
            <visible>Integer.IsGreater(System.BatteryLevel,60)</visible>
            <visible>Skin.HasSetting(SysInfoWidgetShowBattery)</visible>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[12395]</label>
            <label2>[CR][COLOR yellow]$INFO[System.BatteryLevel][/COLOR]</label2>
            <thumb>resource://resource.images.skinicons.wide/battery_low.png</thumb>
            <property name="poster">resource://resource.images.skinicons.wide/battery_low_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titanium/battery_low.jpg</property>
            <property name="plot">[CR][COLOR yellow]$LOCALIZE[13050][/COLOR]</property>
            <visible>Integer.IsGreater(System.BatteryLevel,20) + !Integer.IsGreater(System.BatteryLevel,60)</visible>
            <visible>Skin.HasSetting(SysInfoWidgetShowBattery)</visible>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
        <item>
            <label>$LOCALIZE[12395]</label>
            <label2>[CR][COLOR red]$INFO[System.BatteryLevel][/COLOR]</label2>
            <thumb>resource://resource.images.skinicons.wide/battery_critical.png</thumb>
            <property name="poster">resource://resource.images.skinicons.wide/battery_critical_poster.png</property>
            <property name="DBTYPE">systeminfo</property>
            <property name="fanart">resource://resource.images.skinbackgrounds.titanium/battery_critical.jpg</property>
            <property name="plot">[CR][COLOR red]$LOCALIZE[13050][/COLOR]</property>
            <visible>!Integer.IsGreater(System.BatteryLevel,20)</visible>
            <visible>Skin.HasSetting(SysInfoWidgetShowBattery)</visible>
            <onclick>ActivateWindow(systeminfo)</onclick>
        </item>
    </include>
    <include name="StaticWidget_Weather">
        <!--weather widgets -->
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day0.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day0.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day0.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day0]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day0]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day0.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day1.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day1.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day1.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day1]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day1]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day1.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day2.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day2.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day2.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day2]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day2]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day2.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day3.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day3.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day3.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day3]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day3]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day3.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day4.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day4.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day4.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day4]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day4]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day4.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day5.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day5.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day5.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day5]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day5]</thumb>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day5.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
            <property name="DBTYPE">weather</property>
            <visible>!String.IsEmpty(Window(Weather).Property(Day5.Title))</visible>
            <visible>![Skin.String(widgetstyle, poster) + $EXP[IsVerticalLayout]]</visible>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Weather).Property(Day6.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Weather).Property(Day6.HighTemp)] $INFO[System.TemperatureUnits] / $INFO[Window(Weather).Property(Day6.LowTemp)] $INFO[System.TemperatureUnits]</label2>
            <property name="fanart">$VAR[WeatherFanArtSingleImage_Day6]</property>
            <thumb>$VAR[WeatherIconSingleImage_Day6]</thumb>
            <property name="DBTYPE">weather</property>
            <property name="logo">$INFO[Window(Weather).Property(WeatherProviderLogo)]</property>
            <property name="plot">$INFO[Window(Weather).Property(Day6.Outlook)]</property>
            <onclick>ActivateWindow(weather)</onclick>
            <visible>!String.IsEmpty(Window(Weather).Property(Day6.Title))</visible>
            <visible>![Skin.String(widgetstyle, poster) + $EXP[IsVerticalLayout]]</visible>
        </item>
    </include>
    <include name="StaticWidget_RCB">
        <!--rom collection browser -->
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.1.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.1.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.1.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.1.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.1.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.1.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.1.LaunchCommand)]</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(MostPlayedROM.1.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.2.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.2.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.2.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.2.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.2.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.2.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.2.LaunchCommand)]</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(MostPlayedROM.2.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.3.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.3.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.3.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.3.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.3.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.3.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.3.LaunchCommand)]</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(MostPlayedROM.3.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.4.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.4.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.4.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.4.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.4.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.4.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.4.LaunchCommand)]</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(MostPlayedROM.4.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.5.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.5.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.5.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.5.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.5.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.5.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.5.LaunchCommand)]</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(MostPlayedROM.5.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.6.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.6.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.6.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.6.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.6.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.6.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.6.LaunchCommand)]</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(MostPlayedROM.6.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.7.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.7.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.7.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.7.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.7.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.7.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.7.LaunchCommand)]</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(MostPlayedROM.7.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.8.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.8.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.8.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.8.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.8.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.8.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.8.LaunchCommand)]</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(MostPlayedROM.8.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.9.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.9.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.9.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.9.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.9.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.9.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.9.LaunchCommand)]</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(MostPlayedROM.9.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
        <item>
            <label>[UPPERCASE]$INFO[Window(Home).Property(MostPlayedROM.10.Title)][/UPPERCASE]</label>
            <label2>$INFO[Window(Home).Property(MostPlayedROM.10.Console)]</label2>
            <property name="fanart">$INFO[Window(Home).Property(MostPlayedROM.10.Fanart)]</property>
            <thumb>$INFO[Window(Home).Property(MostPlayedROM.10.Thumb)]</thumb>
            <property name="poster">$INFO[Window(Home).Property(MostPlayedROM.10.Thumb)]</property>
            <property name="plot">$INFO[Window(Home).Property(MostPlayedROM.10.Plot)]</property>
            <onclick>$INFO[Window(Home).Property(MostPlayedROM.10.LaunchCommand)]</onclick>
            <visible>!String.IsEmpty(Window(Home).Property(MostPlayedROM.10.Title))</visible>
            <property name="DBTYPE">rcb</property>
        </item>
    </include>

    <include name="HorizontalWidgets">
        <!-- infopanel -->
        <control type="group" id="77551">
            <top>0</top>
            <left>0</left>
            <height>490</height>
            <width>100%</width>
            <visible>![String.Contains(Window(Home).Property(widgetstyle), box) | String.Contains(Window(Home).Property(widgetstyle), details)] + !String.IsEmpty(Window(Home).Property(HomeFirstLoadDone))</visible>
            <visible>Control.HasFocus(77777) | !String.IsEmpty(Window(Home).Property(ShowWidget))</visible>
            <visible>!Skin.HasSetting(HideWidgetDetailsPanel)</visible>
            <animation type="Visible">
                <effect type="slide" start="0,-1000" end="0,0" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <animation type="Hidden">
                <effect type="slide" start="0,0" end="0,-1000" time="300" tween="cubic" easing="inout" delay="0"/>
            </animation>
            <control type="image">
                <height>1000</height>
                <top>-450</top>
                <texture border="15">diffuse/bgpanel.png</texture>
                <colordiffuse>$VAR[ViewDetailsPanelColor]</colordiffuse>
                <aspectratio>stretch</aspectratio>
                <visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
                <!-- slide widget background panel matching the widget style -->
                <animation type="Conditional" condition="String.IsEqual(Window(Home).Property(widgetstyle), poster)">
                    <effect type="slide" start="0,0" end="0,380" time="0" delay="0"/>
                </animation>
                <animation type="Conditional" condition="String.IsEqual(Window(Home).Property(widgetstyle), posterdetails)">
                    <effect type="slide" start="0,0" end="0,380" time="0" delay="0"/>
                </animation>
                <animation type="Conditional" condition="String.IsEqual(Window(Home).Property(widgetstyle), smallposter)">
                    <effect type="slide" start="0,0" end="0,253" time="0" delay="0"/>
                </animation>
                <animation type="Conditional" condition="String.IsEqual(Window(Home).Property(widgetstyle), square)">
                    <effect type="slide" start="0,0" end="0,245" time="0" delay="0"/>
                </animation>
                <animation type="Conditional" condition="String.IsEqual(Window(Home).Property(widgetstyle), minisquare)">
                    <effect type="slide" start="0,0" end="0,131" time="0" delay="0"/>
                </animation>
                <animation type="Conditional" condition="String.IsEqual(Window(Home).Property(widgetstyle), landscape)">
                    <effect type="slide" start="0,0" end="0,210" time="0" delay="0"/>
                </animation>
                <animation type="Conditional" condition="String.IsEqual(Window(Home).Property(widgetstyle), banner)">
                    <effect type="slide" start="0,0" end="0,146" time="0" delay="0"/>
                </animation>
                <animation type="Conditional" condition="String.IsEqual(Window(Home).Property(widgetstyle), landscapesmall)">
                    <effect type="slide" start="0,0" end="0,148" time="0" delay="0"/>
                </animation>
                <animation type="Conditional" condition="String.IsEqual(Window(Home).Property(widgetstyle), landscapelarge)">
                    <effect type="slide" start="0,0" end="0,270" time="0" delay="0"/>
                </animation>
                <animation type="Conditional" condition="String.IsEqual(Window(Home).Property(widgetstyle), landscapedetails)">
                    <effect type="slide" start="0,0" end="0,210" time="0" delay="0"/>
                </animation>
            </control>
            <control type="label">
                <posx>405</posx>
                <top>25</top>
                <width>1465</width>
                <height>50</height>
                <font>Bold45</font>
                <align>left</align>
                <aligny>top</aligny>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                <label>$VAR[HomeMenuWidgetInfoLabel]</label>
            </control>
            <control type="textbox">
                <width>1455</width>
                <posx>405</posx>
                <top>95</top>
                <height>200</height>
                <label>$VAR[HomeMenuWidgetInfoPlotAlt]</label>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                <align>justify</align>
                <font>Light28</font>
            </control>
            <control type="image">
                <left>50</left>
                <top>30</top>
                <width>340</width>
                <height>430</height>
                <aspectratio align="left" aligny="top">keep</aspectratio>
                <fadetime>250</fadetime>
                <texture background="true" diffuse="diffuse/poster.png">$VAR[HomeMenuWidgetInfoPoster]</texture>
            </control>
            <!-- flags -->
            <control type="group">
                <height>60</height>
                <posx>405</posx>
                <bottom>0</bottom>
                <include>mediaflags</include>
            </control>
        </control>
        <!-- tagline or clearlogo at bottom -->
        <control type="group" id="77552">
            <visible>!Skin.HasSetting(EnableTouchSupport)</visible>

            <control type="fadelabel">
                <left/>
                <bottom>0</bottom>
                <width>100%</width>
                <height>100</height>
                <font>Bold45</font>
                <align>center</align>
                <textcolor>$INFO[Skin.String(GeneralTextColor)]</textcolor>
                <shadowcolor>black</shadowcolor>
                <label>$VAR[HomeMenuWidgetInfoLabel2]</label>
                <scroll>true</scroll>
                <scrollout>true</scrollout>
                <pauseatend>0</pauseatend>
                <visible>String.IsEmpty(Control.GetLabel(8821))</visible>
                <animation time="300" effect="fade" delay="500">Visible</animation>
                <animation time="200" effect="fade" delay="0">Hidden</animation>
                <visible>Control.IsVisible(77551)</visible>
            </control>
            <control type="image" id="8821">
                <width>100%</width>
                <bottom>20</bottom>
                <height>90</height>
                <aspectratio align="center" aligny="bottom">keep</aspectratio>
                <texture background="true">$VAR[HomeMenuWidgetInfoclearlogo]</texture>
                <animation time="300" effect="fade" delay="500">Visible</animation>
                <animation time="200" effect="fade" delay="0">Hidden</animation>
                <visible>Control.IsVisible(77551)</visible>
            </control>
        </control>

        <!-- widgets -->
        <control type="grouplist" id="77777">
            <left>50</left>
            <right>50</right>
            <top>500</top>
            <bottom>0</bottom>
            <orientation>vertical</orientation>
            <onup>900</onup>
            <onup>ClearProperty(ShowWidget,Home)</onup>
            <ondown>900</ondown>
            <ondown>ClearProperty(ShowWidget,Home)</ondown>
            <onback>900</onback>
            <onback>ClearProperty(ShowWidget,Home)</onback>
            <itemgap>0</itemgap>
            <visible>!String.IsEmpty(Window(Home).Property(HomeFirstLoadDone))</visible>
            <visible>![[String.Contains(Window(Home).Property(submenu),show) | Control.HasFocus(4444)] + Skin.String(SubmenuLayout, subpage)]</visible>

            <!-- hide when no focus on widget and autoshow not enabled -->
            <animation effect="slide" start="0,0" end="0,-1000" time="300" tween="cubic" easing="inout" delay="0" condition="String.IsEmpty(Window(Home).Property(ShowWidget)) + !Skin.HasSetting(AutoShowWidgets)">Conditional</animation>
            <animation effect="slide" start="0,-1000" end="0,0" time="300" tween="cubic" easing="inout" delay="0" condition="!String.IsEmpty(Window(Home).Property(ShowWidget)) + !Skin.HasSetting(AutoShowWidgets)">Conditional</animation>

            <!-- positioning for boxed layouts without infopanel -->
            <animation effect="slide" delay="0" start="0" end="0,175" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.IsEqual(Window(Home).Property(widgetstyle),widebox) + String.Contains(Skin.String(HomeLayout),horizontal) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,90" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.IsEqual(Window(Home).Property(widgetstyle),singlebox) + String.Contains(Skin.String(HomeLayout),horizontal) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,220" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.IsEqual(Window(Home).Property(widgetstyle),landscapedetails) + String.Contains(Skin.String(HomeLayout),horizontal) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,50" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Window(Home).Property(widgetstyle),posterdetails)] + String.Contains(Skin.String(HomeLayout),horizontal) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>

            <animation effect="slide" delay="0" start="0" end="0,-45" time="0" condition="String.IsEqual(Window(Home).Property(widgetstyle),widebox) + String.Contains(Skin.String(HomeLayout),simplehor) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,-130" time="0" condition="String.IsEqual(Window(Home).Property(widgetstyle),singlebox) + String.Contains(Skin.String(HomeLayout),simplehor) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,0" time="0" condition="String.IsEqual(Window(Home).Property(widgetstyle),landscapedetails) + String.Contains(Skin.String(HomeLayout),simplehor) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,-170" time="0" condition="[String.IsEqual(Window(Home).Property(widgetstyle),posterdetails)] + String.Contains(Skin.String(HomeLayout),simplehor) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,-370" time="0" condition="[String.IsEqual(Window(Home).Property(widgetstyle),posterdetails)] + [[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>

            <animation effect="slide" delay="0" start="0" end="0,-300" time="0" condition="!String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Window(Home).Property(widgetstyle),posterdetails)] + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,-180" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + [String.IsEqual(Window(Home).Property(widgetstyle),posterdetails)] + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>

            <animation effect="slide" delay="0" start="0" end="0,-370" time="0" condition="String.IsEqual(Window(Home).Property(widgetstyle),landscapedetails) + [[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,-130" time="0" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.IsEqual(Window(Home).Property(widgetstyle),landscapedetails) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,-10" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.IsEqual(Window(Home).Property(widgetstyle),landscapedetails) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>

            <animation effect="slide" delay="0" start="0" end="0,-370" time="0" condition="String.IsEqual(Window(Home).Property(widgetstyle),singlebox) + [[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,-260" time="0" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.IsEqual(Window(Home).Property(widgetstyle),singlebox) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,-140" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.IsEqual(Window(Home).Property(widgetstyle),singlebox) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>

            <animation effect="slide" delay="0" start="0" end="0,-370" time="0" condition="String.IsEqual(Window(Home).Property(widgetstyle),widebox) + [[[String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + !Skin.HasSetting(LowerWidgets)] | [String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),2small)]] + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,-175" time="0" condition="!String.IsEqual(Skin.AspectRatio,16:10) + String.IsEqual(Window(Home).Property(widgetstyle),widebox) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <animation effect="slide" delay="0" start="0" end="0,-55" time="0" condition="String.IsEqual(Skin.AspectRatio,16:10) + String.IsEqual(Window(Home).Property(widgetstyle),widebox) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)] + Skin.HasSetting(LowerWidgets) + !String.IsEmpty(Window(Home).Property(ShowWidget))">Conditional</animation>
            <include>skinshortcuts-template-Widgets</include>
        </control>
    </include>

    <include name="WidgetTagOverlayEnable">
        <visible>true</visible>
    </include>
    <include name="WidgetTagOverlayDisable">
        <visible>false</visible>
    </include>
    <include name="WidgetTagOverlayAuto">
        <include>$PARAM[prefix]TagOverlayVisibility</include>
    </include>

    <!-- BINGIE WIDGETS -->
    <include name="Category_Widget">
        <param name="id" default="117" />
        <param name="limit" default="250" />
        <param name="target" default="videos" />
        <definition>
            <control type="panel" id="$PARAM[id]">
                <visible>Container($PARAM[id]).IsUpdating | Integer.IsGreater(Container($PARAM[id]).NumItems,0)</visible>
                <viewtype label="31018">panel</viewtype>
                <focusedposition>0</focusedposition>
                <top>40</top>
                <width>1660</width>
                <height>389</height>
                <orientation>vertical</orientation>
                <itemgap>0</itemgap>
                <preloaditems>4</preloaditems>
                <pagecontrol>60</pagecontrol>
                <include>ScrollTime</include>
                <include content="ContainerShowInfoOnclick" condition="Skin.HasSetting(ShowInformationBypass)">
                    <param name="widgetid" value="117" />
                </include>
                <onright condition="Control.IsVisible(60)">60</onright>
                <onright condition="!Control.IsVisible(60)">noop</onright>
                <onleft>back</onleft>
                <itemlayout height="195" width="332">
                    <control type="group">
                        <width>332</width>
                        <height>195</height>
                        <control type="image">
                            <texture background="true">home/home_matte2.png</texture>
                            <colordiffuse>ff353535</colordiffuse>
                            <include>thumbsborder_unfocused</include>
                        </control>
                        <include>ThumbsViewItemLayout</include>
                        <control type="group">
                            <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                            <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                        </control>
                    </control>
                </itemlayout>
                <focusedlayout height="195" width="332">
                    <control type="group">
                        <width>332</width>
                        <height>195</height>
                        <control type="image">
                            <visible>!Skin.HasSetting(EnableFixedFrameWidgets)</visible>
                            <texture background="true">home/home_matte2.png</texture>
                            <colordiffuse>$VAR[ViewDetailsBorderFocusColor]</colordiffuse>
                            <include>thumbsborder_focused</include>
                        </control>
                        <include>ThumbsViewItemLayout</include>
                        <control type="group">
                            <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">ThumbsTagOverlay</include>
                            <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">LandscapeTagOverlayVisibility</include>
                        </control>
                    </control>
                    <control type="button">
                        <visible>false</visible>
                        <include content="Bingie_Default_AutoPreview" condition="Skin.HasSetting(BingieAutoTrailer)">
                            <param name="widgetid" value="$PARAM[id]" />
                            <param name="groupid" value="$PARAM[id]" />
                        </include>
                    </control>
                </focusedlayout>
                <content sortby="$PARAM[sortBy]" sortorder="$PARAM[sortOrder]" limit="$PARAM[limit]" target="$PARAM[target]">$PARAM[content]</content>
            </control>
        </definition>
    </include>

    <include name="SpotlightDummyWidget">
        <control type="grouplist">
            <visible>Control.IsVisible(1508)</visible>
            <visible>Integer.IsGreater(Container(77777).NumItems,1) + String.IsEqual(Window(Home).Property(CurrentWidgetPos),Container(77777).NumItems)</visible>
            <animation effect="fade" start="0" end="55" time="250">VisibleChange</animation>
            <animation effect="slide" start="0,-250" end="0,0" time="300" condition="!String.IsEqual(Window(Home).Property(CurrentWidgetPos),1)">Conditional</animation>
            <animation effect="slide" start="0,250" end="0,0" time="300" condition="String.IsEqual(Window(Home).Property(CurrentWidgetPos),1) | String.IsEqual(Window(Home).Property(CurrentWidgetPos),Container(77777).NumItems)">Conditional</animation>
            <orientation>vertical</orientation>
            <itemgap>0</itemgap>
            <usecontrolcoords>true</usecontrolcoords>
            <height>250</height>
            <include condition="!Skin.HasSetting(EnhancedHome_Circular)">No_Circular_Left</include>
            <left>0</left>
            <top>855</top>
            <control type="textbox">
                <left>2</left>
                <height>40</height>
                <width>99%</width>
                <font>Reg29</font>
                <textcolor>$INFO[Skin.String(ViewDetailsTextColor)]</textcolor>
                <shadowcolor>$INFO[Skin.String(ViewDetailsTextShadowColor)]</shadowcolor>
                <label>[B]$LOCALIZE[31185][/B]</label>
            </control>
            <control type="image">
                <left>2</left>
                <height>210</height>
                <width>landscape_width</width>
                <bordersize>8</bordersize>
                <texture background="true" diffuse="home/home_matte2.png" fallback="colors/color_keyboard.png">$VAR[SpotlightLandscapeImage]</texture>
                <aspectratio scalediffuse="false" align="center" aligny="center">stretch</aspectratio>
            </control>
        </control>
    </include>


    <include name="widget_layout_bingie_square">
        <onclick condition="System.HasAlarm(preview_delay)">CancelAlarm(preview_delay,silent)</onclick>
        <onclick>ClearProperty(AllowPVRPreview,Home)</onclick>
        <onclick>ClearProperty(PlayingPVRPreview,Home)</onclick>
        <onclick>PlayMedia($ESCINFO[ListItem.FileNameAndPath])</onclick>
        <onclick>AlarmClock(preview_delay,PlayMedia($ESCINFO[ListItem.FileNameAndPath]),00:03,silent)</onclick>
        <height>210</height>
        <itemlayout height="210" width="210">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>210</width>
                <height>210</height>
                <include>SquarePosterPanelLayout</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SquarePosterTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">SquarePosterTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="SquarePoster"/>
                    </include>
                </control>
            </control>
        </itemlayout>
        <focusedlayout height="210" width="210">
            <control type="group">
                <include content="left" condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !Skin.HasSetting(EnhancedHome_Circular)">
                    <param name="left" value="bingie_no_circular_posx"/>
                </include>
                <width>210</width>
                <height>210</height>
                <control type="image">
                    <visible>!Skin.HasSetting(EnableFixedFrameWidgets)</visible>
                    <include>SquareThumbFO</include>
                    <include>thumbsborder_focused</include>
                </control>
                <control type="image">
                    <include>SquareThumb</include>
                    <visible>!String.StartsWith(ListItem.FileNameAndPath, pvr://) + ![!String.IsEmpty(ListItem.Art(thumb)) + String.IsEqual(ListItem.Art(thumb),ListItem.Property(channellogo))]</visible>
                </control>
                <control type="image">
                    <aspectratio scalediffuse="false" aligny="center">keep</aspectratio>
                    <include>SquareThumb</include>
                    <visible>String.StartsWith(ListItem.FileNameAndPath, pvr://) | [!String.IsEmpty(ListItem.Art(thumb)) + String.IsEqual(ListItem.Art(thumb),ListItem.Property(channellogo))]</visible>
                </control>
                <control type="group">
                    <!--Watched Overlay-->
                    <right>8</right>
                    <top>8</top>
                    <include>WatchedIndicatorSmall</include>
                    <animation type="Conditional" condition="Skin.HasTheme(classic)">
                        <effect type="slide" end="3,-3" time="0"  />
                    </animation>
                </control>
                <!--Label Overlay-->
                <include condition="!Window.IsActive(Home)">SquarePosterTagOverlay</include>
                <control type="group">
                    <description>widget label overlay</description>
                    <include condition="!String.IsEqual(Skin.String(Widgets_DisplayTags),disable)">SquarePosterTagOverlay</include>
                    <include condition="String.IsEqual(Skin.String(Widgets_DisplayTags),auto)">SquarePosterTagOverlayVisibility</include>
                    <include content="$PARAM[widgetTags]" condition="String.IsEqual(Skin.String(Widgets_DisplayTags),override)">
                        <param name="prefix" value="SquarePoster"/>
                    </include>
                </control>
            </control>
            <include content="HiddenWidgetButton">
                <param name="widget" value="PVR"/>
                <param name="widgetstyle" value="square"/>
                <param name="widgetid" value="$PARAM[widgetid]"/>
            </include>
        </focusedlayout>
    </include>

    <include name="widget_base_content_pvr">
        <include>StaticWidget_pvr</include>
    </include>

    <include name="StaticWidget_pvr">
        <content>
            <item id="1">
                <label>$LOCALIZE[10700]</label>
                <thumb>bingie/categories/tvchannels.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path"></property>
                <onclick>ActivateWindow(tvchannels,return)</onclick>
            </item>
            <item id="2">
                <label>$LOCALIZE[19273]</label>
                <thumb>bingie/categories/tvguide.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path"></property>
                <onclick>ActivateWindow(tvguide,return)</onclick>
            </item>
            <item id="3">
                <label>TV Search</label>
                <thumb>bingie/categories/tvsearch.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path"></property>
                <onclick>ActivateWindow(tvsearch,return)</onclick>
            </item>
            <item id="4">
                <label>$LOCALIZE[19017]</label>
                <thumb>bingie/categories/tvrecordings.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path"></property>
                <onclick>ActivateWindow(tvrecordings,return)</onclick>
            </item>
            <item id="5">
                <label>$LOCALIZE[19040]</label>
                <thumb>bingie/categories/timers.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path"></property>
                <onclick>ActivateWindow(tvtimers,return)</onclick>
            </item>
            <item id="6">
                <label>$LOCALIZE[19138]</label>
                <thumb>bingie/categories/timerrules.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path"></property>
                <onclick>ActivateWindow(tvtimerrules,return)</onclick>
            </item>
            <item id="7">
                <label>$LOCALIZE[19024]</label>
                <thumb>bingie/categories/radiochannels.jpg</thumb>
                <property name="DBTYPE">category</property>
                <property name="path"></property>
                <onclick>ActivateWindow(radiochannels,return)</onclick>
                <visible>Pvr.HasRadioChannels</visible>
            </item>
        </content>
    </include>
</includes>
