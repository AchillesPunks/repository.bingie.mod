<?xml version="1.0" encoding="utf-8"?>
<includes>

<include name="TouchControlsHome">
	<!-- page button left -->
	<control type="button">
		<left>0</left>
		<top>730</top>
		<width>30</width>
		<height>149</height>
		<align>center</align>
		<aligny>center</aligny>
		<label/>
		<pulseonselect>false</pulseonselect>
		<texturefocus colordiffuse="white">home/basichome_left.png</texturefocus>
		<texturenofocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]">home/basichome_left.png</texturenofocus>
		<onclick>PageUp(60)</onclick>
		<animation effect="slide" start="0,0" end="0,85" time="0" condition="String.IsEqual(Skin.String(HomeLayout),enhanced)">Conditional</animation>
		<visible>Control.IsVisible(900) + Container(900).HasPrevious + ![Control.IsVisible(77551) | !String.IsEmpty(Window(Home).Property(ShowWidget))]</visible>
		<visible>Skin.HasTheme(classic)</visible>
	</control>
	
	<!-- page button left -->
	<control type="button">
		<left>0</left>
		<top>730</top>
		<width>30</width>
		<height>149</height>
		<align>center</align>
		<aligny>center</aligny>
		<label/>
		<pulseonselect>false</pulseonselect>
		<textcolor fallback="white">$INFO[Skin.String(ButtonTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
		<font>Light36</font>
        <texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="5">diffuse/panel.png</texturefocus>
        <texturenofocus colordiffuse="$INFO[Skin.String(GeneralPanelsColor)]" border="5">diffuse/panel.png</texturenofocus>
        <textoffsetx>0</textoffsetx>
		<onclick>PageUp(60)</onclick>
		<animation effect="slide" start="0,0" end="0,85" time="0" condition="String.IsEqual(Skin.String(HomeLayout),enhanced)">Conditional</animation>
		<visible>Control.IsVisible(900) + Container(900).HasPrevious + ![Control.IsVisible(77551) | !String.IsEmpty(Window(Home).Property(ShowWidget))]</visible>
		<visible>!Skin.HasTheme(classic)</visible>
	</control>
	<control type="image">
		<left>3</left>
		<top>730</top>
		<width>20</width>
		<height>149</height>
		<texture flipx="true">dialogs/videoinfo/info/arrowright.png</texture>
		<aspectratio>keep</aspectratio>
		<animation effect="slide" start="0,0" end="0,85" time="0" condition="String.IsEqual(Skin.String(HomeLayout),enhanced)">Conditional</animation>
		<visible>Control.IsVisible(900) + Container(900).HasPrevious + ![Control.IsVisible(77551) | !String.IsEmpty(Window(Home).Property(ShowWidget))]</visible>
		<visible>!Skin.HasTheme(classic)</visible>
	</control>

	<!-- page button right -->
	<control type="button">
		<right>0</right>
		<top>730</top>
		<width>30</width>
		<height>149</height>
		<align>center</align>
		<aligny>center</aligny>
		<label/>
		<pulseonselect>false</pulseonselect>
		<texturefocus colordiffuse="white">home/basichome_right.png</texturefocus>
		<texturenofocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]">home/basichome_right.png</texturenofocus>
		<onclick>PageDown(60)</onclick>
		<animation effect="slide" start="0,0" end="0,85" time="0" condition="String.IsEqual(Skin.String(HomeLayout),enhanced)">Conditional</animation>
		<visible>Control.IsVisible(900) + Container(900).HasNext + ![Control.IsVisible(77551) | !String.IsEmpty(Window(Home).Property(ShowWidget))]</visible>
		<visible>Skin.HasTheme(classic)</visible>
	</control>
	
	<!-- page button right -->
	<control type="button">
		<right>0</right>
		<top>730</top>
		<width>30</width>
		<height>149</height>
		<align>center</align>
		<aligny>center</aligny>
		<label/>
		<pulseonselect>false</pulseonselect>
		<textcolor fallback="white">$INFO[Skin.String(ButtonTextColor)]</textcolor>
        <focusedcolor>$INFO[Skin.String(ButtonFocusTextColor)]</focusedcolor>
        <disabledcolor>$INFO[Skin.String(GeneralTextColor)]</disabledcolor>
		<font>Light36</font>
        <texturefocus colordiffuse="$INFO[Skin.String(ButtonFocusColor)]" border="5">diffuse/panel.png</texturefocus>
        <texturenofocus colordiffuse="$INFO[Skin.String(GeneralPanelsColor)]" border="5">diffuse/panel.png</texturenofocus>
        <textoffsetx>0</textoffsetx>
		<onclick>PageDown(60)</onclick>
		<animation effect="slide" start="0,0" end="0,85" time="0" condition="String.IsEqual(Skin.String(HomeLayout),enhanced)">Conditional</animation>
		<visible>Control.IsVisible(900) + Container(900).HasNext + ![Control.IsVisible(77551) | !String.IsEmpty(Window(Home).Property(ShowWidget))]</visible>
		<visible>!Skin.HasTheme(classic)</visible>
	</control>
	<control type="image">
		<right>3</right>
		<top>730</top>
		<width>20</width>
		<height>149</height>
		<texture>dialogs/videoinfo/info/arrowright.png</texture>
		<aspectratio>keep</aspectratio>
		<animation effect="slide" start="0,0" end="0,85" time="0" condition="String.IsEqual(Skin.String(HomeLayout),enhanced)">Conditional</animation>
		<visible>Control.IsVisible(900) + Container(900).HasNext + ![Control.IsVisible(77551) | !String.IsEmpty(Window(Home).Property(ShowWidget))]</visible>
		<visible>!Skin.HasTheme(classic)</visible>
	</control>
</include>

<include name="touchbutton_layout">
    <label/>
    <include>animation_fade_visible_hidden</include>
    <width>60</width>
    <height>60</height>
    <font/>
    <radiowidth>50</radiowidth>
    <radioheight>50</radioheight>
    <radioposx>5</radioposx>
</include>

<include name="close_button">
    <control type="radiobutton" id="199199">
        <include>touchbutton_layout</include>
        <textureradioofffocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">touchcontrols/close.png</textureradioofffocus>
		<textureradioonfocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">touchcontrols/close.png</textureradioonfocus>
        <textureradiooffnofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/close.png</textureradiooffnofocus>
		<textureradioonnofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/close.png</textureradioonnofocus>
        <selected>Control.HasFocus(199199)</selected>
        <onclick>ClearProperty(ShowViewSubMenu,Home)</onclick>
        <onclick condition="!String.IsEqual(Window(Home).Property(ShowViewSubMenu),show)">Back</onclick>
    </control>
</include>

<include name="back_button">
    <control type="radiobutton" id="199198">
        <include>touchbutton_layout</include>
        <textureradioofffocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">touchcontrols/back.png</textureradioofffocus>
		<textureradioonfocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">touchcontrols/back.png</textureradioonfocus>
        <textureradiooffnofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/back.png</textureradiooffnofocus>
		<textureradioonnofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/back.png</textureradioonnofocus>
        <selected>Control.HasFocus(199198)</selected>
        <onclick>ClearProperty(ShowViewSubMenu,Home)</onclick>
        <onclick>Back</onclick>
    </control>
</include>

<include name="home_button">
    <control type="radiobutton" id="199197">
        <include>touchbutton_layout</include>
        <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">touchcontrols/home.png</textureradiofocus>
        <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/home.png</textureradionofocus>
        <selected>Control.HasFocus(199102)</selected>
        <onclick>Back</onclick>
        <onclick>ActivateWindow(Home)</onclick>
        <onclick>ClearProperty(ShowViewSubMenu,Home)</onclick>
    </control>
</include>

<include name="TouchControlsFooter">
	<control type="grouplist" id="99123">
		<posx>60</posx>
		<bottom>24</bottom>
		<width>1000</width>
		<height>60</height>
		<itemgap>25</itemgap>
		<onleft>200</onleft>
		<onright>200</onright>
		<orientation>horizontal</orientation>
		<animation effect="zoom" start="100" end="80" center="auto" easing="out" tween="back" time="0" condition="Skin.HasTheme(classic)">Conditional</animation>
		<animation effect="slide" start="0,0" end="-25,-14" center="auto" easing="out" tween="back" time="0" condition="Skin.HasTheme(classic) + !Window.IsActive(Home)">Conditional</animation>
		<animation effect="slide" start="0,0" end="-25,3" center="auto" easing="out" tween="back" time="0" condition="Skin.HasTheme(classic) + Window.IsActive(Home)">Conditional</animation>
        <animation effect="slide" start="0,0" end="0,-40" center="auto" easing="out" tween="back" time="0" condition="Skin.HasTheme(classic) + [Window.IsActive(settings) | Window.IsActive(SettingsCategory.xml) | Window.IsActive(skinsettings) | Window.IsActive(systeminfo) | Window.IsActive(profiles)]">Conditional</animation>
		<animation effect="slide" start="0,0" end="12,19" center="auto" easing="out" tween="back" time="0" condition="String.IsEqual(Skin.String(HomeLayout),enhanced) + Window.IsActive(Home)">Conditional</animation>
		<animation time="200" effect="fade" start="100" end="0" delay="0" condition="Control.IsVisible(4444) + [String.Contains(Skin.String(HomeLayout),1) | String.Contains(Skin.String(HomeLayout),2)]">Conditional</animation>
		<visible>!Window.IsActive(startup) + [!Skin.HasSetting(CompactHeader) | [Window.IsActive(Home) + String.IsEqual(Skin.String(HomeLayout),simplever)]]</visible>
		
		<control type="radiobutton" id="199101">
			<include>touchbutton_layout</include>
            <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">touchcontrols/back.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/back.png</textureradionofocus>
            <selected>Control.HasFocus(199101)</selected>
			<onclick>Back</onclick>
			<onclick>ClearProperty(ShowViewSubMenu,Home)</onclick>
			<onclick>ClearProperty(ShowWidget,Home)</onclick>
			<visible>!Window.IsActive(Home) | [Window.IsActive(Home) + Player.HasMedia]</visible>
		</control>
		<control type="radiobutton" id="199102">
			<include>touchbutton_layout</include>
            <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">touchcontrols/home.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/home.png</textureradionofocus>
            <selected>Control.HasFocus(199102)</selected>
            <onclick>Back</onclick>
			<onclick>ActivateWindow(Home)</onclick>
			<onclick>ClearProperty(ShowViewSubMenu,Home)</onclick>
            <visible>!Window.IsActive(Home)</visible>
		</control>
		<control type="radiobutton" id="199103">
			<include>touchbutton_layout</include>
            <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">touchcontrols/power.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/power.png</textureradionofocus>
            <selected>Control.HasFocus(199103)</selected>
			<onclick>ActivateWindow(111)</onclick>
			<visible>!Skin.HasSetting(DisablePowerMenu)</visible>
			<onclick>ClearProperty(ShowViewSubMenu,Home)</onclick>
			<visible>Window.IsActive(Home)</visible>
		</control>
		<!-- sideblade menu -->
		<control type="radiobutton" id="199104">
			<include>touchbutton_layout</include>
            <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">touchcontrols/menu.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/menu.png</textureradionofocus>
            <selected>Control.HasFocus(199104)</selected>
			<onclick condition="!String.IsEqual(Window(Home).Property(ShowViewSubMenu),show)">SetProperty(ShowViewSubMenu, show,Home)</onclick>
			<onclick condition="String.IsEqual(Window(Home).Property(ShowViewSubMenu),show)">ClearProperty(ShowViewSubMenu,Home)</onclick>
			<visible>Control.IsVisible(9000) + !Window.IsActive(settings) + !Window.IsActive(settingscategory.xml) + !Window.IsActive(contextmenu)</visible>
		</control>
		<!-- show widget -->
		<control type="radiobutton" id="199105">
			<include>touchbutton_layout</include>
            <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">touchcontrols/widget.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/widget.png</textureradionofocus>
            <selected>Control.HasFocus(199105)</selected>
			<onclick condition="!String.IsEmpty(Window(Home).Property(ShowWidget))">Control.SetFocus(900)</onclick>
			<onclick condition="String.IsEmpty(Window(Home).Property(ShowWidget))">SetProperty(ShowWidget,1,Home)</onclick>
			<onclick condition="!String.IsEmpty(Window(Home).Property(ShowWidget))">ClearProperty(ShowWidget,Home)</onclick>
			<visible>Window.IsActive(Home) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),1small) | String.IsEqual(Skin.String(HomeLayout),2small) | String.Contains(Skin.String(HomeLayout),hor)]</visible>
			<visible>!String.IsEmpty(Container(900).ListItem.Property(widget))</visible>
		</control>
		<!-- show submenu -->
		<control type="radiobutton" id="199106">
			<include>touchbutton_layout</include>
            <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonFocusTextColor)]">touchcontrols/menu.png</textureradiofocus>
            <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/menu.png</textureradionofocus>
            <selected>Control.HasFocus(199106)</selected>
			<onclick condition="String.Contains(Window(Home).Property(submenu),show)">SetProperty(submenu,hide,Home)</onclick>
			<onclick condition="!String.Contains(Window(Home).Property(submenu),show)">SetProperty(submenu,show,Home)</onclick>
			<visible>Window.IsActive(Home) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),2) | String.IsEqual(Skin.String(HomeLayout),3) | String.IsEqual(Skin.String(HomeLayout),1small) | String.IsEqual(Skin.String(HomeLayout),2small) | String.IsEqual(Skin.String(HomeLayout),3small) | String.Contains(Skin.String(HomeLayout),hor)] </visible>
			<visible>Integer.IsGreater(Container(4444).NumItems,0)</visible>
		</control>
	
	</control>

	<!-- battery status -->
	<control type="group">
		<bottom>0</bottom>
		<height>60</height>
		<visible>Window.IsActive(Home) + !Skin.HasSetting(HideBatteryStatus) + ![String.IsEqual(Skin.String(HomeLayout),simplever) | String.IsEqual(Skin.String(HomeLayout),simplever_tiles)] + Control.IsVisible(99123)</visible>
		<animation time="200" effect="fade" start="100" end="0" delay="0" condition="String.Contains(Window(Home).Property(submenu),show)">Conditional</animation>
		<animation effect="slide" start="0,0" end="-25,15" center="auto" easing="out" tween="back" time="0" condition="String.IsEqual(Skin.String(HomeLayout),enhanced) + Window.IsActive(Home)">Conditional</animation>
		<animation effect="slide" start="0,0" end="-20,0" center="auto" easing="out" tween="back" time="0" condition="Skin.HasTheme(classic)">Conditional</animation>
		<control type="group">
			<posx>110r</posx>
			<posy>-5</posy>
			<control type="image">
				<posx>0</posx>
				<posy>0</posy>
				<width>4</width>
				<height>30</height>
				<colordiffuse>$VAR[BatteryColorDiffuse]</colordiffuse>
				<texture>touchcontrols/BatteryBackBase.png</texture>
			</control>
			<control type="progress">
				<description>Battery Percent</description>
				<posx>4</posx>
				<posy>0</posy>
				<width>48</width>
				<height>30</height>
				<texturebg colordiffuse="$VAR[BatteryColorDiffuse]">touchcontrols/BatteryBack.png</texturebg>
				<midtexture colordiffuse="$VAR[BatteryColorDiffuse]">touchcontrols/BatteryFront.png</midtexture>
				<info>System.BatteryLevel</info>
				
			</control>
			<control type="image">
				<posx>52</posx>
				<posy>0</posy>
				<width>10</width>
				<height>30</height>
				<texture border="2,0,0,0">touchcontrols/BatteryBackCap.png</texture>
				<colordiffuse>$VAR[BatteryColorDiffuse]</colordiffuse>
			</control>
			</control>
			<control type="label">
				<posx>120r</posx>
				<posy>0</posy>
				<width>200</width>
				<height>18</height>
				<font>Reg26</font>
				<textcolor>$VAR[BatteryColorDiffuse]</textcolor>
				<align>right</align>
				<aligny>center</aligny>
				<label>$INFO[System.BatteryLevel]</label>
			</control>
		</control>
	</include>
    
    <variable name="BatteryColorDiffuse">
        <value condition="Window.IsActive(Home) + String.IsEqual(Skin.String(HomeLayout),lowhorizontal)">$INFO[Skin.String(MainMenuTextColor)]</value>
        <value>$INFO[Skin.String(FooterTextColor)]</value>
    </variable>

<include name="TouchScreenWorkaround">
	<control type="group">
		<posx>0</posx>
		<posy>0</posy>
		<control type="list" id="19000">
			<width>100%</width>
			<height>100%</height>
			<pagecontrol/>
			<orientation>vertical</orientation>
			<itemlayout width="100%" height="100%">
			</itemlayout>
			<focusedlayout width="1920" height="1200">
			</focusedlayout>
			<content>
				<item id="1">
					<label/>
					<thumb/>
					<onclick>ClearProperty(ShowViewSubMenu,Home)</onclick>
					<onclick>ClearProperty(ShowWidget,Home)</onclick>
					<onclick condition="String.Contains(Window.Property(xmlfile),Lyrics)">back</onclick>
					<onclick>ClearProperty(submenu,Home)</onclick>
				</item>
			</content>
		</control>
	</control>
	<control type="group">
		<posx>0</posx>
		<posy>0</posy>
		<visible>Control.IsVisible(500) | Control.IsVisible(52) | Control.IsVisible(52) | Control.IsVisible(58) | Control.IsVisible(52) | Control.IsVisible(501) | Control.IsVisible(502) | Control.IsVisible(506) | Control.IsVisible(507) | Control.IsVisible(508) | Control.IsVisible(513) | Control.IsVisible(514) | Control.IsVisible(900)</visible>
		<control type="list" id="19001">
			<width>100%</width>
			<height>100%</height>
			<pagecontrol/>
			<onfocus>ClearProperty(ShowViewSubMenu,Home)</onfocus>
			<onfocus>ClearProperty(ShowWidget,Home)</onfocus>
			<orientation>horizontal</orientation>
			<itemlayout width="100%" height="100%">
			</itemlayout>
			<focusedlayout width="1920" height="1200">
			</focusedlayout>
			<content>
				<item id="1">
					<label/>
					<thumb/>
					<onclick>ClearProperty(ShowViewSubMenu,Home)</onclick>
					<onclick>ClearProperty(ShowWidget,Home)</onclick>
					<onclick>ClearProperty(submenu,Home)</onclick>
				</item>
			</content>
		</control>
	</control>
</include>

</includes>
