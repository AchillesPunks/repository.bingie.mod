<?xml version="1.0" encoding="utf-8"?>
<!-- BINGIE -->
<includes>
    <!-- Startup window -->
    <variable name="StartUpWindow">
        <value condition="!Skin.HasSetting(BingieFirstStartupDone)">1101</value>
        <value condition="!Skin.HasSetting(BingieSecondStartupDone)">1102</value>
        <value>$INFO[System.StartupWindow]</value>
    </variable>

    <!-- splash image -->
    <variable name="SplashImage">
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.SplashScreen))">$INFO[Window(Home).Property(SkinHelper.SplashScreen)]</value>
        <value condition="Skin.String(SplashScreen)">$INFO[Skin.String(SplashScreen)]</value>
        <value condition="!Skin.HasSetting(UseAltDefaultSplashImage)">special://skin/extras/media/bingie_splash.png</value>
        <value condition="Skin.HasSetting(UseAltDefaultSplashImage)">special://skin/extras/media/bingie_splash2.png</value>
    </variable>

    <variable name="DefaultMenuFocus">
        <value condition="String.IsEmpty(Skin.String(home.defaultfocus))">900</value>
        <value condition="!String.IsEmpty(Skin.String(home.defaultfocus))">900,$INFO[Skin.String(home.defaultfocus)]</value>
    </variable>

    <!-- Focus Override for menu entries -->
    <variable name="MenuEntryOverrideFocus">
        <value condition="Integer.IsGreater(Container(77777).NumItems,0)">77777</value>
        <value condition="Window.IsActive(1109)">9000</value>
    </variable>
    <!-- ====== -->
    <!-- Header -->
    <!-- ====== -->
    <variable name="value_header">
        <value condition="[Window.IsActive(skinsettings) | Window.IsActive(Custom_1105_SkinSettings.xml)]">[UPPERCASE]$LOCALIZE[20077][/UPPERCASE]</value>
		<value condition="Window.IsActive(favourites)">$LOCALIZE[1036]</value>
		<value condition="Window.IsActive(script-ExtendedInfo Script-DialogInfo.xml) + !String.IsEmpty(Window(Home).Property(actor.title))">$INFO[Window(Home).Property(actor.title)]</value>
		<value condition="Window.IsActive(loginscreen)">$INFO[System.CurrentWindow]</value>
		<value condition="Window.IsActive(DialogVideoInfo.xml) + !String.IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="Window.IsActive(DialogVideoInfo.xml) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="Window.IsActive(profilesettings) | Window.IsActive(profiles)">$LOCALIZE[10130]</value>
		<value condition="Window.IsActive(selectdialog) + !String.IsEmpty(Control.GetLabel(1))">$INFO[Control.GetLabel(1)]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + String.IsEqual(Window.Property(groupname),powermenu)">$LOCALIZE[31204]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + !String.IsEmpty(Control.GetLabel(500))">$INFO[Control.GetLabel(500)]</value>
		
		<value condition="Window.IsActive(script-skinshortcuts.xml)">$LOCALIZE[31014]</value>
		<value condition="Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)">$INFO[System.AddonTitle(script.tv.show.next.aired)]</value>
        <value condition="Window.IsActive(Home)">[UPPERCASE]$LOCALIZE[10000][/UPPERCASE]</value>
        <value condition="String.Contains(Container.FolderPath,Radio)">[UPPERCASE]$LOCALIZE[19021][/UPPERCASE]</value>

        <value condition="[Container.Content(movies) | Container.Content(tvshows)] + Skin.HasSetting(ShowMovieTitleHeader) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		
		<value condition="Container.Content(movies) + String.IsEqual(Container.FolderName,$LOCALIZE[369])">[UPPERCASE]$LOCALIZE[342][/UPPERCASE]</value>
		<value condition="Container.Content(tvshows) + String.IsEqual(Container.FolderName,$LOCALIZE[369])">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE]</value>
		
		<value condition="Container.Content(movies)">[UPPERCASE]$LOCALIZE[342][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.TVShowTitle)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE] $INFO[ListItem.TvShowTitle,• ]</value>
		<value condition="Container.Content(tvshows)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] + !String.IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.TvShowTitle] $INFO[ListItem.Season,• $LOCALIZE[20373] ,]</value>
		
        <value condition="!String.IsEmpty(Container.Property(FolderName))">$INFO[Container.Foldername] • $INFO[Container.Property(FolderName)]</value>
		
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">[UPPERCASE]$LOCALIZE[19021][/UPPERCASE]</value>
		<value condition="Window.IsActive(TVGuide)">[UPPERCASE]$LOCALIZE[19020][/UPPERCASE] • $LOCALIZE[22020] $INFO[Control.GetLabel(30),• ]</value>
		<value condition="Window.IsActive(TVChannels)">[UPPERCASE]$LOCALIZE[19020][/UPPERCASE] • $LOCALIZE[19019] $INFO[Control.GetLabel(29),• ]</value>
		<value condition="Window.IsActive(TVRecordings)">[UPPERCASE]$LOCALIZE[19020][/UPPERCASE] • $LOCALIZE[19017]</value>
		<value condition="Window.IsActive(TVTimers)">[UPPERCASE]$LOCALIZE[19020][/UPPERCASE] • $LOCALIZE[19040]</value>
        <value condition="Window.IsActive(TVTimerRules)">[UPPERCASE]$LOCALIZE[19020][/UPPERCASE] • $LOCALIZE[19138]</value>
		<value condition="Window.IsActive(TVSearch)">[UPPERCASE]$LOCALIZE[19020][/UPPERCASE] • $LOCALIZE[137]</value>

        <value condition="Window.IsActive(MyMusicNav.xml)">[UPPERCASE]$LOCALIZE[2][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>

        <value condition="String.Contains(Container.FolderPath,plugin://plugin.video.youtube)">[UPPERCASE]$LOCALIZE[31062][/UPPERCASE]</value>
		
		<value condition="String.IsEqual(Container.FolderPath,library://video/movies/)">[UPPERCASE]$LOCALIZE[342][/UPPERCASE]</value>
		<value condition="String.IsEqual(Container.FolderPath,library://video/tvshows/)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE]</value>
		
		<value condition="String.Contains(Container.FolderPath,movies)">[UPPERCASE]$LOCALIZE[342][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>
		<value condition="String.Contains(Container.FolderPath,tvshows)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>
		
		<value condition="Window.IsActive(Videos)">[UPPERCASE]$LOCALIZE[3][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>
        <value condition="Window.IsActive(weather)">[UPPERCASE]$LOCALIZE[8][/UPPERCASE]</value>
        <value condition="Window.IsActive(pictures )">[UPPERCASE]$LOCALIZE[1213][/UPPERCASE]</value>
        <value condition="Window.IsActive(addonbrowser)">[UPPERCASE]$LOCALIZE[10040][/UPPERCASE]</value>
        <value condition="Window.IsActive(filemanager)">[UPPERCASE]$LOCALIZE[10003][/UPPERCASE]</value>
        <value condition="Window.IsActive(musicplaylist)">[UPPERCASE]$LOCALIZE[2]-$LOCALIZE[559][/UPPERCASE]</value>
        <value condition="Window.IsActive(Music)">[UPPERCASE]$LOCALIZE[2]-$LOCALIZE[1214][/UPPERCASE]</value>
        <value condition="Window.IsActive(programs)">[UPPERCASE]$LOCALIZE[10001][/UPPERCASE]</value>
        <value condition="Window.IsActive(settings)">[UPPERCASE]$LOCALIZE[5][/UPPERCASE]</value>
         <value condition="Window.IsActive(SettingsCategory.xml)">[UPPERCASE]$LOCALIZE[5][/UPPERCASE]</value>
        <value condition="Window.IsActive(systeminfo)">[UPPERCASE]$LOCALIZE[5][/UPPERCASE]</value>
        <value condition="Window.IsActive(tvguide) | Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch)">[UPPERCASE]$LOCALIZE[31088][/UPPERCASE] $INFO[ListItem.ChannelGroup,• ]</value>
        <value condition="Window.IsActive(musicplaylisteditor)">[UPPERCASE]$LOCALIZE[10503][/UPPERCASE]</value>
        <value condition="Window.IsActive(musicplaylisteditor)">[UPPERCASE]$LOCALIZE[10503][/UPPERCASE]</value>
		<value condition="Window.IsActive(videoplaylist)">$LOCALIZE[13350]</value>
        <value condition="Window.IsActive(EventLog.xml)">$LOCALIZE[14111]</value>
	</variable>
	
	<variable name="value_subheader">
        <value condition="Window.IsActive(DialogVideoInfo.xml) + !String.IsEmpty(ListItem.Season) + Container.Content(episodes)">$LOCALIZE[20373] $INFO[ListItem.Season] $LOCALIZE[20452] $INFO[ListItem.Episode]: $INFO[ListItem.Title]</value>
		<value condition="Window.IsActive(DialogVideoInfo.xml) + !String.IsEmpty(ListItem.Season) + !String.IsEqual(ListItem.Title,ListItem.Label)">$INFO[ListItem.Label]</value>
        <value condition="Window.IsActive(DialogVideoInfo.xml)">$INFO[ListItem.TagLine]</value>
        <value condition="Window.IsActive(loginscreen)">$INFO[Control.GetLabel(2)]</value>
        <value condition="Skin.String(infoline) + !Skin.String(infoline,auto)">$VAR[infolinevar]</value>
        <value condition="String.IsEqual(Container.FolderPath,videodb://movies/titles/) + Container.HasFolders">$LOCALIZE[20342]: $INFO[Window(Home).Property(Movies.Count)] • $LOCALIZE[16101]: $INFO[Window(Home).Property(Movies.UnWatched)] • $LOCALIZE[20434]: $INFO[Window(Home).Property(SkinHelper.TotalMovieSets)] ($INFO[Window(Home).Property(SkinHelper.TotalMoviesInSets)] $LOCALIZE[20342])</value>
        <value condition="String.IsEqual(Container.FolderPath,videodb://movies/titles/)">$LOCALIZE[20342]: $INFO[Window(Home).Property(Movies.Count)] • $LOCALIZE[16102]: $INFO[Window(Home).Property(Movies.Watched)] • $LOCALIZE[16101]: $INFO[Window(Home).Property(Movies.UnWatched)] • $INFO[Control.GetLabel(3)]</value>
        
        <value condition="String.IsEqual(Container.FolderPath,videodb://tvshows/titles/)">$LOCALIZE[20343]: $INFO[Window(Home).Property(TVShows.Count)] • $LOCALIZE[20360]: $INFO[Window(Home).Property(Episodes.Count)] • $LOCALIZE[16101]: $INFO[Window(Home).Property(Episodes.UnWatched)] • $INFO[Control.GetLabel(3)]</value>
        
        <value condition="[Window.IsActive(skinsettings) | Window.IsActive(Custom_1105_SkinSettings.xml)]">$VAR[value_header_skinsettings]</value>
		<value condition="Window.IsActive(script-ExtendedInfo Script-DialogInfo.xml)">[CR]</value>
		<value condition="Window.IsActive(weather)">$INFO[Control.GetLabel(3)]</value>
        <value condition="Window.IsActive(Home)">$INFO[Container(900).ListItem.Label]</value>
		<value condition="[Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvchannels) | Window.IsActive(tvguide) | Window.IsActive(mypvr.xml)] + !String.IsEmpty(Pvr.NowRecordingTitle)">$INFO[Pvr.NowRecordingTitle,$LOCALIZE[19158]: ] ($INFO[Pvr.NowRecordingChannel])</value>
		<value condition="[Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvguide) | Window.IsActive(mypvr.xml)] + !String.IsEmpty(Pvr.NextRecordingTitle)">$INFO[Pvr.NextRecordingTitle,$LOCALIZE[19025]: ] ($INFO[Pvr.NextRecordingDateTime])</value>
		<value condition="[Window.IsActive(tvrecordings) | Window.IsActive(tvtimers)] + !String.IsEmpty(PVR.backenddiskspace) + Skin.HasSetting(EnableTouchSupport)">$INFO[Pvr.backenddiskspace]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ContentHeader)) + !String.IsEqual(Container.TotalUnwatched,0)">$INFO[Window(Home).Property(SkinHelper.ContentHeader)]$INFO[Container.TotalUnwatched, • , $LOCALIZE[16101]] $INFO[Control.GetLabel(3),• ]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ContentHeader))">$INFO[Window(Home).Property(SkinHelper.ContentHeader)] $INFO[Control.GetLabel(3),• ]</value>
        <value condition="Window.IsActive(DialogVideoInfo.xml) + !String.IsEmpty(ListItem.Season)">$LOCALIZE[20373] $INFO[ListItem.Season] $LOCALIZE[20452] $INFO[ListItem.Episode]: $INFO[ListItem.Title]</value>
		<value condition="Window.IsActive(DialogVideoInfo.xml)">$INFO[ListItem.TagLine]</value>
		<value condition="!String.IsEmpty(Container.NumItems) + ![Window.IsActive(tvchannels) | Window.IsActive(radiochannels)] + !String.IsEqual(Container.TotalUnwatched,0)">$INFO[Container.NumItems,, $LOCALIZE[31034]]$INFO[Container.TotalUnwatched, • , $LOCALIZE[16101]] $INFO[Control.GetLabel(3),• ]</value>
        <value condition="!String.IsEmpty(Container.NumItems) + ![Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">$INFO[Container.NumItems,, $LOCALIZE[31034]] $INFO[Control.GetLabel(3),• ]</value>
        <value condition="!String.IsEmpty(Container.NumItems) + ![Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">$INFO[Container.NumItems,, $LOCALIZE[31034]] $INFO[Control.GetLabel(3),• ]</value>
        <value>$INFO[System.CurrentWindow]</value>
    </variable>
    
    <variable name="value_header_skinsettings">
		<value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),12)">$LOCALIZE[31121]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),9)">$LOCALIZE[31013]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),8)">$LOCALIZE[31022]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),17)">$LOCALIZE[31221]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),7)">$LOCALIZE[31518]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),16)">$LOCALIZE[31668]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),18)">$LOCALIZE[31088]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),6)">$LOCALIZE[31005]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),19)">$LOCALIZE[31531]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),14)">$LOCALIZE[31271]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),15)">$LOCALIZE[31462]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),20)">$LOCALIZE[31667]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinSettingSection),31)">$LOCALIZE[31696]</value>
    </variable>
	
	<variable name="mediatitle">
		<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.Episode]. $INFO[ListItem.Title]</value>
		
		<value condition="!String.IsEmpty(ListItem.Title) + !String.IsEqual(ListItem.Title,..)">$INFO[ListItem.Title]</value>
		<value condition="Container.Content(tvshows) + !String.IsEmpty(ListItem.Title) + !String.IsEqual(ListItem.Title,..)">$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	
    <variable name="value_header_icon">
        <value condition="Window.IsActive(Home) + !Skin.HasSetting(WeatherOnHome) + !Skin.HasSetting(ShowProfile)">icons/icon_home.png</value>
		<value condition="Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)">icons/icon_tvshows.png</value>
        <value condition="Container.Content(movies)">icons/icon_movies.png</value>
        <value condition="Container.Content(tvshows)">icons/icon_tvshows.png</value>
        <value condition="Container.Content(seasons)">icons/icon_tvshows.png</value>
        <value condition="Container.Content(episodes)">icons/icon_tvshows.png</value>
        <value condition="Container.Content(genres)">icons/icon_movies.png</value>
        <value condition="![Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | [Container.Content(genres) | String.IsEqual(ListItem.DBTYPE,genre)]] + Window.IsActive(Videos)">icons/icon_movies.png</value>
        <value condition="Window.IsActive(Music)">icons/icon_music.png</value>
		<value condition="Window.IsActive(Videos)">icons/icon_videos.png</value>
        <value condition="Window.IsActive(weather)">icons/icon_weather.png</value>
        <value condition="Window.IsActive(pictures )">icons/icon_pictures.png</value>
        <value condition="Window.IsActive(addonbrowser)">icons/icon_addons.png</value>
        <value condition="Window.IsActive(filemanager)">icons/icon_addons.png</value>
        <value condition="Window.IsActive(musicplaylist)">icons/icon_music.png</value>
        <value condition="Window.IsActive(Music)">icons/icon_music.png</value>
        <value condition="Window.IsActive(programs)">icons/icon_addons.png</value>
        <value condition="Window.IsActive(settings)">icons/icon_settings.png</value>
        <value condition="[Window.IsActive(skinsettings) | Window.IsActive(Custom_1105_SkinSettings.xml)]">icons/icon_settings.png</value>
        <value condition="Window.IsActive(SettingsCategory.xml)">icons/icon_settings.png</value>
        <value condition="Window.IsActive(systeminfo)">icons/icon_settings.png</value>
        <value condition="Window.IsActive(tvguide) | Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch)">icons/icon_tvshows.png</value>
        <value condition="Window.IsActive(musicplaylisteditor)">icons/icon_music.png</value>
    </variable>
    <!-- ========== -->
    <!-- List Label -->
    <!-- ========== -->
	
    <!-- =============== -->
    <!-- Additional Info -->
    <!-- =============== -->
    <variable name="value_ground1_label">
        <!-- Land / Premiere -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$LOCALIZE[21875] :</value>
        <!-- Land -->
        <value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">Premiere :</value>
        <!-- Premiere -->
    </variable>
    <variable name="value_ground1_value">
		<value condition="String.Contains(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(SkinHelper.ListItem.Country)]</value>
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$INFO[ListItem.Country]</value>
        <value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">$INFO[ListItem.Premiered]</value>
    </variable>
    <variable name="value_ground2_label">
        <!-- Genre / Regie -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons)">$LOCALIZE[515] :</value>
        <!-- Genre -->
        <value condition="Container.Content(episodes)">$LOCALIZE[20339] :</value>
        <!-- Regie -->
    </variable>
    <variable name="value_ground2_value">
	<value condition="String.Contains(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)]</value>
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons)">$INFO[ListItem.Genre]</value>
        <value condition="Container.Content(episodes)">$INFO[ListItem.Director]</value>
    </variable>
    <variable name="value_ground3_label">
        <!-- Studio -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) |  Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">$LOCALIZE[345] :</value>
        <!-- Studio -->
    </variable>
    <variable name="value_ground3_value">
		<value condition="String.Contains(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(SkinHelper.ListItem.Studio)]</value>
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) |  Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">$INFO[ListItem.Year]</value>
    </variable>
    <variable name="value_ground4_label">
        <!-- Regie / Episodes (counter) / Duration -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$LOCALIZE[20339] :</value>
        <!-- Regie -->
        <value condition="Container.Content(tvshows)">$LOCALIZE[20360] :</value>
        <!-- Episodes -->
        <value condition="Container.Content(episodes)">$LOCALIZE[180] :</value>
        <!-- Duration -->
    </variable>
    <variable name="value_ground4_value">
		<value condition="String.Contains(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(SkinHelper.ListItem.Director)]</value>
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$INFO[ListItem.Director]</value>
        <value condition="Container.Content(tvshows)">$INFO[ListItem.Property(TotalEpisodes)] ($LOCALIZE[16101]: $INFO[ListItem.Property(UnwatchedEpisodes)])</value>
        <value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Duration)">$VAR[ListItemDuration]</value>
    </variable>

	<variable name="NextAiredThumb">
        <value condition="!String.IsEmpty(Window(Home).Property(NextAired.0.Art(fanart)))">$INFO[Window(Home).Property(NextAired.0.Art(fanart))]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(NextAired.1.Art(fanart)))">$INFO[Window(Home).Property(NextAired.1.Art(fanart))]</value>
        <value>resource://resource.images.skinicons.wide/addontvinfo.png</value>
    </variable>
	
	<variable name="DetailsFanArtImage">
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
		<value condition="Skin.HasSetting(PreferClearArtOverLandscape) + !String.IsEmpty(ListItem.Art(tvshow.clearart))">$INFO[ListItem.Art(tvshow.clearart)]</value>
		<value condition="Skin.HasSetting(PreferClearArtOverLandscape) + !String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
        <value condition="!Skin.HasSetting(DisableLandscapeThumbs) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!Skin.HasSetting(DisableLandscapeThumbs) + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
        <value condition="Container.Content(Seasons) + !String.IsEmpty(ListItem.Art(season.fanart)) + !String.StartsWith(Container.FolderPath,plugin://plugin.video)">$INFO[ListItem.Art(season.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container.ListItem.Art(tvshow.fanart))">$INFO[Container.ListItem.Art(tvshow.fanart)]</value>
        <value condition="String.IsEqual(ListItem.Label,..)">dialogs/filebrowser/DefaultFolderBack2.png</value>
		<value condition="Window.IsActive(tvrecordings) + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!Skin.HasSetting(DisableLandscapeThumbs) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Landscape)) + ![Control.IsVisible(505) | Control.IsVisible(512)]">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Landscape)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Fanart))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Fanart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb)) + !String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Art.Thumb),Window(Home).Property(SkinHelper.ListItem.Art.ChannelLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Thumb)]</value>
        <value condition="ListItem.IsCollection + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.0.Landscape))">$INFO[Window(Home).Property(SkinHelper.ListItem.0.Landscape)]</value>
        <value condition="ListItem.IsCollection + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.0.Fanart))">$INFO[Window(Home).Property(SkinHelper.ListItem.0.Fanart)]</value>
		<value condition="String.StartsWith(Container.FolderPath,pvr://)">resource://resource.images.skinbackgrounds.titanium/hover_my tv.jpg</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Container.Content(artists)">resource://resource.images.skinicons.wide/artist.png</value>
        <value condition="[Container.Content(genres) | String.IsEqual(ListItem.DBTYPE,genre)]">resource://resource.images.skinicons.wide/genre.png</value>
        <value condition="Container.Content(studios)">$INFO[ListItem.Label,special://skin/extras/flags/studios/,.png]</value>
		<value condition="Container.Content(actors) + String.IsEmpty(ListItem.Art(thumb))">resource://resource.images.skinicons.wide/ActorPoster.png</value>
		<value condition="Container.Content(directors) + String.IsEmpty(ListItem.Art(thumb))">resource://resource.images.skinicons.wide/ActorPoster.png</value>
		<value condition="Container.Content(years)">resource://resource.images.skinicons.wide/Year.png</value>
		<value condition="Container.Content(countries)">resource://resource.images.skinicons.wide/Country.png</value>
		<value condition="Container.Content(tags)">resource://resource.images.skinicons.wide/Tags.png</value>
    </variable>

	<variable name="VideoInfoPosterImage">
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster)]</value>
		<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(TVShowThumb))">$INFO[ListItem.Property(TVShowThumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value>$INFO[ListItem.Icon]</value>
	 </variable>
     
	<variable name="ListItemClearLogo">
		<value condition="Control.IsVisible(503)"/>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(Container(999).ListItem.Art(clearlogo))">$INFO[Container(999).ListItem.Art(clearlogo)]</value>
		<value condition="Control.IsVisible(200) + !String.IsEmpty(Container(200).ListItem.Property(Art(clearlogo)))">$INFO[Container(200).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(201) + !String.IsEmpty(Container(201).ListItem.Property(Art(clearlogo)))">$INFO[Container(201).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(202) + !String.IsEmpty(Container(202).ListItem.Property(Art(clearlogo)))">$INFO[Container(202).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(203) + !String.IsEmpty(Container(203).ListItem.Property(Art(clearlogo)))">$INFO[Container(203).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(204) + !String.IsEmpty(Container(204).ListItem.Property(Art(clearlogo)))">$INFO[Container(204).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(205) + !String.IsEmpty(Container(205).ListItem.Property(Art(clearlogo)))">$INFO[Container(205).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(206) + !String.IsEmpty(Container(206).ListItem.Property(Art(clearlogo)))">$INFO[Container(206).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(207) + !String.IsEmpty(Container(207).ListItem.Property(Art(clearlogo)))">$INFO[Container(207).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(208) + !String.IsEmpty(Container(208).ListItem.Property(Art(clearlogo)))">$INFO[Container(208).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(209) + !String.IsEmpty(Container(209).ListItem.Property(Art(clearlogo)))">$INFO[Container(209).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(210) + !String.IsEmpty(Container(210).ListItem.Property(Art(clearlogo)))">$INFO[Container(210).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(211) + !String.IsEmpty(Container(211).ListItem.Property(Art(clearlogo)))">$INFO[Container(211).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(212) + !String.IsEmpty(Container(212).ListItem.Property(Art(clearlogo)))">$INFO[Container(212).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(213) + !String.IsEmpty(Container(213).ListItem.Property(Art(clearlogo)))">$INFO[Container(213).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(214) + !String.IsEmpty(Container(214).ListItem.Property(Art(clearlogo)))">$INFO[Container(214).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(215) + !String.IsEmpty(Container(215).ListItem.Property(Art(clearlogo)))">$INFO[Container(215).ListItem.Property(Art(clearlogo))]</value>
    </variable>
	
	<variable name="MusicPlayerClearLogo">
	<value condition="!String.IsEmpty(MusicPlayer.Artist) + !String.StartsWith(Container.FolderPath,plugin://)">$INFO[Player.FolderPath,,../logo.png]</value>
		<value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
		
	</variable>
		
	<variable name="View_Item_Header">
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)]">$INFO[ListItem.Episode,,.] $INFO[ListItem.Title]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.TrackNumber,,.] $INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>	
	
	<variable name="LogoImage">
		<value condition="Skin.String(CustomLogoImage)">$INFO[Skin.String(CustomLogoImage)]</value>
        <value condition="Skin.String(BackgroundOverlayColor, white) + ![String.IsEqual(Skin.String(HomeLayout),simplever) | String.IsEqual(Skin.String(HomeLayout),simplever_tiles)]">home/kodi_logo_dark.png</value>
        <value>home/kodi_logo_light.png</value>
    </variable>
	
	<variable name="HDIndicator">
		<value condition="ListItem.IsStereoscopic">3D</value>
        <value condition="Integer.IsGreater(ListItem.VideoResolution,1080) | String.IsEqual(ListItem.VideoResolution,4K)
         | String.IsEqual(ListItem.VideoResolution,8K)">UHD</value>
        <value condition="Integer.IsGreater(ListItem.VideoResolution,720)">FHD</value>
		<value condition="Integer.IsGreater(ListItem.VideoResolution,700)">HD</value>
		<value condition="!String.IsEmpty(ListItem.VideoResolution)">SD</value>
	</variable>

	<variable name="BannerImage">
        <value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(banner))">$INFO[ListItem.Property(banner)]</value>
    </variable>
	
	<variable name="BannerImageFallback">
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value>$INFO[ListItem.Art(thumb)]</value>
    </variable>
	
	<variable name="NowPlayingTitle">
		<value condition="!String.IsEmpty(MusicPlayer.Artist) + Player.HasAudio + !Player.IsInternetStream">$INFO[MusicPlayer.Artist] - $INFO[MusicPlayer.Title]</value>
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.TVShowTitle] - S$INFO[VideoPlayer.Season]E$INFO[VideoPlayer.Episode] - $INFO[VideoPlayer.Title]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Title) + Player.HasAudio + Player.IsInternetStream">$INFO[MusicPlayer.Title]</value>
        <value>$INFO[Player.Title]</value>
    </variable>
	
	<variable name="NowPlayingLabel">
        <value condition="Player.IsInternetStream">[B]$LOCALIZE[31040][/B]</value>
        <value>[B]$LOCALIZE[31040][/B]  ($INFO[Player.Time] / $INFO[Player.Duration])</value>
    </variable>

    <variable name="PVRThumb">
        <!-- use pvr provided thumb at episode level in pvr recordings -->
        <value condition="String.StartsWith(Container.FolderPath,pvr://recordings/active/) + !String.IsEqual(Container.FolderPath,pvr://recordings/active/) + !String.IsEmpty(ListItem.Art(thumb)) + !String.Contains(Pvr.BackendName, headend)">$INFO[ListItem.Art(thumb)]</value>
        <!-- use rich artwork at main level -->
        <value condition="Control.IsVisible(10) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Landscape))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Landscape)]</value>
        <value condition="Control.IsVisible(10) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Fanart))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Fanart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Poster)) + !Window.IsActive(tvguide) + !Control.IsVisible(10)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Poster)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Thumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <value>resource://resource.images.skinbackgrounds.titanium/pvr.jpg</value>
    </variable>
    
    <variable name="PVRInfoThumb">
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ClearArt))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ClearArt)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Landscape))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Landscape)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Fanart))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Fanart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
    </variable>
	
	<variable name="ListItemDuration">
		<value condition="![Container.Content(Songs) | Container.Content(Musicvideos)] + !Skin.HasSetting(DisableHoursDuration) + Integer.IsGreater(ListItem.Duration(h),0)">$INFO[ListItem.Duration(h),,h ]$INFO[ListItem.Duration(m),,m]</value>
        <value condition="![Container.Content(Songs) | Container.Content(Musicvideos)] + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration(mins),, min]</value>
        <value condition="[Container.Content(Songs) | Container.Content(Musicvideos)] + Integer.IsGreater(ListItem.Duration(m),0) + ![String.IsEmpty(ListItem.Duration(m)) + String.IsEmpty(ListItem.Duration(ss))]">$INFO[ListItem.Duration(m),,m ]$INFO[ListItem.Duration(ss),,s]</value>
        <value condition="[Container.Content(Songs) | Container.Content(Musicvideos)] + Integer.IsEqual(ListItem.Duration(m),0) + !String.IsEmpty(ListItem.Duration(ss))">$INFO[ListItem.Duration(ss),, s]</value>
        <value condition="[Container.Content(Songs) | Container.Content(Musicvideos)] + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration,, min]</value>
        <value condition="[Container.Content(LiveTV) + PVR.HasEpg] + !Skin.HasSetting(DisableHoursDuration) + Integer.IsGreater(PVR.EpgEventDuration(h),0)">$INFO[PVR.EpgEventDuration,, min]</value>
        <value condition="[Container.Content(LiveTV) + PVR.HasEpg] + !String.IsEmpty(PVR.EpgEventDuration)">$INFO[PVR.EpgEventDuration(mins),, min]</value>
    </variable>

    <variable name="ListItemDurationWithEndTime">
        <value condition="!String.IsEmpty(ListItem.Duration) + !String.IsEmpty(ListItem.EndTimeResume)">$VAR[ListItemDuration] $INFO[ListItem.EndTimeResume, - $LOCALIZE[31112]: ,]</value>
		<value condition="!String.IsEmpty(ListItem.Duration) + !String.IsEmpty(ListItem.EndTime)">$VAR[ListItemDuration,, - ]$INFO[ListItem.EndTime,$LOCALIZE[31112]: ,]</value>
		<value>$VAR[ListItemDuration]</value>
    </variable>
	
	<variable name="Details">
		<value condition="!Container.content(Addons) + Window.IsActive(pictures )">$INFO[ListItem.Date,, • ]$INFO[ListItem.Size]</value>
		<value condition="Container.content(Albums)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Artist]</value>
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] + ListItem.Property(season_finale)">$INFO[ListItem.Premiered,, • ]$VAR[ListItemDuration,, • ] $LOCALIZE[31336]</value>
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] + ListItem.Property(series_finale)">$INFO[ListItem.Premiered,, • ]$VAR[ListItemDuration,, • ] $LOCALIZE[31335]</value>
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)]">$INFO[ListItem.Premiered,, • ]$VAR[ListItemDuration]</value>
		<value condition="Container.Content(Addons)">$INFO[ListItem.AddonCreator,$LOCALIZE[21863]: ] $INFO[ListItem.AddonVersion, •  $LOCALIZE[24051] ]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Genre,, • ]$INFO[ListItem.Album]</value>
		<value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(artist_genre))">$INFO[ListItem.Property(artist_genre),$LOCALIZE[515]: ]</value>
		<value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(artist_style))">$INFO[ListItem.Property(artist_style),$LOCALIZE[176]: ]</value>
		<value condition="Container.Content(MusicVideos) + [!String.IsEmpty(ListItem.Duration) | !String.IsEmpty(ListItem.Year)]">$INFO[ListItem.Year,, • ]$VAR[ListItemDuration]</value>
		<value condition="String.StartsWith(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(SkinHelper.ListItem.Year),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)]</value>
		<value condition="Container.Content(Movies) + [!String.IsEmpty(ListItem.Duration) | !String.IsEmpty(ListItem.Year) | !String.IsEmpty(ListItem.Genre)]">$INFO[ListItem.Year,, • ]$VAR[ListItemDuration]$INFO[ListItem.Genre, • ]</value>
		<value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)] + [!String.IsEmpty(ListItem.Year) | !String.IsEmpty(ListItem.MPAA) | !String.IsEmpty(ListItem.Property(TotalEpisodes))]">$INFO[ListItem.Year,, • ]$INFO[ListItem.MPAA,, • ]$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360] • ] $INFO[ListItem.Property(UnWatchedEpisodes), (,) ]</value>
		<value condition="!Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)] + [!String.IsEmpty(ListItem.Year) | !String.IsEmpty(ListItem.MPAA) | !String.IsEmpty(ListItem.Property(TotalEpisodes))]">$INFO[ListItem.Year,, • ]$INFO[ListItem.MPAA,, • ]$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360] • ]</value>
        <value condition="String.StartsWith(Window.Property(xmlfile),MyPVR)">[B]$INFO[ListItem.ChannelName,, • ][/B]$VAR[ListDateInfoPVR]</value>
 		<value condition="!String.IsEmpty(ListItem.Duration)">$VAR[ListItemDuration]</value>
		<value condition="!String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
	</variable>
	
    <variable name="ListTitle">
        <value condition="Container.Content(addons) + String.Contains(ListItem.Label2,%)">$INFO[ListItem.Label]$INFO[ListItem.Label2, (,)]</value>
        <value condition="Container.Content(albums) + !String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2] - $INFO[ListItem.Label]</value>
        <value condition="Container.Content(albums) + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist] - $INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    
    <variable name="ListTitlePVR">
        <value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
        <value condition="!String.IsEmpty(ListItem.Label)">$INFO[ListItem.Label]</value>
        <value condition="!String.IsEmpty(Container(1510).ListItem.Title)">$INFO[Container(1510).ListItem.Title]</value>
        <value condition="!String.IsEmpty(Container(1510).ListItem.Label)">$INFO[Container(1510).ListItem.Label]</value>
    </variable>
    
    <variable name="ListDatePVR">
        <value condition="Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch)">$INFO[ListItem.StartDate] $INFO[ListItem.StartTime]</value>
        <value condition="[Window.IsActive(tvchannels) | Window.IsActive(tvguide)] + !String.IsEmpty(ListItem.StartTime) + [String.IsEqual(System.Language,Arabic) | String.IsEqual(System.Language,Hebrew)]">$INFO[ListItem.EndTime] - $INFO[ListItem.StartTime]</value>
        <value condition="[Window.IsActive(tvchannels) | Window.IsActive(tvguide)] + !String.IsEmpty(ListItem.StartTime)">$INFO[ListItem.StartTime] - $INFO[ListItem.EndTime]</value>
        <value>$INFO[ListItem.StartDate] - $INFO[ListItem.StartTime]</value>
    </variable>
    
    <variable name="ListDateInfoPVR">
        <value condition="Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch)">$INFO[ListItem.Date]</value>
        <value condition="[Window.IsActive(tvchannels) | Window.IsActive(tvguide)] + !String.IsEmpty(ListItem.StartTime)">$INFO[ListItem.StartTime] - $INFO[ListItem.EndTime]</value>
        <value condition="!String.IsEmpty(ListItem.Date)">$INFO[ListItem.Date]</value>
    </variable>
    
    <variable name="ListChannelNumberPVR">
        <value condition="!String.IsEmpty(ListItem.ChannelNumberLabel)">$INFO[ListItem.ChannelNumberLabel]</value>
    </variable>  
    
    <variable name="ThumbListDetails">
        <!-- specials used in widgets -->
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + String.Contains(Container(900).ListItem.Property(widgetPath), plugin.video.youtube) | String.IsEqual(Container(900).ListItem.Property(widget), music)">$INFO[ListItem.label][CR]$INFO[ListItem.label2]</value>
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + String.IsEqual(ListItem.Property(DBTYPE), systeminfo)">[B]$INFO[ListItem.label][/B] $INFO[ListItem.label2]</value>
        <value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + [String.IsEqual(ListItem.Property(DBTYPE), tvchannel) | String.IsEqual(ListItem.Property(DBTYPE), tvrecording)]">$INFO[ListItem.Title][CR]$INFO[ListItem.label]</value>
        <value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + String.Contains(ListItem.FolderPath, pvr)">$INFO[ListItem.Title][CR]$INFO[ListItem.label]</value>
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + [String.IsEqual(ListItem.Property(DBTYPE),weather) | String.Contains(Container(900).ListItem.Property(widgetPath), weather)]">$INFO[ListItem.label]$INFO[ListItem.label2, ,]</value>
		<!-- normal items-->
        <value condition="Container.Content(tvshows) | [!String.IsEmpty(ListItem.TvShowTitle) + String.IsEqual(ListItem.TvShowTitle,ListItem.Title)]">$INFO[ListItem.label]</value>
        <value condition="Container.Content(seasons)">$INFO[ListItem.label]</value>
		<value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode) + Integer.IsGreater(ListItem.Episode,9) + Integer.IsGreater(ListItem.Season,9)">$INFO[ListItem.Title][CR]$INFO[ListItem.TvShowTitle] • [UPPERCASE]S$INFO[ListItem.Season]E$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode) + Integer.IsGreater(ListItem.Episode,9)">$INFO[ListItem.Title][CR]$INFO[ListItem.TvShowTitle] • [UPPERCASE]S0$INFO[ListItem.Season]E$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode) + Integer.IsGreater(ListItem.Season,9)">$INFO[ListItem.Title][CR]$INFO[ListItem.TvShowTitle] • [UPPERCASE]S$INFO[ListItem.Season]E0$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.Title][CR]$INFO[ListItem.TvShowTitle] • [UPPERCASE]S0$INFO[ListItem.Season]E0$INFO[ListItem.Episode][/UPPERCASE]</value>
		
        <value condition="Window.IsActive(tvchannels)">$INFO[ListItem.Title,[B],[/B]]$VAR[ListDatePVR,[CR]]</value>
        <value condition="[Window.IsActive(tvchannels) | Window.IsActive(tvguide) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch) | Window.IsActive(tvrecordings)]">$INFO[ListItem.ChannelName,, • ]$VAR[ListDatePVR]</value>
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + !String.IsEmpty(ListItem.Year)">$INFO[ListItem.label][CR]$INFO[ListItem.Year]</value>
        <value condition="String.IsEmpty(ListItem.Property(submenuVisibility))">$INFO[ListItem.label]</value>
		<value>$INFO[ListItem.label]</value>
    </variable>
    
    <variable name="ThumbListDetailsPoster">
        <!-- specials used in widgets -->
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + String.Contains(Container(900).ListItem.Property(widgetPath), plugin.video.youtube) | String.IsEqual(Container(900).ListItem.Property(widget), music)">$INFO[ListItem.label] $INFO[ListItem.label2]</value>
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + String.IsEqual(ListItem.Property(DBTYPE), systeminfo)">[B]$INFO[ListItem.label][/B] $INFO[ListItem.label2]</value>
        <value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + String.IsEqual(Container(900).ListItem.Property(widget), smart-pvr) + String.IsEqual(ListItem.Property(type),livechannel)">$INFO[ListItem.Property(title)] $INFO[ListItem.label]</value>
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + String.IsEqual(Container(900).ListItem.Property(widget), smart-pvr) + String.IsEqual(ListItem.Property(type),recorded)">$INFO[ListItem.label]</value>
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + [String.IsEqual(ListItem.Property(DBTYPE),weather) | String.Contains(Container(900).ListItem.Property(widgetPath), weather)]">$INFO[ListItem.label]$INFO[ListItem.label2, ,]</value>
		<!-- normal items-->
        <value condition="Container.Content(tvshows) | [!String.IsEmpty(ListItem.TvShowTitle) + String.IsEqual(ListItem.TvShowTitle,ListItem.Title)]">$INFO[ListItem.label]</value>
        <value condition="Container.Content(seasons)">$INFO[ListItem.label]</value>
		<value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode) + Integer.IsGreater(ListItem.Episode,9) + Integer.IsGreater(ListItem.Season,9)">$INFO[ListItem.TvShowTitle] [UPPERCASE]S$INFO[ListItem.Season]E$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode) + Integer.IsGreater(ListItem.Episode,9)">$INFO[ListItem.TvShowTitle] [UPPERCASE]S0$INFO[ListItem.Season]E$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode) + Integer.IsGreater(ListItem.Season,9)">$INFO[ListItem.TvShowTitle] [UPPERCASE]S$INFO[ListItem.Season]E0$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.TvShowTitle] [UPPERCASE]S0$INFO[ListItem.Season]E0$INFO[ListItem.Episode][/UPPERCASE]</value>
		
        <value condition="Window.IsActive(tvchannels)">$INFO[ListItem.Title,[B],[/B]] $VAR[ListDatePVR]</value>
        <value condition="[Window.IsActive(tvchannels) | Window.IsActive(tvguide) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch) | Window.IsActive(tvrecordings)]">$INFO[ListItem.ChannelName] $VAR[ListDatePVR]</value>
        <value condition="!String.IsEmpty(ListItem.Property(character))">$INFO[ListItem.label] $INFO[ListItem.Property(character),(,)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(job))">$INFO[ListItem.label] $INFO[ListItem.Property(job),(,)]</value>
        <value condition="String.IsEmpty(ListItem.Property(submenuVisibility))">$INFO[ListItem.label]</value>
		<value>$INFO[ListItem.Label]</value>
    </variable>
    
    <variable name="ThumbListDetailsSquare">
        <!-- specials used in widgets -->
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + String.Contains(Container(900).ListItem.Property(widgetPath), plugin.video.youtube) | String.IsEqual(Container(900).ListItem.Property(widget), music)">$INFO[ListItem.label] $INFO[ListItem.label2]</value>
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + String.IsEqual(ListItem.Property(DBTYPE), systeminfo)">[B]$INFO[ListItem.label][/B] $INFO[ListItem.label2]</value>
        <value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + String.IsEqual(Container(900).ListItem.Property(widget), smart-pvr) + String.IsEqual(ListItem.Property(type),livechannel)">$INFO[ListItem.Property(title)] $INFO[ListItem.label]</value>
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + String.IsEqual(Container(900).ListItem.Property(widget), smart-pvr) + String.IsEqual(ListItem.Property(type),recorded)">$INFO[ListItem.label]</value>
		<value condition="String.IsEmpty(ListItem.Property(submenuVisibility)) + [String.IsEqual(ListItem.Property(DBTYPE),weather) | String.Contains(Container(900).ListItem.Property(widgetPath), weather)]">$INFO[ListItem.label]$INFO[ListItem.label2, ,]</value>
		<!-- normal items-->
        <value condition="Container.Content(tvshows) | [!String.IsEmpty(ListItem.TvShowTitle) + String.IsEqual(ListItem.TvShowTitle,ListItem.Title)]">$INFO[ListItem.label]</value>
        <value condition="Container.Content(seasons)">$INFO[ListItem.label]</value>
		<value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode) + Integer.IsGreater(ListItem.Episode,9) + Integer.IsGreater(ListItem.Season,9)">$INFO[ListItem.TvShowTitle] [UPPERCASE]S$INFO[ListItem.Season]E$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode) + Integer.IsGreater(ListItem.Episode,9)">$INFO[ListItem.TvShowTitle] [UPPERCASE]S0$INFO[ListItem.Season]E$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode) + Integer.IsGreater(ListItem.Season,9)">$INFO[ListItem.TvShowTitle] [UPPERCASE]S$INFO[ListItem.Season]E0$INFO[ListItem.Episode][/UPPERCASE]</value>
        <value condition="!String.IsEmpty(ListItem.TvShowTitle) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.TvShowTitle] [UPPERCASE]S0$INFO[ListItem.Season]E0$INFO[ListItem.Episode][/UPPERCASE]</value>
		
        <value condition="Window.IsActive(tvchannels)">$INFO[ListItem.Title,[B],[/B]] $VAR[ListDatePVR]</value>
        <value condition="[Window.IsActive(tvchannels) | Window.IsActive(tvguide) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch) | Window.IsActive(tvrecordings)]">$INFO[ListItem.ChannelName] $VAR[ListDatePVR]</value>
        <value condition="!String.IsEmpty(ListItem.Property(character))">$INFO[ListItem.label] $INFO[ListItem.Property(character),(,)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(job))">$INFO[ListItem.label] $INFO[ListItem.Property(job),(,)]</value>
        <value condition="!String.IsEmpty(ListItem.Year)">$INFO[ListItem.label] $INFO[ListItem.Year,(,)]</value>
        <value condition="String.IsEmpty(ListItem.Property(submenuVisibility))">$INFO[ListItem.label]</value>
        <value condition="String.IsEmpty(ListItem.AddonName)">$INFO[ListItem.AddonName]</value>
		<value>$INFO[ListItem.Label]</value>
    </variable>
    
	<variable name="ListDetails">
		<value condition="!Container.content(Addons) + Window.IsActive(pictures )">$INFO[ListItem.Date,, • ]$INFO[ListItem.Size]</value>
		<value condition="Container.content(Albums)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Artist]</value>
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] + ListItem.Property(season_finale)">$INFO[ListItem.Premiered,, • ]$INFO[ListItem.Duration,, min. • ]$LOCALIZE[31336]</value>
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] + ListItem.Property(series_finale)">$INFO[ListItem.Premiered,, • ]$INFO[ListItem.Duration,, min. • ]$LOCALIZE[31335]</value>
		<value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)]">$INFO[ListItem.Premiered,, • ]$VAR[ListItemDuration,, •]$INFO[ListItem.Rating]</value> <!--  FIXED-->
		<value condition="Container.Content(addons) + !String.IsEmpty(ListItem.AddonVersion) + String.IsEmpty(ListItem.Label2)">$LOCALIZE[24051] $INFO[ListItem.AddonVersion] - $LOCALIZE[21863]: $INFO[ListItem.AddonCreator]</value>
        <value condition="Container.Content(addons) + !String.IsEmpty(ListItem.AddonVersion) + !String.IsEmpty(ListItem.Label2)">$LOCALIZE[24051] $INFO[ListItem.AddonVersion] - $LOCALIZE[21863]: $INFO[ListItem.AddonCreator] - $INFO[ListItem.Label2]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Genre,, • ]$INFO[ListItem.Album]$INFO[ListItem.Duration, • ]</value>
		<value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(artist_genre))">$INFO[ListItem.Property(artist_genre),$LOCALIZE[515]: ]</value>
		<value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(artist_style))">$INFO[ListItem.Property(artist_style),$LOCALIZE[176]: ]</value>
		<value condition="Container.Content(MusicVideos) + [!String.IsEmpty(ListItem.Duration) | !String.IsEmpty(ListItem.Year)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.Duration]</value>
		<value condition="String.Contains(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(SkinHelper.ListItem.Year),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)]</value>
		<value condition="Container.Content(Movies) + [!String.IsEmpty(ListItem.Duration) | !String.IsEmpty(ListItem.Year) | !String.IsEmpty(ListItem.Genre)]">$INFO[ListItem.Year,, • ]$VAR[ListItemDuration]$INFO[ListItem.Genre, • ]</value>	 <!-- FIXED, but interesting is , if !String.IsEmpty(ListItem.Duration) its strange result in label (director etc) -->
		<value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)] + [!String.IsEmpty(ListItem.Year) | !String.IsEmpty(ListItem.MPAA) | !String.IsEmpty(ListItem.Property(TotalEpisodes))]">$INFO[ListItem.Year,, • ]$INFO[ListItem.MPAA,, • ]$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360]: ] $INFO[ListItem.Property(UnWatchedEpisodes), (,) ]</value>
		<value condition="!Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)] + [!String.IsEmpty(ListItem.Year) | !String.IsEmpty(ListItem.MPAA) | !String.IsEmpty(ListItem.Property(TotalEpisodes))]">$INFO[ListItem.Year,, • ]$INFO[ListItem.MPAA,, • ]$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360]: ]</value>

        <!-- PVR -->
        <value condition="Window.IsActive(tvchannels)">$INFO[ListItem.Title,, • ]$VAR[ListDatePVR]</value>
        <value condition="[Window.IsActive(tvchannels) | Window.IsActive(tvguide) | Window.IsActive(tvtimers) | Window.IsActive(tvsearch) | Window.IsActive(tvrecordings)]">$INFO[ListItem.ChannelName,, • ]$VAR[ListDatePVR]</value>
        <!-- movies -->
        <value condition="[Container.Content(movies) | Container.Content(musicvideos)] + !String.StartsWith(ListItem.Path,videodb://1/7)">$INFO[ListItem.Duration,[B]$LOCALIZE[180]:[/B] ,min.]$INFO[ListItem.Director, - [B]$LOCALIZE[20339]:[/B] ]</value>
        <value condition="String.StartsWith(ListItem.Path,videodb://1/7)">$LOCALIZE[20457]</value>

        <value condition="Container.Content(tvshows) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360, - ]: ]$INFO[ListItem.Property(UnWatchedEpisodes),$LOCALIZE[16101]: ]</value>
        <value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.TVShowTitle,, - ]$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360]: , - ]$INFO[ListItem.Property(UnWatchedEpisodes),$LOCALIZE[16101]: ]</value>
        <value condition="[Container.Content(episodes) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)]">$INFO[ListItem.Duration,$LOCALIZE[180]: ,min.]$INFO[ListItem.TVShowTitle, - ]</value>
        <value condition="Container.Content(artists) + !String.IsEmpty(ListItem.Property(Artist_YearsActive))">$INFO[ListItem.Property(Artist_YearsActive),$LOCALIZE[21898]: ]</value>
        <value condition="!String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration, ,min. • ]</value>
		<value condition="!String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
 	</variable>
    
    <variable name="PVRChannelName">
        <value condition="!String.IsEmpty(ListItem.ChannelName)">$INFO[ListItem.ChannelName]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.ChannelName))">$INFO[Window(Home).property(SkinHelper.ListItem.ChannelName)]</value>
    </variable>
    
    <variable name="PVRGenre">
        <value condition="!String.IsEmpty(ListItem.Genre)">$INFO[ListItem.Genre]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Genre))">$INFO[Window(Home).property(SkinHelper.ListItem.Genre)]</value>
    </variable>
  
  <variable name="Plots">
    <value condition="String.IsEqual(ListItem.Label,..)"/>
    <value condition="Container.content(addons) + !String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>
    <value condition="Container.Content(Seasons) + !String.IsEmpty(ListItem.Plot) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Plot]</value>
	<value condition="Container.Content(Seasons) + !String.IsEmpty(Container.ShowPlot) + !String.IsEmpty(ListItem.Title)">$INFO[Container.ShowPlot]</value>
    <value condition="Container.Content(albums) + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
    <value condition="Container.Content(artists) + !String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
    <value condition="Container.Content(songs) + !String.IsEmpty(ListItem.Comment)">$INFO[ListItem.Comment]</value>
	<value condition="Container.Content(songs) + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
	<value condition="Container.Content(songs) + !String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
    <value condition="Window.IsActive(tvchannels) + !String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Season,S,]$INFO[ListItem.Episode,E, - ]$INFO[ListItem.EpisodeName,,[CR]]$INFO[ListItem.Plot]$INFO[Container.ListItem.NextTitle,[CR][CR][B]$LOCALIZE[19031]: [/B]]</value>
    <value condition="Window.IsActive(pictures ) + !String.IsEmpty(ListItem.PictureDesc)">$INFO[ListItem.PictureDesc]</value>
    <value condition="Window.IsActive(pictures ) + !String.IsEmpty(ListItem.PictureComment)">$INFO[ListItem.PictureComment]</value>
    <value condition="Window.IsActive(pictures ) + !String.IsEmpty(ListItem.PictureKeywords)">$INFO[ListItem.PictureKeywords]</value>
	<value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
    <value condition="!String.IsEmpty(ListItem.Property(Plot))">$INFO[ListItem.Property(Plot)]</value>
	<value condition="!String.IsEmpty(ListItem.Comment)">$INFO[ListItem.Comment]</value>
    <value condition="!String.IsEmpty(Window(Home).property(SkinHelper.ListItem.ExtendedPlot))">$INFO[Window(Home).property(SkinHelper.ListItem.ExtendedPlot)]</value>
    <value condition="!String.IsEmpty(Window(Home).property(SkinHelper.ListItem.Plot))">$INFO[Window(Home).property(SkinHelper.ListItem.Plot)]</value>
  </variable>
    
   <variable name="HomeButtonDownAction">
		<value condition="!Skin.HasSetting(DisableAllSubmenus) + !String.IsEmpty(Container(900).ListItem.Property(widget)) + [String.IsEqual(Skin.String(HomeLayout),2) + [String.IsEqual(Container(900).Position,1) | String.IsEqual(Container(900).Position,3) | String.IsEqual(Container(900).Position,5)]]">$VAR[focusWidget]</value>
        <value condition="!Skin.HasSetting(DisableAllSubmenus) + !String.IsEmpty(Container(900).ListItem.Property(widget)) + [String.IsEqual(Skin.String(HomeLayout),2small) + [String.IsEqual(Container(900).Position,1) | String.IsEqual(Container(900).Position,3) | String.IsEqual(Container(900).Position,5) | String.IsEqual(Container(900).Position,7) | String.IsEqual(Container(900).Position,9)]]">$VAR[focusWidget]</value>
		<value condition="!Skin.HasSetting(DisableAllSubmenus) + !String.IsEmpty(Container(900).ListItem.Property(hasSubmenu)) + String.Contains(Container(900).ListItem.Property(hasSubmenu), True) + [Integer.IsGreater(Container(4444).NumItems,0) | Integer.IsGreater(Container(4445).NumItems,0)] + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)]">Control.SetFocus(4444,0)</value>
		<value condition="!Skin.HasSetting(DisablePowerMenu)">ActivateWindow(ShutdownMenu)</value>
   </variable>
   
   <variable name="HomeButtonUpAction">
		<value condition="!Skin.HasSetting(DisableAllWidgets) + !String.IsEmpty(Container(900).ListItem.Property(widget)) + String.IsEqual(Skin.String(HomeLayout),2) + [String.IsEqual(Container(900).Position,0) | String.IsEqual(Container(900).Position,2) | String.IsEqual(Container(900).Position,4)]">$VAR[focusWidget]</value>
        <value condition="!Skin.HasSetting(DisableAllWidgets) + !String.IsEmpty(Container(900).ListItem.Property(widget)) + String.IsEqual(Skin.String(HomeLayout),2small) + [String.IsEqual(Container(900).Position,0) | String.IsEqual(Container(900).Position,2) | String.IsEqual(Container(900).Position,4) | String.IsEqual(Container(900).Position,6) | String.IsEqual(Container(900).Position,8)]">$VAR[focusWidget]</value>
        <value condition="!Skin.HasSetting(DisableAllWidgets) + !String.IsEmpty(Container(900).ListItem.Property(widget)) + [String.IsEqual(Skin.String(HomeLayout),1) | String.IsEqual(Skin.String(HomeLayout),1small)]">$VAR[focusWidget]</value>
        <value condition="!Skin.HasSetting(DisableAllWidgets) + !String.IsEmpty(Container(900).ListItem.Property(widget))">$VAR[focusWidget]</value>
		<value condition="Skin.HasSetting(ShowProfile)">Control.SetFocus(890,0)</value>
   </variable>
  
    <variable name="ProfileLabel">
		<value condition="!Control.HasFocus(890)">$INFO[System.ProfileName]</value>
		<value condition="Control.HasFocus(890)">[B]$INFO[System.ProfileName][/B]</value>
   </variable>
   
   <variable name="ViewDetailsFocusColor">
        <value condition="$EXP[IsBingieViewsActive]">$INFO[Skin.String(HomeViewDetailsFocusColor)]</value>
        <value>$INFO[Skin.String(ViewDetailsFocusColor)]</value>
   </variable>

    <variable name="ViewDetailsBorderFocusColor">
        <value condition="$EXP[IsBingieViewsActive]">$INFO[Skin.String(HomeViewDetailsBorderFocusColor)]</value>
        <value>$INFO[Skin.String(ViewDetailsBorderFocusColor)]</value>
    </variable>
   
   <variable name="ViewDetailsPanelColor">
        <value condition="Window.IsActive(script-skin_helper_service-CustomInfo.xml)">$INFO[Skin.String(ViewDetailsPanelColor)]</value>
        <value condition="$EXP[IsBingieViewsActive] + Skin.String(HomeWidgetsBorderColor)">$INFO[Skin.String(HomeWidgetsBorderColor)]</value>
        <value condition="$EXP[IsBingieViewsActive]">$INFO[Skin.String(GeneralPanelsColor)]</value>
        <value>$INFO[Skin.String(ViewDetailsPanelColor)]</value>
   </variable>
   
   <variable name="ViewDetailsTextColor">
        <value condition="$EXP[IsBingieViewsActive]">$INFO[Skin.String(GeneralTextColor)]</value>
        <value>$INFO[Skin.String(ViewDetailsTextColor)]</value>
   </variable>
         
   <variable name="VideoPlayerClearArt">
	<value condition="!String.IsEmpty(Player.Art(tvshow.clearart))">$INFO[Player.Art(tvshow.clearart)]</value>
	<value condition="!String.IsEmpty(Player.Art(clearart))">$INFO[Player.Art(clearart)]</value>
	<value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
	<value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
    <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.ClearArt))">$INFO[Window(Home).Property(SkinHelper.Player.Art.ClearArt)]</value>
	<value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.ClearLogo))">$INFO[Window(Home).Property(SkinHelper.Player.Art.ClearLogo)]</value>
   </variable>
   
   <variable name="VideoPlayerPoster">
	<value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
	<value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
	<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
	<value>$INFO[Player.Art(thumb)]</value>
   </variable>
	 
	 <variable name="OSDInfoImage">
         <value condition="!String.IsEmpty(Player.Art(clearart))">$INFO[Player.Art(clearart)]</value>
         <value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
         <value condition="!String.IsEmpty(Player.Art(tvshow.clearart))">$INFO[Player.Art(tvshow.clearart)]</value>
         <value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
         <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
         <value condition="!String.IsEmpty(Player.Art(thumb))">$INFO[Player.Art(thumb)]</value>
         <value condition="!String.IsEmpty(Player.Icon)">$INFO[Player.Icon]</value>
         <value>DefaultVideo.png</value>
	 </variable>
	 
	 <variable name="VideoPlayerClearLogo">
		<value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
	 </variable>

	 <variable name="NextAiredLabel">
		<value condition="String.IsEqual(System.Date(ddd),ListItem.Property(day))">$INFO[ListItem.Label] *</value>
		<value>$INFO[ListItem.Label]</value>
	 </variable>
	      
     <variable name="AudioPlayerCoverImage">
        <value condition="String.EndsWith(MusicPlayer.Cover,.tbn)">$INFO[MusicPlayer.Cover]</value>
        <value condition="!String.IsEmpty(MusicPlayer.Cover) + !String.StartsWith(MusicPlayer.Cover,Default) + Player.HasDuration">$INFO[MusicPlayer.Cover]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.AlbumThumb))">$INFO[Window(Home).Property(SkinHelper.Player.Art.AlbumThumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Thumb))">$INFO[Window(Home).Property(SkinHelper.Player.Art.Thumb)]</value>
        <value>$INFO[MusicPlayer.Cover]</value>
	 </variable>
     
     <variable name="MusicCoverImage">
        <value condition="!String.IsEmpty(ListItem.Art(thumb)) + !String.StartsWith(ListItem.Art(thumb),Default)">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Thumb)]</value>
        <value>$INFO[ListItem.Icon]</value>
	 </variable>
	 
	 <variable name="DiscArtImage">
        <value condition="!String.IsEmpty(ListItem.Art(discart))">$INFO[ListItem.Art(discart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.DiscArt))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.DiscArt)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.0.DiscArt))">$INFO[Window(Home).Property(SkinHelper.ListItem.0.DiscArt)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.1.DiscArt))">$INFO[Window(Home).Property(SkinHelper.ListItem.1.DiscArt)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.2.DiscArt))">$INFO[Window(Home).Property(SkinHelper.ListItem.2.DiscArt)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(landscape)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Landscape)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Fanart)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Fanart)]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Thumb)]</value>
	 </variable>
     
     <variable name="PlayerDiscArtImage">
        <value condition="!String.IsEmpty(Player.Art(discart))">$INFO[Player.Art(discart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.DiscArt))">$INFO[Window(Home).Property(SkinHelper.Player.Art.DiscArt)]</value>
		<value condition="!String.IsEmpty(Player.Art(landscape)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[Player.Art(landscape)]</value>
		<value condition="!String.IsEmpty(Player.Art(fanart)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[Player.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Player.Art(poster)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[Player.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.FanArt)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[Window(Home).Property(SkinHelper.Player.Art.FanArt)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Thumb)) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[Window(Home).Property(SkinHelper.Player.Art.Thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster)) + !String.Contains(ListItem.Art(poster),Default) + Skin.HasSetting(EnableFakeDiscArt)">$INFO[ListItem.Art(poster)]</value>
	 </variable>

    <!-- unused -->
	 <variable name="showHiddenPVRLabel">
		<value condition="Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings)">$LOCALIZE[19184]</value>
		<value>$LOCALIZE[19051]</value>
	 </variable>
	 
	 <variable name="OSDProgressBarBackgroundColor">
		<value condition="Skin.String(OSDProgressBarBackgroundColor,None)">00ffffff</value>
		<value>$INFO[Skin.String(OSDProgressBarBackgroundColor)]</value>
	 </variable>
     
     <variable name="PVRGuideListItemTextColor">
		<value condition="Skin.HasSetting(ShowEpgGenreColors)">$INFO[Skin.String(ViewDetailsTextColor)]</value>
		<value>$INFO[Skin.String(ButtonTextColor)]</value>
	 </variable>
     
     <variable name="WeatherIconsExtension">
       <value condition="Skin.HasSetting(WeatherIconPack.multi)">/</value>
       <value>.png</value>
     </variable>
     
     <variable name="WeatherFanArtExtension">
       <value condition="Skin.HasSetting(WeatherFanArtPack.multi)">/</value>
       <value>.jpg</value>
     </variable>
     
     <variable name="WeatherFanArtSingleImage_Day0">
       <value condition="Skin.HasSetting(WeatherFanArtPack.multi)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day0.fanartCode)]/weather-$INFO[Window(Weather).Property(Day0.fanartCode)]-00.jpg</value>
       <value>$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day0.fanartCode)].jpg</value>
     </variable>
     <variable name="WeatherFanArtSingleImage_Day1">
       <value condition="Skin.HasSetting(WeatherFanArtPack.multi)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day1.fanartCode)]/weather-$INFO[Window(Weather).Property(Day1.fanartCode)]-00.jpg</value>
       <value>$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day1.fanartCode)].jpg</value>
     </variable>
     <variable name="WeatherFanArtSingleImage_Day2">
       <value condition="Skin.HasSetting(WeatherFanArtPack.multi)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day2.fanartCode)]/weather-$INFO[Window(Weather).Property(Day2.fanartCode)]-00.jpg</value>
       <value>$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day2.fanartCode)].jpg</value>
     </variable>
     <variable name="WeatherFanArtSingleImage_Day3">
       <value condition="Skin.HasSetting(WeatherFanArtPack.multi)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day3.fanartCode)]/weather-$INFO[Window(Weather).Property(Day3.fanartCode)]-00.jpg</value>
       <value>$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day3.fanartCode)].jpg</value>
     </variable>
     <variable name="WeatherFanArtSingleImage_Day4">
       <value condition="Skin.HasSetting(WeatherFanArtPack.multi)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day4.fanartCode)]/weather-$INFO[Window(Weather).Property(Day4.fanartCode)]-00.jpg</value>
       <value>$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day4.fanartCode)].jpg</value>
     </variable>
     <variable name="WeatherFanArtSingleImage_Day5">
       <value condition="Skin.HasSetting(WeatherFanArtPack.multi)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day5.fanartCode)]/weather-$INFO[Window(Weather).Property(Day5.fanartCode)]-00.jpg</value>
       <value>$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day5.fanartCode)].jpg</value>
     </variable>
     <variable name="WeatherFanArtSingleImage_Day6">
       <value condition="Skin.HasSetting(WeatherFanArtPack.multi)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day6.fanartCode)]/weather-$INFO[Window(Weather).Property(Day6.fanartCode)]-00.jpg</value>
       <value>$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Day6.fanartCode)].jpg</value>
     </variable>
     <variable name="WeatherFanArtSingleImage_Current">
       <value condition="Skin.HasSetting(WeatherFanArtPack.multi)">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.fanartCode)]/weather-$INFO[Window(Weather).Property(Current.fanartCode)]-00.jpg</value>
       <value>$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.fanartCode)].jpg</value>
     </variable>
     
     <variable name="WeatherIconSingleImage_Day0">
       <value condition="Skin.HasSetting(WeatherIconPack.multi)">$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day0.fanartCode)]/weather-$INFO[Window(Weather).Property(Day0.fanartCode)]_01.png</value>
       <value>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day0.FanartCode)]$VAR[WeatherIconsExtension]</value>
     </variable>
     <variable name="WeatherIconSingleImage_Day1">
       <value condition="Skin.HasSetting(WeatherIconPack.multi)">$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day1.fanartCode)]/weather-$INFO[Window(Weather).Property(Day1.fanartCode)]_01.png</value>
       <value>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day1.FanartCode)]$VAR[WeatherIconsExtension]</value>
     </variable>
     <variable name="WeatherIconSingleImage_Day2">
       <value condition="Skin.HasSetting(WeatherIconPack.multi)">$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day2.fanartCode)]/weather-$INFO[Window(Weather).Property(Day2.fanartCode)]_01.png</value>
       <value>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day2.FanartCode)]$VAR[WeatherIconsExtension]</value>
     </variable>
     <variable name="WeatherIconSingleImage_Day3">
       <value condition="Skin.HasSetting(WeatherIconPack.multi)">$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day3.fanartCode)]/weather-$INFO[Window(Weather).Property(Day3.fanartCode)]_01.png</value>
       <value>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day3.FanartCode)]$VAR[WeatherIconsExtension]</value>
     </variable>
     <variable name="WeatherIconSingleImage_Day4">
       <value condition="Skin.HasSetting(WeatherIconPack.multi)">$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day4.fanartCode)]/weather-$INFO[Window(Weather).Property(Day4.fanartCode)]_01.png</value>
       <value>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day4.FanartCode)]$VAR[WeatherIconsExtension]</value>
     </variable>
     <variable name="WeatherIconSingleImage_Day5">
       <value condition="Skin.HasSetting(WeatherIconPack.multi)">$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day5.fanartCode)]/weather-$INFO[Window(Weather).Property(Day5.fanartCode)]_01.png</value>
       <value>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day5.FanartCode)]$VAR[WeatherIconsExtension]</value>
     </variable>
     <variable name="WeatherIconSingleImage_Day6">
       <value condition="Skin.HasSetting(WeatherIconPack.multi)">$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day6.fanartCode)]/weather-$INFO[Window(Weather).Property(Day6.fanartCode)]_01.png</value>
       <value>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Day6.FanartCode)]$VAR[WeatherIconsExtension]</value>
     </variable>
     <variable name="WeatherIconSingleImage_Current">
       <value condition="Skin.HasSetting(WeatherIconPack.multi)">$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Current.fanartCode)]/weather-$INFO[Window(Weather).Property(Current.fanartCode)]_01.png</value>
       <value>$INFO[Skin.String(WeatherIconPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherIconsExtension]</value>
     </variable>
     
     <variable name="MovieGenreIconVar">
       <value condition="String.Contains(Skin.String(MovieGenreIconPack.ext), png)">$INFO[Skin.String(MovieGenreIconPack.path)]$INFO[ListItem.Label,,.png]</value>
       <value condition="Skin.String(MovieGenreIconPack.path)">$INFO[Skin.String(MovieGenreIconPack.path)]$INFO[ListItem.Label,,.jpg]</value>
       <value>DefaultGenre.png</value>
     </variable>
     
     <variable name="MovieGenreIconVarList">
       <!-- infolabels are not supported within a container item layout so we define all known resource addons manually-->
         <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.bingie/)">resource://resource.images.moviegenreicons.bingie/$INFO[ListItem.Label].jpg</value>
         <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.poster/)">resource://resource.images.moviegenreicons.poster/$INFO[ListItem.Label].jpg</value>
         <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.coloured/)">resource://resource.images.moviegenreicons.coloured/$INFO[ListItem.Label].jpg</value>
         <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.white/)">resource://resource.images.moviegenreicons.white/$INFO[ListItem.Label].jpg</value>
         <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.transparent/)">resource://resource.images.moviegenreicons.transparent/$INFO[ListItem.Label].jpg</value>
         <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.grey/)">resource://resource.images.moviegenreicons.grey/$INFO[ListItem.Label].jpg</value>
         <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.filmstrip/)">resource://resource.images.moviegenreicons.filmstrip/$INFO[ListItem.Label].jpg</value>
         <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.arctic.zephyr/)">resource://resource.images.moviegenreicons.arctic.zephyr/$INFO[ListItem.Label].png</value>
         <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.xzener-flat/)">resource://resource.images.moviegenreicons.xzener-flat/$INFO[ListItem.Label].png</value>
         <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.xzener-reflection/)">resource://resource.images.moviegenreicons.xzener-reflection/$INFO[ListItem.Label].png</value>
         <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.arctic.zephyr/)">resource://resource.images.moviegenreicons.arctic.zephyr/$INFO[ListItem.Label].png</value>
         <!-- last resort: use webservice - will only work for non-texture packed resource addons or manual folders -->
         <value condition="Skin.String(MovieGenreIconPack.path)">http://localhost:52307/getvarimage&amp;title=$INFO{Skin.String(MovieGenreIconPack.path)}$INFO[ListItem.Label]$INFO{Skin.String(MovieGenreIconPack.ext)}&amp;fallback=DefaultGenre.png</value>
         <value>DefaultGenre.png</value>
     </variable>
     
     <variable name="MusicGenreIconVar">
       <value condition="String.Contains(Skin.String(MusicGenreIconPack.ext), png)">$INFO[Skin.String(MusicGenreIconPack.path)]$INFO[ListItem.Label,,.png]</value>
       <value condition="Skin.String(MusicGenreIconPack.path)">$INFO[Skin.String(MusicGenreIconPack.path)]$INFO[ListItem.Label,,.jpg]</value>
       <value>DefaultGenre.png</value>
     </variable>
     
     <variable name="MusicGenreIconVarList">
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.text/)">resource://resource.images.musicgenreicons.text/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.grey/)">resource://resource.images.musicgenreicons.grey/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.poster/)">resource://resource.images.musicgenreicons.poster/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.coloured/)">resource://resource.images.musicgenreicons.coloured/$INFO[ListItem.Label].jpg</value>
       <!-- last resort: use webservice - will only work for non-texture packed resource addons or manual folders -->
       <value condition="Skin.String(MusicGenreIconPack.path)">http://localhost:52307/getvarimage&amp;title=$INFO{Skin.String(MusicGenreIconPack.path)}$INFO[ListItem.Label]$INFO{Skin.String(MusicGenreIconPack.ext)}&amp;fallback=DefaultGenre.png</value>
       <value>DefaultGenre.png</value>
     </variable>
     
     <variable name="LanguageFlagIconPath">
         <value condition="System.HasAddon(resource.images.languageflags.colour) + Skin.String(LanguageFlags.path, resource://resource.images.languageflags.colour/)">resource://resource.images.languageflags.colour/</value>
         <value condition="System.HasAddon(resource.images.languageflags.completepack) + Skin.String(LanguageFlags.path, resource://resource.images.languageflags.completepack/)">resource://resource.images.languageflags.completepack/</value>
         <!-- no preference set -->
         <value condition="System.HasAddon(resource.images.languageflags.colour)">resource://resource.images.languageflags.colour/</value>
         <value condition="System.HasAddon(resource.images.languageflags.completepack)">resource://resource.images.languageflags.completepack/</value>
     </variable>
     
     <variable name="similarInfo">
		<value condition="!String.IsEmpty(ListItem.IMDBNumber) + !String.IsEmpty(ListItem.TvShowTitle)">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=tvshows&amp;imdbid=$INFO[ListItem.IMDBNumber]&amp;limit=10</value>
		<value condition="!String.IsEmpty(ListItem.IMDBNumber)">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;imdbid=$INFO[ListItem.IMDBNumber]&amp;limit=10</value>
        <value condition="!String.IsEmpty(ListItem.Property(IMDBNumber)) + !String.IsEmpty(ListItem.TvShowTitle)">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=tvshows&amp;imdbid=$INFO[ListItem.Property(IMDBNumber)]&amp;limit=10</value>
		<value condition="!String.IsEmpty(ListItem.Property(IMDBNumber))">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;imdbid=$INFO[ListItem.Property(IMDBNumber)]&amp;limit=10</value>
	 </variable>
     
     <variable name="castInfo">
		<value condition="!String.IsEmpty(ListItem.DBTYPE) + !String.IsEmpty(ListItem.DBID)">plugin://script.skin.helper.service/?action=getcast&amp;$INFO[ListItem.DBTYPE]=$INFO[ListItem.DBID]&amp;downloadthumbs=$INFO[Skin.String(actorthumbslookup)]&amp;castaction=$INFO[Skin.String(videoinfo_castaction)]</value>
        <value condition="!String.IsEmpty(ListItem.DBTYPE)">plugin://script.skin.helper.service/?action=getcast&amp;$INFO[ListItem.DBTYPE]=$INFO[ListItem.Title]&amp;downloadthumbs=$INFO[Skin.String(actorthumbslookup)]&amp;castaction=$INFO[Skin.String(videoinfo_castaction)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(DBTYPE)) + !String.IsEmpty(ListItem.Property(DBID))">plugin://script.skin.helper.service/?action=getcast&amp;$INFO[ListItem.Propery(DBTYPE)]=$INFO[ListItem.Propery(DBID)]&amp;downloadthumbs=$INFO[Skin.String(actorthumbslookup)]&amp;castaction=$INFO[Skin.String(videoinfo_castaction)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(DBTYPE))">plugin://script.skin.helper.service/?action=getcast&amp;$INFO[ListItem.Propery(DBTYPE)]=$INFO[ListItem.Title]&amp;downloadthumbs=$INFO[Skin.String(actorthumbslookup)]&amp;castaction=$INFO[Skin.String(videoinfo_castaction)]</value>
        <value condition="!String.IsEmpty(Container.Content)">plugin://script.skin.helper.service/?action=getcast&amp;$INFO[Container.Content]=$INFO[ListItem.Title]&amp;downloadthumbs=$INFO[Skin.String(actorthumbslookup)]&amp;castaction=$INFO[Skin.String(videoinfo_castaction)]</value>
     </variable>
     
     <variable name="channellogo">
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
		<value condition="Window.IsActive(tvchannels) | Window.IsActive(tvguide)">$INFO[ListItem.Icon]</value>
     </variable>
     
     <variable name="widgetrowslabel">
        <value condition="String.IsEqual(Container(211).ListItem.Property(multiwidget),single2) + !$EXP[IsVerticalLayout]">$LOCALIZE[31751]</value>
        <value condition="String.IsEqual(Container(211).ListItem.Property(multiwidget),multi2) + !$EXP[IsVerticalLayout]">$LOCALIZE[31753]</value>
        <value condition="!String.IsEmpty(Container(211).ListItem.Property(multiwidget.name))">$INFO[Container(211).ListItem.Property(multiwidget.name)]</value>
        <value>$LOCALIZE[31753]</value>
     </variable>
     
     <variable name="listitem_genre">
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Genre))">$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Genre))">$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)]</value>
        <value>$INFO[ListItem.Genre]</value>
     </variable>

     
     <variable name="osdpanelimage">
        <value condition="Skin.HasSetting(osdgradientstyle)">diffuse/gradient.png</value>
        <value>diffuse/panel.png</value>
     </variable>
     
     <variable name="infolinevar">
        <value condition="String.IsEqual(Container(900).ListItem.Property(infoline),library_info) | [!Window.IsActive(Home) + Skin.String(infoline,library_info)]">[B]$LOCALIZE[20342]: [/B]$INFO[Window(Home).Property(Movies.Count)]  •  [B]$LOCALIZE[20343]: [/B]$INFO[Window(Home).Property(TVShows.Count)]  •  [B]$LOCALIZE[24001]: [/B]$INFO[Window(Home).Property(SkinHelper.TotalAddons)]</value>
        <value condition="String.IsEqual(Container(900).ListItem.Property(InfoLine),movie_library) | [!Window.IsActive(Home) + Skin.String(infoline,movie_library)]">[B]$LOCALIZE[20342]: [/B]$INFO[Window(Home).Property(Movies.Count)][B]  •  $LOCALIZE[16102]: [/B]$INFO[Window(Home).Property(Movies.Watched)][B]  •  $LOCALIZE[16101]: [/B]$INFO[Window(Home).Property(Movies.UnWatched)]</value>
		<value condition="String.IsEqual(Container(900).ListItem.Property(InfoLine),tvshows_library) | [!Window.IsActive(Home) + Skin.String(infoline,tvshows_library)]">[B]$LOCALIZE[20343]: [/B]$INFO[Window(Home).Property(TVShows.Count)][B]  •  $LOCALIZE[20360]: [/B]$INFO[Window(Home).Property(Episodes.Count)][B]  •  $LOCALIZE[16101]: [/B]$INFO[Window(Home).Property(Episodes.UnWatched)]</value>
		<value condition="String.IsEqual(Container(900).ListItem.Property(InfoLine),music_library) | [!Window.IsActive(Home) + Skin.String(infoline,music_library)]">[B]$LOCALIZE[133]: [/B]$INFO[Window(Home).Property(Music.ArtistsCount)][B]  •  $LOCALIZE[132]: [/B]$INFO[Window(Home).Property(Music.AlbumsCount)][B]  •  $LOCALIZE[134]: [/B]$INFO[Window(Home).Property(Music.SongsCount)]</value>
		<value condition="[String.IsEqual(Container(900).ListItem.Property(InfoLine),pvr) | [!Window.IsActive(Home) + Skin.String(infoline,pvr)]] + PVR.IsRecording">[B]$LOCALIZE[19158]: [/B]$INFO[PVR.NowRecordingDateTime][B]  •  $LOCALIZE[19029]: [/B]$INFO[PVR.NowRecordingTitle] ($INFO[PVR.NowRecordingChannel])</value>
		<value condition="[String.IsEqual(Container(900).ListItem.Property(InfoLine),pvr) | [!Window.IsActive(Home) + Skin.String(infoline,pvr)]] + PVR.HasNonRecordingTimer">[B]$LOCALIZE[19157]: [/B]$INFO[PVR.NextRecordingDateTime][B]  •  $LOCALIZE[19029]: [/B]$INFO[PVR.NextRecordingTitle] ($INFO[PVR.NextRecordingChannel])</value>
		<value condition="String.IsEqual(Container(900).ListItem.Property(InfoLine),pvr) | [!Window.IsActive(Home) + Skin.String(infoline,pvr)]">[B]$LOCALIZE[19019]: [/B]$INFO[Pvr.BackendChannels][B]  •  $LOCALIZE[19163]: [/B]$INFO[Pvr.BackendRecordings]</value>
		<value condition="String.IsEqual(Container(900).ListItem.Property(InfoLine),weather) | [!Window.IsActive(Home) + Skin.String(infoline,weather)]">[B]$INFO[Weather.Location]: [/B]$INFO[Weather.Conditions]</value>
		<value condition="String.IsEqual(Container(900).ListItem.Property(InfoLine),musicvideo_library) | [!Window.IsActive(Home) + Skin.String(infoline,musicvideo_library)]">[B]$LOCALIZE[20389]: [/B]$INFO[Window(Home).Property(MusicVideos.Count)][B]  •  $LOCALIZE[16102]: [/B]$INFO[Window(Home).Property(MusicVideos.Watched)][B]  •  $LOCALIZE[16101]: [/B]$INFO[Window(Home).Property(MusicVideos.UnWatched)]</value>
		<value condition="String.IsEqual(Container(900).ListItem.Property(InfoLine),sysinfo) | [!Window.IsActive(Home) + Skin.String(infoline,sysinfo)]">[B]$LOCALIZE[31257] [/B]$INFO[System.memory(used.percent)][B]  •  $LOCALIZE[13271] [/B]$INFO[System.CPUUsage]</value>
        <value condition="String.IsEqual(Container(900).ListItem.Property(InfoLine),addonsinfo) | [!Window.IsActive(Home) + Skin.String(infoline,addonsinfo)]">[B]$LOCALIZE[20161] $LOCALIZE[24001]: [/B]$INFO[Window(Home).Property(SkinHelper.TotalAddons)][B]  •  [/B][B]$LOCALIZE[1036]: [/B]$INFO[Window(Home).Property(SkinHelper.TotalFavourites)]</value>
        <value condition="String.IsEqual(Container(900).ListItem.Property(InfoLine),backgroundtitle)">$VAR[infoline_background]</value>
        <value condition="!Window.IsActive(Home) + Skin.String(infoline,title)">$INFO[ListItem.Title]</value>
        <value condition="!Window.IsActive(Home) + Skin.String(infoline,totalsortby)">$INFO[Container.NumItems,, $LOCALIZE[31034]] $INFO[Control.GetLabel(3),• ]</value>
        <value condition="!Window.IsActive(Home) + Skin.String(infoline,total)">$INFO[Container.NumItems,, $LOCALIZE[31034]]</value>
     </variable>
     
     <variable name="infoline_background">
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.AllMoviesBackground))">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.AllTvShowsBackground))">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.AllMusicVideosBackground))">$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.RecentMusicBackground))">$INFO[Window(Home).Property(SkinHelper.RecentMusicBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.AllMusicBackground))">$INFO[Window(Home).Property(SkinHelper.AllMusicBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.GlobalFanartBackground))">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.InProgressMoviesBackground))">$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.RecentMoviesBackground))">$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.UnwatchedMoviesBackground))">$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.InProgressShowsBackground))">$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.RecentEpisodesBackground))">$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.AllVideosBackground))">$INFO[Window(Home).Property(SkinHelper.AllVideosBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.RecentVideosBackground))">$INFO[Window(Home).Property(SkinHelper.RecentVideosBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.InProgressVideosBackground))">$INFO[Window(Home).Property(SkinHelper.InProgressVideosBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.PvrBackground))">$INFO[Window(Home).Property(SkinHelper.PvrBackground.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.PicturesBackground))">$INFO[Window(Home).Property(SkinHelper.PicturesBackground.Title)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.0.image))">$INFO[Window(Home).Property(emby.nodes.0.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.1.image))">$INFO[Window(Home).Property(emby.nodes.1.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.2.image))">$INFO[Window(Home).Property(emby.nodes.2.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.3.image))">$INFO[Window(Home).Property(emby.nodes.3.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.4.image))">$INFO[Window(Home).Property(emby.nodes.4.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.5.image))">$INFO[Window(Home).Property(emby.nodes.5.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.6.image))">$INFO[Window(Home).Property(emby.nodes.6.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.7.image))">$INFO[Window(Home).Property(emby.nodes.7.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.8.image))">$INFO[Window(Home).Property(emby.nodes.8.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.9.image))">$INFO[Window(Home).Property(emby.nodes.9.image.Title)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.0.recent.image))">$INFO[Window(Home).Property(emby.nodes.0.recent.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.1.recent.image))">$INFO[Window(Home).Property(emby.nodes.1.recent.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.2.recent.image))">$INFO[Window(Home).Property(emby.nodes.2.recent.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.3.recent.image))">$INFO[Window(Home).Property(emby.nodes.3.recent.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.4.recent.image))">$INFO[Window(Home).Property(emby.nodes.4.recent.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.5.recent.image))">$INFO[Window(Home).Property(emby.nodes.5.recent.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.6.recent.image))">$INFO[Window(Home).Property(emby.nodes.6.recent.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.7.recent.image))">$INFO[Window(Home).Property(emby.nodes.7.recent.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.8.recent.image))">$INFO[Window(Home).Property(emby.nodes.8.recent.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.9.recent.image))">$INFO[Window(Home).Property(emby.nodes.9.recent.image.Title)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.0.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.0.unwatched.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.1.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.1.unwatched.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.2.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.2.unwatched.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.3.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.3.unwatched.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.4.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.4.unwatched.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.5.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.5.unwatched.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.6.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.6.unwatched.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.7.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.7.unwatched.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.8.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.8.unwatched.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.9.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.9.unwatched.image.Title)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.0.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.0.inprogress.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.1.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.1.inprogress.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.2.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.2.inprogress.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.3.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.3.inprogress.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.4.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.4.inprogress.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.5.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.5.inprogress.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.6.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.6.inprogress.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.7.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.7.inprogress.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.8.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.8.inprogress.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.9.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.9.inprogress.image.Title)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.0.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.0.recentepisodes.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.1.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.1.recentepisodes.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.2.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.2.recentepisodes.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.3.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.3.recentepisodes.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.4.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.4.recentepisodes.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.5.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.5.recentepisodes.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.6.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.6.recentepisodes.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.7.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.7.recentepisodes.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.8.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.8.recentepisodes.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.9.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.9.recentepisodes.image.Title)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.0.image))">$INFO[Window(Home).Property(playlist.0.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.1.image))">$INFO[Window(Home).Property(playlist.1.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.2.image))">$INFO[Window(Home).Property(playlist.2.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.3.image))">$INFO[Window(Home).Property(playlist.3.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.4.image))">$INFO[Window(Home).Property(playlist.4.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.5.image))">$INFO[Window(Home).Property(playlist.5.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.6.image))">$INFO[Window(Home).Property(playlist.6.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.7.image))">$INFO[Window(Home).Property(playlist.7.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.8.image))">$INFO[Window(Home).Property(playlist.8.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.9.image))">$INFO[Window(Home).Property(playlist.9.image.Title)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.0.image))">$INFO[Window(Home).Property(favorite.0.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.1.image))">$INFO[Window(Home).Property(favorite.1.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.2.image))">$INFO[Window(Home).Property(favorite.2.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.3.image))">$INFO[Window(Home).Property(favorite.3.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.4.image))">$INFO[Window(Home).Property(favorite.4.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.5.image))">$INFO[Window(Home).Property(favorite.5.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.6.image))">$INFO[Window(Home).Property(favorite.6.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.7.image))">$INFO[Window(Home).Property(favorite.7.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.8.image))">$INFO[Window(Home).Property(favorite.8.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.9.image))">$INFO[Window(Home).Property(favorite.9.image.Title)]</value>

        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.generic.image))">$INFO[Window(Home).Property(netflix.generic.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.generic.mylist.image))">$INFO[Window(Home).Property(netflix.generic.mylist.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.generic.suggestions.image))">$INFO[Window(Home).Property(netflix.generic.suggestions.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.generic.inprogress.image))">$INFO[Window(Home).Property(netflix.generic.inprogress.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.generic.recent.image))">$INFO[Window(Home).Property(netflix.generic.recent.Title)]</value>

        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.movies.image))">$INFO[Window(Home).Property(netflix.movies.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.movies.mylist.image))">$INFO[Window(Home).Property(netflix.movies.mylist.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.movies.suggestions.image))">$INFO[Window(Home).Property(netflix.movies.suggestions.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.movies.recent.image))">$INFO[Window(Home).Property(netflix.movies.recent.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.tvshows.image))">$INFO[Window(Home).Property(netflix.tvshows.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.tvshows.mylist.image))">$INFO[Window(Home).Property(netflix.tvshows.mylist.image.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.tvshows.suggestions.image))">$INFO[Window(Home).Property(netflix.tvshows.suggestions.Title)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(netflix.tvshows.recent.image))">$INFO[Window(Home).Property(netflix.tvshows.recent.Title)]</value>

        <value>$INFO[Container(900).ListItem.Property(BackgroundName)]</value>
     </variable>
     
     <variable name="background_logo">
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.AllMoviesBackground))">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.AllTvShowsBackground))">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.AllMusicVideosBackground))">$INFO[Window(Home).Property(SkinHelper.AllMusicVideosBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.RecentMusicBackground))">$INFO[Window(Home).Property(SkinHelper.RecentMusicBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.AllMusicBackground))">$INFO[Window(Home).Property(SkinHelper.AllMusicBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.GlobalFanartBackground))">$INFO[Window(Home).Property(SkinHelper.GlobalFanartBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.InProgressMoviesBackground))">$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.RecentMoviesBackground))">$INFO[Window(Home).Property(SkinHelper.RecentMoviesBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.UnwatchedMoviesBackground))">$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.InProgressShowsBackground))">$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.RecentEpisodesBackground))">$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.AllVideosBackground))">$INFO[Window(Home).Property(SkinHelper.AllVideosBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.RecentVideosBackground))">$INFO[Window(Home).Property(SkinHelper.RecentVideosBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.InProgressVideosBackground))">$INFO[Window(Home).Property(SkinHelper.InProgressVideosBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.PvrBackground))">$INFO[Window(Home).Property(SkinHelper.PvrBackground.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(SkinHelper.PicturesBackground))">$INFO[Window(Home).Property(SkinHelper.PicturesBackground.ClearLogo)]</value>
     
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.0.image))">$INFO[Window(Home).Property(emby.nodes.0.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.1.image))">$INFO[Window(Home).Property(emby.nodes.1.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.2.image))">$INFO[Window(Home).Property(emby.nodes.2.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.3.image))">$INFO[Window(Home).Property(emby.nodes.3.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.4.image))">$INFO[Window(Home).Property(emby.nodes.4.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.5.image))">$INFO[Window(Home).Property(emby.nodes.5.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.6.image))">$INFO[Window(Home).Property(emby.nodes.6.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.7.image))">$INFO[Window(Home).Property(emby.nodes.7.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.8.image))">$INFO[Window(Home).Property(emby.nodes.8.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.9.image))">$INFO[Window(Home).Property(emby.nodes.9.image.ClearLogo)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.0.recent.image))">$INFO[Window(Home).Property(emby.nodes.0.recent.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.1.recent.image))">$INFO[Window(Home).Property(emby.nodes.1.recent.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.2.recent.image))">$INFO[Window(Home).Property(emby.nodes.2.recent.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.3.recent.image))">$INFO[Window(Home).Property(emby.nodes.3.recent.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.4.recent.image))">$INFO[Window(Home).Property(emby.nodes.4.recent.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.5.recent.image))">$INFO[Window(Home).Property(emby.nodes.5.recent.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.6.recent.image))">$INFO[Window(Home).Property(emby.nodes.6.recent.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.7.recent.image))">$INFO[Window(Home).Property(emby.nodes.7.recent.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.8.recent.image))">$INFO[Window(Home).Property(emby.nodes.8.recent.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.9.recent.image))">$INFO[Window(Home).Property(emby.nodes.9.recent.image.ClearLogo)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.0.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.0.unwatched.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.1.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.1.unwatched.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.2.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.2.unwatched.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.3.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.3.unwatched.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.4.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.4.unwatched.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.5.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.5.unwatched.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.6.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.6.unwatched.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.7.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.7.unwatched.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.8.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.8.unwatched.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.9.unwatched.image))">$INFO[Window(Home).Property(emby.nodes.9.unwatched.image.ClearLogo)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.0.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.0.inprogress.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.1.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.1.inprogress.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.2.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.2.inprogress.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.3.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.3.inprogress.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.4.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.4.inprogress.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.5.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.5.inprogress.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.6.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.6.inprogress.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.7.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.7.inprogress.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.8.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.8.inprogress.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.9.inprogress.image))">$INFO[Window(Home).Property(emby.nodes.9.inprogress.image.ClearLogo)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.0.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.0.recentepisodes.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.1.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.1.recentepisodes.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.2.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.2.recentepisodes.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.3.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.3.recentepisodes.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.4.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.4.recentepisodes.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.5.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.5.recentepisodes.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.6.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.6.recentepisodes.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.7.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.7.recentepisodes.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.8.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.8.recentepisodes.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(emby.nodes.9.recentepisodes.image))">$INFO[Window(Home).Property(emby.nodes.9.recentepisodes.image.ClearLogo)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.0.image))">$INFO[Window(Home).Property(playlist.0.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.1.image))">$INFO[Window(Home).Property(playlist.1.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.2.image))">$INFO[Window(Home).Property(playlist.2.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.3.image))">$INFO[Window(Home).Property(playlist.3.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.4.image))">$INFO[Window(Home).Property(playlist.4.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.5.image))">$INFO[Window(Home).Property(playlist.5.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.6.image))">$INFO[Window(Home).Property(playlist.6.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.7.image))">$INFO[Window(Home).Property(playlist.7.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.8.image))">$INFO[Window(Home).Property(playlist.8.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(playlist.9.image))">$INFO[Window(Home).Property(playlist.9.image.ClearLogo)]</value>
        
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.0.image))">$INFO[Window(Home).Property(favorite.0.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.1.image))">$INFO[Window(Home).Property(favorite.1.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.2.image))">$INFO[Window(Home).Property(favorite.2.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.3.image))">$INFO[Window(Home).Property(favorite.3.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.4.image))">$INFO[Window(Home).Property(favorite.4.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.5.image))">$INFO[Window(Home).Property(favorite.5.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.6.image))">$INFO[Window(Home).Property(favorite.6.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.7.image))">$INFO[Window(Home).Property(favorite.7.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.8.image))">$INFO[Window(Home).Property(favorite.8.image.ClearLogo)]</value>
        <value condition="String.IsEqual(Control.GetLabel(99004),Window(Home).Property(favorite.9.image))">$INFO[Window(Home).Property(favorite.9.image.ClearLogo)]</value>
     </variable>
     
     <variable name="DialogKeyboardAutoComplete">
        <value condition="System.HasAddon(plugin.program.autocompletion)">plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]</value>
        <value condition="System.HasAddon(script.extendedinfo)">plugin://script.extendedinfo?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]</value>
     </variable>
     
     <variable name="TagsVisibilityLabel">
        <value condition="Control.IsVisible(52) + !Skin.String(View52.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(52)">$INFO[Skin.String(View52.Tags.label)]</value>
        <value condition="Control.IsVisible(53) + !Skin.String(View53.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(53)">$INFO[Skin.String(View53.Tags.label)]</value>
        <value condition="Control.IsVisible(54) + !Skin.String(View54.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(54)">$INFO[Skin.String(View54.Tags.label)]</value>
        <value condition="Control.IsVisible(55) + !Skin.String(View55.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(55)">$INFO[Skin.String(View55.Tags.label)]</value>
        <value condition="Control.IsVisible(57) + !Skin.String(View57.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(57)">$INFO[Skin.String(View57.Tags.label)]</value>
        <value condition="Control.IsVisible(58) + !Skin.String(View58.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(58)">$INFO[Skin.String(View58.Tags.label)]</value>
        <value condition="Control.IsVisible(59) + !Skin.String(View59.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(59)">$INFO[Skin.String(View59.Tags.label)]</value>
        <value condition="Control.IsVisible(500) + !Skin.String(View500.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(500)">$INFO[Skin.String(View500.Tags.label)]</value>
        <value condition="Control.IsVisible(501) + !Skin.String(View501.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(501)">$INFO[Skin.String(View501.Tags.label)]</value>
        <value condition="Control.IsVisible(502) + !Skin.String(View502.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(502)">$INFO[Skin.String(View502.Tags.label)]</value>
        <value condition="Control.IsVisible(505) + !Skin.String(View505.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(505)">$INFO[Skin.String(View505.Tags.label)]</value>
        <value condition="Control.IsVisible(508) + !Skin.String(View508.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(508)">$INFO[Skin.String(View508.Tags.label)]</value>
        <value condition="Control.IsVisible(509) + !Skin.String(View509.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(509)">$INFO[Skin.String(View509.Tags.label)]</value>
        <value condition="Control.IsVisible(510) + !Skin.String(View510.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(510)">$INFO[Skin.String(View510.Tags.label)]</value>
        <value condition="Control.IsVisible(511) + !Skin.String(View511.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(511)">$INFO[Skin.String(View511.Tags.label)]</value>
        <value condition="Control.IsVisible(512) + !Skin.String(View512.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(512)">$INFO[Skin.String(View512.Tags.label)]</value>
        <value condition="Control.IsVisible(513) + !Skin.String(View513.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(513)">$INFO[Skin.String(View513.Tags.label)]</value>
        <value condition="Control.IsVisible(514) + !Skin.String(View514.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(514)">$INFO[Skin.String(View514.Tags.label)]</value>
        <value condition="Control.IsVisible(519) + !Skin.String(View519.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(519)">$INFO[Skin.String(View519.Tags.label)]</value>
        <value condition="Control.IsVisible(520) + !Skin.String(View520.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(520)">$INFO[Skin.String(View520.Tags.label)]</value>
        <value condition="Control.IsVisible(523) + !Skin.String(View523.Tags)">$LOCALIZE[16316]</value>
        <value condition="Control.IsVisible(523)">$INFO[Skin.String(View523.Tags.label)]</value>
         <value condition="Control.IsVisible(526) + !Skin.String(View526.Tags)">$LOCALIZE[16316]</value>
         <value condition="Control.IsVisible(526)">$INFO[Skin.String(View526.Tags.label)]</value>
     </variable>
     
     <variable name="VideoInfoFileName">
        <value condition="!String.IsEmpty(Window(Home).Property(filename_formatted))">$INFO[Window(Home).Property(filename_formatted)]</value>
        <value condition="!String.IsEmpty(Container(999).ListItem.FileNameAndPath)">$INFO[Container(999).ListItem.FileNameAndPath]</value>
        <value>$INFO[ListItem.FileNameAndPath]</value>
     </variable>
     
     <variable name="submenuheader">
        <value condition="String.IsEmpty(Container(900).ListItem.Property(customsubmenuheader))">$LOCALIZE[1034]</value>
        <value condition="String.IsEqual(Container(900).ListItem.Property(customsubmenuheader),mainmenu)">$INFO[Container(900).ListItem.Label]</value>
        <value condition="!String.IsEqual(Container(900).ListItem.Property(customsubmenuheader),None)">$INFO[Container(900).ListItem.Property(customsubmenuheader)]</value>
     </variable>

	 <variable name="VideoHWDecoder">
 		<value condition="Player.Process(videohwdecoder)">$LOCALIZE[13281]</value>
 		<value>$LOCALIZE[31787]</value>
 	 </variable>
     
    <variable name="premiere_date">
        <!-- <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.Listitem.Premiered)) + [String.IsEqual(ListItem.TvShowTitle, ListItem.Title) | String.IsEmpty(ListItem.TvShowTitle)]">$INFO[Window(Home).Property(SkinHelper.Listitem.Premiered.formatted)]</value> -->
        <value condition="!String.IsEmpty(ListItem.Premiered)">$INFO[ListItem.Premiered]</value>
        <value condition="!String.IsEmpty(ListItem.Year)">$INFO[ListItem.Year]</value>
     </variable>
     
     <variable name="premiere_date_player">
        <value condition="!String.IsEmpty(VideoPlayer.Premiered)">$INFO[VideoPlayer.Premiered]</value>
        <value condition="!String.IsEmpty(VideoPlayer.Year)">$INFO[VideoPlayer.Year]</value>
     </variable>
     
     <variable name="homemenuitem_label">
        <value condition="Skin.HasSetting(homemenu_nouppercase)">$INFO[ListItem.Label]</value>
        <value>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</value>
    </variable>
    
    <variable name="musicrating_stars">
        <value condition="!String.IsEmpty(ListItem.UserRating)">$INFO[ListItem.UserRating,ratings/star_rating/,.png]</value>
        <value condition="!String.IsEmpty(ListItem.Rating)">$INFO[ListItem.Rating,ratings/star_rating/,.png]</value>
    </variable>
    <variable name="musicrating_stars_player">
        <value condition="String.Contains(MusicPlayer.Rating,5)">ratings/star_rating_simple/rating5.png</value>
        <value condition="String.Contains(MusicPlayer.Rating,4)">ratings/star_rating_simple/rating4.png</value>
        <value condition="String.Contains(MusicPlayer.Rating,3)">ratings/star_rating_simple/rating3.png</value>
        <value condition="String.Contains(MusicPlayer.Rating,2)">ratings/star_rating_simple/rating2.png</value>
        <value condition="String.Contains(MusicPlayer.Rating,1)">ratings/star_rating_simple/rating1.png</value>
        <value condition="!String.IsEmpty(MusicPlayer.Rating)">$INFO[MusicPlayer.Rating,ratings/star_rating/,.png]</value>
        <value condition="!String.IsEmpty(MusicPlayer.StarRating)">$INFO[MusicPlayer.StarRating,ratings/star_rating_simple/]</value>
        <value condition="!String.IsEmpty(MusicPlayer.UserRating)">$INFO[MusicPlayer.UserRating,ratings/star_rating/,.png]</value>
    </variable>

    <!-- Skin Helper Vars -->
    <variable name="CustomBackgroundSetting">
        <value>$INFO[Window(Home).Property(SkinHelper.TopRatedMovies)]</value>
    </variable>
    <variable name="MusicBackground">
        <value>$INFO[Window(Home).Property(SkinHelper.AllMusicSongsBackground.Wall)]</value>
    </variable>

    <variable name="focusWidget">
        <!-- workaround to focus the first widget -->
        <value condition="Control.IsVisible(1510) + Integer.IsGreater(Container(1510).NumItems,0)">SetFocus(1510)</value>
        <value condition="Control.IsVisible(1520) + Integer.IsGreater(Container(1520).NumItems,0)">SetFocus(1520)</value>
        <value condition="Control.IsVisible(1530) + Integer.IsGreater(Container(1530).NumItems,0)">SetFocus(1530)</value>
        <value condition="Control.IsVisible(1540) + Integer.IsGreater(Container(1540).NumItems,0)">SetFocus(1540)</value>
        <value condition="Control.IsVisible(1550) + Integer.IsGreater(Container(1550).NumItems,0)">SetFocus(1550)</value>
        <value condition="Control.IsVisible(1560) + Integer.IsGreater(Container(1560).NumItems,0)">SetFocus(1560)</value>
        <value condition="Control.IsVisible(1570) + Integer.IsGreater(Container(1570).NumItems,0)">SetFocus(1570)</value>
        <value condition="Control.IsVisible(1580) + Integer.IsGreater(Container(1580).NumItems,0)">SetFocus(1580)</value>
        <value condition="Control.IsVisible(1590) + Integer.IsGreater(Container(1590).NumItems,0)">SetFocus(1590)</value>
        <value condition="Control.IsVisible(1600) + Integer.IsGreater(Container(1600).NumItems,0)">SetFocus(1600)</value>
        <value condition="Control.IsVisible(2510) + Integer.IsGreater(Container(2510).NumItems,0)">SetFocus(2510)</value>
        <value condition="Control.IsVisible(2520) + Integer.IsGreater(Container(2520).NumItems,0)">SetFocus(2520)</value>
        <value condition="Control.IsVisible(2530) + Integer.IsGreater(Container(2530).NumItems,0)">SetFocus(2530)</value>
        <value condition="Control.IsVisible(2540) + Integer.IsGreater(Container(2540).NumItems,0)">SetFocus(2540)</value>
        <value condition="Control.IsVisible(2550) + Integer.IsGreater(Container(2550).NumItems,0)">SetFocus(2550)</value>
        <value condition="Control.IsVisible(2560) + Integer.IsGreater(Container(2560).NumItems,0)">SetFocus(2560)</value>
        <value condition="Control.IsVisible(2570) + Integer.IsGreater(Container(2570).NumItems,0)">SetFocus(2570)</value>
        <value condition="Control.IsVisible(2580) + Integer.IsGreater(Container(2580).NumItems,0)">SetFocus(2580)</value>
        <value condition="Control.IsVisible(2590) + Integer.IsGreater(Container(2590).NumItems,0)">SetFocus(2590)</value>
        <value condition="Control.IsVisible(2600) + Integer.IsGreater(Container(2600).NumItems,0)">SetFocus(2600)</value>
        <value condition="Control.IsVisible(3510) + Integer.IsGreater(Container(3510).NumItems,0)">SetFocus(3510)</value>
        <value condition="Control.IsVisible(3520) + Integer.IsGreater(Container(3520).NumItems,0)">SetFocus(3520)</value>
        <value condition="Control.IsVisible(3530) + Integer.IsGreater(Container(3530).NumItems,0)">SetFocus(3530)</value>
        <value condition="Control.IsVisible(3540) + Integer.IsGreater(Container(3540).NumItems,0)">SetFocus(3540)</value>
        <value condition="Control.IsVisible(3550) + Integer.IsGreater(Container(3550).NumItems,0)">SetFocus(3550)</value>
        <value condition="Control.IsVisible(3560) + Integer.IsGreater(Container(3560).NumItems,0)">SetFocus(3560)</value>
        <value condition="Control.IsVisible(3570) + Integer.IsGreater(Container(3570).NumItems,0)">SetFocus(3570)</value>
        <value condition="Control.IsVisible(3580) + Integer.IsGreater(Container(3580).NumItems,0)">SetFocus(3580)</value>
        <value condition="Control.IsVisible(3590) + Integer.IsGreater(Container(3590).NumItems,0)">SetFocus(3590)</value>
        <value condition="Control.IsVisible(3600) + Integer.IsGreater(Container(3600).NumItems,0)">SetFocus(3600)</value>
        <value condition="Control.IsVisible(4510) + Integer.IsGreater(Container(4510).NumItems,0)">SetFocus(4510)</value>
        <value condition="Control.IsVisible(4520) + Integer.IsGreater(Container(4520).NumItems,0)">SetFocus(4520)</value>
        <value condition="Control.IsVisible(4530) + Integer.IsGreater(Container(4530).NumItems,0)">SetFocus(4530)</value>
        <value condition="Control.IsVisible(4540) + Integer.IsGreater(Container(4540).NumItems,0)">SetFocus(4540)</value>
        <value condition="Control.IsVisible(4550) + Integer.IsGreater(Container(4550).NumItems,0)">SetFocus(4550)</value>
        <value condition="Control.IsVisible(4560) + Integer.IsGreater(Container(4560).NumItems,0)">SetFocus(4560)</value>
        <value condition="Control.IsVisible(4570) + Integer.IsGreater(Container(4570).NumItems,0)">SetFocus(4570)</value>
        <value condition="Control.IsVisible(4580) + Integer.IsGreater(Container(4580).NumItems,0)">SetFocus(4580)</value>
        <value condition="Control.IsVisible(4590) + Integer.IsGreater(Container(4590).NumItems,0)">SetFocus(4590)</value>
        <value condition="Control.IsVisible(4600) + Integer.IsGreater(Container(4600).NumItems,0)">SetFocus(4600)</value>
        <value condition="Control.IsVisible(5510) + Integer.IsGreater(Container(5510).NumItems,0)">SetFocus(5510)</value>
        <value condition="Control.IsVisible(5520) + Integer.IsGreater(Container(5520).NumItems,0)">SetFocus(5520)</value>
        <value condition="Control.IsVisible(5530) + Integer.IsGreater(Container(5530).NumItems,0)">SetFocus(5530)</value>
        <value condition="Control.IsVisible(5540) + Integer.IsGreater(Container(5540).NumItems,0)">SetFocus(5540)</value>
        <value condition="Control.IsVisible(5550) + Integer.IsGreater(Container(5550).NumItems,0)">SetFocus(5550)</value>
        <value condition="Control.IsVisible(5560) + Integer.IsGreater(Container(5560).NumItems,0)">SetFocus(5560)</value>
        <value condition="Control.IsVisible(5570) + Integer.IsGreater(Container(5570).NumItems,0)">SetFocus(5570)</value>
        <value condition="Control.IsVisible(5580) + Integer.IsGreater(Container(5580).NumItems,0)">SetFocus(5580)</value>
        <value condition="Control.IsVisible(5590) + Integer.IsGreater(Container(5590).NumItems,0)">SetFocus(5590)</value>
        <value condition="Control.IsVisible(5600) + Integer.IsGreater(Container(5600).NumItems,0)">SetFocus(5600)</value>
        <value condition="Control.IsVisible(6510) + Integer.IsGreater(Container(6510).NumItems,0)">SetFocus(6510)</value>
        <value condition="Control.IsVisible(6520) + Integer.IsGreater(Container(6520).NumItems,0)">SetFocus(6520)</value>
        <value condition="Control.IsVisible(6530) + Integer.IsGreater(Container(6530).NumItems,0)">SetFocus(6530)</value>
        <value condition="Control.IsVisible(6540) + Integer.IsGreater(Container(6540).NumItems,0)">SetFocus(6540)</value>
        <value condition="Control.IsVisible(6550) + Integer.IsGreater(Container(6550).NumItems,0)">SetFocus(6550)</value>
        <value condition="Control.IsVisible(6560) + Integer.IsGreater(Container(6560).NumItems,0)">SetFocus(6560)</value>
        <value condition="Control.IsVisible(6570) + Integer.IsGreater(Container(6570).NumItems,0)">SetFocus(6570)</value>
        <value condition="Control.IsVisible(6580) + Integer.IsGreater(Container(6580).NumItems,0)">SetFocus(6580)</value>
        <value condition="Control.IsVisible(6590) + Integer.IsGreater(Container(6590).NumItems,0)">SetFocus(6590)</value>
        <value condition="Control.IsVisible(6600) + Integer.IsGreater(Container(6600).NumItems,0)">SetFocus(6600)</value>
        <value condition="Control.IsVisible(7510) + Integer.IsGreater(Container(7510).NumItems,0)">SetFocus(7510)</value>
        <value condition="Control.IsVisible(7520) + Integer.IsGreater(Container(7520).NumItems,0)">SetFocus(7520)</value>
        <value condition="Control.IsVisible(7530) + Integer.IsGreater(Container(7530).NumItems,0)">SetFocus(7530)</value>
        <value condition="Control.IsVisible(7540) + Integer.IsGreater(Container(7540).NumItems,0)">SetFocus(7540)</value>
        <value condition="Control.IsVisible(7550) + Integer.IsGreater(Container(7550).NumItems,0)">SetFocus(7550)</value>
        <value condition="Control.IsVisible(7560) + Integer.IsGreater(Container(7560).NumItems,0)">SetFocus(7560)</value>
        <value condition="Control.IsVisible(7570) + Integer.IsGreater(Container(7570).NumItems,0)">SetFocus(7570)</value>
        <value condition="Control.IsVisible(7580) + Integer.IsGreater(Container(7580).NumItems,0)">SetFocus(7580)</value>
        <value condition="Control.IsVisible(7590) + Integer.IsGreater(Container(7590).NumItems,0)">SetFocus(7590)</value>
        <value condition="Control.IsVisible(7600) + Integer.IsGreater(Container(7600).NumItems,0)">SetFocus(7600)</value>
        <value condition="Control.IsVisible(8510) + Integer.IsGreater(Container(8510).NumItems,0)">SetFocus(8510)</value>
        <value condition="Control.IsVisible(8520) + Integer.IsGreater(Container(8520).NumItems,0)">SetFocus(8520)</value>
        <value condition="Control.IsVisible(8530) + Integer.IsGreater(Container(8530).NumItems,0)">SetFocus(8530)</value>
        <value condition="Control.IsVisible(8540) + Integer.IsGreater(Container(8540).NumItems,0)">SetFocus(8540)</value>
        <value condition="Control.IsVisible(8550) + Integer.IsGreater(Container(8550).NumItems,0)">SetFocus(8550)</value>
        <value condition="Control.IsVisible(8560) + Integer.IsGreater(Container(8560).NumItems,0)">SetFocus(8560)</value>
        <value condition="Control.IsVisible(8570) + Integer.IsGreater(Container(8570).NumItems,0)">SetFocus(8570)</value>
        <value condition="Control.IsVisible(8580) + Integer.IsGreater(Container(8580).NumItems,0)">SetFocus(8580)</value>
        <value condition="Control.IsVisible(8590) + Integer.IsGreater(Container(8590).NumItems,0)">SetFocus(8590)</value>
        <value condition="Control.IsVisible(8600) + Integer.IsGreater(Container(8600).NumItems,0)">SetFocus(8600)</value>
        <value condition="Control.IsVisible(9510) + Integer.IsGreater(Container(9510).NumItems,0)">SetFocus(9510)</value>
        <value condition="Control.IsVisible(9520) + Integer.IsGreater(Container(9520).NumItems,0)">SetFocus(9520)</value>
        <value condition="Control.IsVisible(9530) + Integer.IsGreater(Container(9530).NumItems,0)">SetFocus(9530)</value>
        <value condition="Control.IsVisible(9540) + Integer.IsGreater(Container(9540).NumItems,0)">SetFocus(9540)</value>
        <value condition="Control.IsVisible(9550) + Integer.IsGreater(Container(9550).NumItems,0)">SetFocus(9550)</value>
        <value condition="Control.IsVisible(9560) + Integer.IsGreater(Container(9560).NumItems,0)">SetFocus(9560)</value>
        <value condition="Control.IsVisible(9570) + Integer.IsGreater(Container(9570).NumItems,0)">SetFocus(9570)</value>
        <value condition="Control.IsVisible(9580) + Integer.IsGreater(Container(9580).NumItems,0)">SetFocus(9580)</value>
        <value condition="Control.IsVisible(9590) + Integer.IsGreater(Container(9590).NumItems,0)">SetFocus(9590)</value>
        <value condition="Control.IsVisible(9600) + Integer.IsGreater(Container(9600).NumItems,0)">SetFocus(9600)</value>
        <value condition="Control.IsVisible(10510) + Integer.IsGreater(Container(10510).NumItems,0)">SetFocus(10510)</value>
        <value condition="Control.IsVisible(10520) + Integer.IsGreater(Container(10520).NumItems,0)">SetFocus(10520)</value>
        <value condition="Control.IsVisible(10530) + Integer.IsGreater(Container(10530).NumItems,0)">SetFocus(10530)</value>
        <value condition="Control.IsVisible(10540) + Integer.IsGreater(Container(10540).NumItems,0)">SetFocus(10540)</value>
        <value condition="Control.IsVisible(10550) + Integer.IsGreater(Container(10550).NumItems,0)">SetFocus(10550)</value>
        <value condition="Control.IsVisible(10560) + Integer.IsGreater(Container(10560).NumItems,0)">SetFocus(10560)</value>
        <value condition="Control.IsVisible(10570) + Integer.IsGreater(Container(10570).NumItems,0)">SetFocus(10570)</value>
        <value condition="Control.IsVisible(10580) + Integer.IsGreater(Container(10580).NumItems,0)">SetFocus(10580)</value>
        <value condition="Control.IsVisible(10590) + Integer.IsGreater(Container(10590).NumItems,0)">SetFocus(10590)</value>
        <value condition="Control.IsVisible(10600) + Integer.IsGreater(Container(10600).NumItems,0)">SetFocus(10600)</value>
        <value>SetFocus(77777)</value>
    </variable>

    <!-- home vars -->
    <variable name="HomeMenuWidgetInfoLabel">
        <value condition="String.Contains(Container(900).ListItem.Property(widgetPath), plugin.video.youtube) + !String.IsEmpty(ListItem.Label2)">[B]$INFO[ListItem.label][CR]$INFO[ListItem.label2][/B]</value>
        <value condition="String.IsEqual(ListItem.Property(DBTYPE), systeminfo)">[B]$INFO[ListItem.label][/B] $INFO[ListItem.label2]</value>
        <value condition="!String.IsEmpty(ListItem.Title) + String.Contains(ListItem.FolderPath, pvr://)">[B]$INFO[ListItem.Title][/B]</value>
        <value condition="!String.IsEmpty(ListItem.Season) + !String.IsEmpty(ListItem.Episode) + !String.IsEqual(ListItem.TvShowTitle,ListItem.Title)">[B][UPPERCASE]S$INFO[ListItem.Season]E$INFO[ListItem.Episode]:[/UPPERCASE] $INFO[ListItem.Title][/B]</value>
        <value condition="!String.IsEmpty(ListItem.Title)">[B]$INFO[ListItem.Title][/B]</value>
        <value condition="!String.IsEmpty(ListItem.Label)">[B]$INFO[ListItem.Label][/B]</value>
        <!-- spotlight widget-->
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + String.IsEqual(Container(1508).ListItem.Property(DBTYPE), systeminfo)">[B]$INFO[Container(1508).ListItem.label][/B] $INFO[Container(1508).ListItem.label2]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Title) + String.Contains(Container(1508).ListItem.FolderPath, pvr://)">[B]$INFO[Container(1508).ListItem.Title][/B]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Season) + !String.IsEmpty(Container(1508).ListItem.Episode) + !String.IsEqual(Container(1508).ListItem.TvShowTitle,Container(1508).ListItem.Title)">[B][UPPERCASE]S$INFO[Container(1508).ListItem.Season]E$INFO[Container(1508).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1508).ListItem.Title][/B]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Title)">[B]$INFO[Container(1508).ListItem.Title][/B]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Label)">[B]$INFO[Container(1508).ListItem.Label][/B]</value>
        <!--widgets -->
        <value condition="String.Contains(Container(900).ListItem.Property(widgetPath), plugin.video.youtube)">[B]$INFO[Window(Home).Property(ListItem.label)][CR]$INFO[Window(Home).Property(ListItem.label2)][/B]</value>
        <value condition="String.IsEqual(Window(Home).Property(ListItem.DBTYPE), systeminfo)">[B]$INFO[Window(Home).Property(ListItem.label)][/B] $INFO[Window(Home).Property(ListItem.label2)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Title)) + String.Contains(Window(Home).Property(ListItem.FolderPath), pvr://)">[B]$INFO[Window(Home).Property(ListItem.Title)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Season)) + !String.IsEmpty(Window(Home).Property(ListItem.Episode)) + !String.IsEqual(Window(Home).Property(ListItem.TvShowTitle),Window(Home).Property(ListItem.Title))">[B][UPPERCASE]S$INFO[Window(Home).Property(ListItem.Season)]E$INFO[Window(Home).Property(ListItem.Episode)]:[/UPPERCASE] $INFO[Window(Home).Property(ListItem.Title)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Title))">[B]$INFO[Window(Home).Property(ListItem.Title)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Label))">[B]$INFO[Window(Home).Property(ListItem.Label)][/B]</value>
        <!--widgets fallback-->
        <value condition="String.Contains(Container(900).ListItem.Property(widgetPath), plugin.video.youtube)">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.label)][CR]$INFO[Window(Home).Property(SkinHelper.ListItem.label2)][/B]</value>
        <value condition="String.IsEqual(Window(Home).Property(SkinHelper.ListItem.DBTYPE), systeminfo)">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.label)][/B] $INFO[Window(Home).Property(SkinHelper.ListItem.label2)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Title)) + String.Contains(Window(Home).Property(SkinHelper.ListItem.FolderPath), pvr://)">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Title)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Season)) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Episode)) + !String.IsEqual(Window(Home).Property(SkinHelper.ListItem.TvShowTitle),Window(Home).Property(SkinHelper.ListItem.Title))">[B][UPPERCASE]S$INFO[Window(Home).Property(SkinHelper.ListItem.Season)]E$INFO[Window(Home).Property(SkinHelper.ListItem.Episode)]:[/UPPERCASE] $INFO[Window(Home).Property(SkinHelper.ListItem.Title)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Title))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Title)][/B]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Label))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Label)][/B]</value>
    </variable>
    <variable name="HomeMenuWidgetInfoLabel2">
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Tagline))">$INFO[Window(Home).Property(ListItem.Tagline)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.TvShowTitle))">$INFO[Window(Home).Property(ListItem.TvShowTitle)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Artist))">$INFO[Window(Home).Property(ListItem.Artist)]</value>

        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Tagline))">$INFO[Window(Home).Property(SkinHelper.ListItem.Tagline)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.TvShowTitle))">$INFO[Window(Home).Property(SkinHelper.ListItem.TvShowTitle)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Artist))">$INFO[Window(Home).Property(SkinHelper.ListItem.Artist)]</value>
    </variable>
    <variable name="HomeMenuWidgetInfoclearlogo">
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Art(clearlogo))">$INFO[Container(1508).ListItem.Art(clearlogo)]</value>

        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.ChannelLogo))">$INFO[Window(Home).Property(ListItem.ChannelLogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.ClearLogo))">$INFO[Window(Home).Property(ListItem.ClearLogo)]</value>

        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo)]</value>
    </variable>
    <variable name="SpotLightWidgetInfoThumb">
        <!-- details widget -->
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(ChannelLogo))">$INFO[ListItem.Property(ChannelLogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
        <!-- spotlight widget -->
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Art(tvshow.clearlogo))">$INFO[Container(1508).ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Art(clearlogo))">$INFO[Container(1508).ListItem.Art(clearlogo)]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Art(landscape))">$INFO[Container(1508).ListItem.Art(landscape)]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Art(tvshow.landscape))">$INFO[Container(1508).ListItem.Art(tvshow.landscape)]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Art(poster))">$INFO[Container(1508).ListItem.Art(poster)]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Art(tvshow.poster))">$INFO[Container(1508).ListItem.Art(tvshow.poster)]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Property(ChannelLogo))">$INFO[Container(1508).ListItem.Property(ChannelLogo)]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Icon)">$INFO[Container(1508).ListItem.Icon]</value>
        <!-- normal widgets -->
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.ClearLogo))">$INFO[Window(Home).Property(ListItem.ClearLogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Art.landscape))">$INFO[Window(Home).Property(ListItem.Art.landscape)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Art.Poster))">$INFO[Window(Home).Property(ListItem.Art.Poster)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.ChannelLogo))">$INFO[Window(Home).Property(ListItem.ChannelLogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Art.ChannelLogo))">$INFO[Window(Home).Property(ListItem.Art.ChannelLogo)]</value>
        <!-- skinhelper fallback -->
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Clearlogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.landscape))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.landscape)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Poster))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Poster)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.ChannelLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.ChannelLogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ChannelLogo))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ChannelLogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Icon))">$INFO[Window(Home).Property(SkinHelper.ListItem.Icon)]</value>
    </variable>
    <variable name="HomeMenuWidgetInfoPlot">
        <!-- workaround - contains ''director: " is a workaround to ignore bad scraped outline plots, it should be solved at scraper level -->
        <!-- spotlight widget (inside container) -->
        <value condition="!String.IsEmpty(ListItem.PlotOutline) + Skin.HasSetting(WidgetsPreferPlotOutline) + !String.Contains(ListItem.PlotOutline,$LOCALIZE[20339]: )">$INFO[ListItem.PlotOutline]</value>
        <value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Plot))">$INFO[ListItem.Property(Plot)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
        <value condition="!String.IsEmpty(ListItem.PictureDesc)">$INFO[ListItem.PictureDesc]</value>
        <value condition="!String.IsEmpty(ListItem.PictureComment)">$INFO[ListItem.PictureComment]</value>
        <value condition="!String.IsEmpty(ListItem.PictureKeywords)">$INFO[ListItem.PictureKeywords]</value>
        <!-- spotlight widget (outside container) -->
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.PlotOutline) + Skin.HasSetting(WidgetsPreferPlotOutline) + !String.Contains(Container(1508).ListItem.PlotOutline,$LOCALIZE[20339]: )">$INFO[Container(1508).ListItem.PlotOutline]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Plot)">$INFO[Container(1508).ListItem.Plot]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Property(Plot))">$INFO[Container(1508).ListItem.Property(Plot)]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Property(Album_Description))">$INFO[Container(1508).ListItem.Property(Album_Description)]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Property(Artist_Description))">$INFO[Container(1508).ListItem.Property(Artist_Description)]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.PictureDesc)">$INFO[Container(1508).ListItem.PictureDesc]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.PictureComment)">$INFO[Container(1508).ListItem.PictureComment]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.PictureKeywords)">$INFO[Container(1508).ListItem.PictureKeywords]</value>
        <!-- normal widgets info -->
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.PlotOutline)) + Skin.HasSetting(WidgetsPreferPlotOutline) + !String.Contains(Window(Home).Property(ListItem.PlotOutline),$LOCALIZE[20339]: )">$INFO[Window(Home).Property(ListItem.PlotOutline)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Plot))">$INFO[Window(Home).Property(ListItem.Plot)]$INFO[Window(Home).Property(ListItem.label2),[CR]]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Album_Description))">$INFO[Window(Home).Property(ListItem.Album_Description)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Artist_Description))">$INFO[Window(Home).Property(ListItem.Artist_Description)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.PictureDesc))">$INFO[Window(Home).Property(ListItem.PictureDesc)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.PictureComment))">$INFO[Window(Home).Property(ListItem.PictureComment)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.PictureKeywords))">$INFO[Window(Home).Property(ListItem.PictureKeywords)]</value>
        <!-- skinhelper fallback-->
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.PlotOutline)) + Skin.HasSetting(WidgetsPreferPlotOutline) + !String.Contains(Window(Home).Property(SkinHelper.ListItem.PlotOutline),$LOCALIZE[20339]: )">$INFO[Window(Home).Property(SkinHelper.ListItem.PlotOutline)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Plot))">$INFO[Window(Home).Property(SkinHelper.ListItem.Plot)]$INFO[Window(Home).Property(SkinHelper.ListItem.label2),[CR]]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Album_Description))">$INFO[Window(Home).Property(SkinHelper.ListItem.Album_Description)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Artist_Description))">$INFO[Window(Home).Property(SkinHelper.ListItem.Artist_Description)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.PictureDesc))">$INFO[Window(Home).Property(SkinHelper.ListItem.PictureDesc)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.PictureComment))">$INFO[Window(Home).Property(SkinHelper.ListItem.PictureComment)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.PictureKeywords))">$INFO[Window(Home).Property(SkinHelper.ListItem.PictureKeywords)]</value>
    </variable>
    <variable name="HomeMenuWidgetInfoPlotAlt">
        <!-- details widget -->
        <value condition="!String.IsEmpty(ListItem.TvShowTitle)">[B]$INFO[ListItem.TvShowTitle]$INFO[ListItem.Year, • ]$INFO[ListItem.Premiered, • ]$INFO[ListItem.Genre, • ]$INFO[ListItem.Duration, • ,min.][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(ListItem.Artist) + !String.IsEmpty(ListItem.Album)">[B]$INFO[ListItem.Artist]$INFO[ListItem.Album, • ]$INFO[ListItem.Duration, • ][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(ListItem.Year)">[B]$INFO[ListItem.Year]$INFO[ListItem.Duration, • ,min.]$INFO[ListItem.Genre, • ][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(ListItem.Property(StartDateTime))">[B]$INFO[ListItem.Channel,, • ]$INFO[ListItem.Property(StartDateTime),, • ]$INFO[ListItem.Duration,, min. • ]$INFO[ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(ListItem.Property(DateTime)) + !String.IsEmpty(ListItem.Label2)">[B]$INFO[ListItem.Label2,, • ]$INFO[ListItem.Property(DateTime),, • ]$INFO[ListItem.Duration,, min. • ]$INFO[ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(ListItem.StartTime)">[B]$INFO[ListItem.Label,, • ]$INFO[ListItem.StartTime,, • ]$INFO[ListItem.Duration,, min. • ]$INFO[ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <!-- spotlight widget -->
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.TvShowTitle)">[B]$INFO[Container(1508).ListItem.TvShowTitle]$INFO[Container(1508).ListItem.Year, • ]$INFO[Container(1508).ListItem.Premiered, • ]$INFO[Container(1508).ListItem.Genre, • ]$INFO[Container(1508).ListItem.Duration, • ,min.][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Artist) + !String.IsEmpty(Container(1508).ListItem.Album)">[B]$INFO[Container(1508).ListItem.Artist]$INFO[Container(1508).ListItem.Album, • ]$INFO[Container(1508).ListItem.Duration, • ][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Year)">[B]$INFO[Container(1508).ListItem.Year]$INFO[Container(1508).ListItem.Duration, • ,min.]$INFO[Container(1508).ListItem.Genre, • ][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Property(StartDateTime))">[B]$INFO[Container(1508).ListItem.Channel,, • ]$INFO[Container(1508).ListItem.Property(StartDateTime),, • ]$INFO[Container(1508).ListItem.Duration,, min. • ]$INFO[Container(1508).ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.Property(DateTime)) + !String.IsEmpty(Container(1508).ListItem.Label2)">[B]$INFO[Container(1508).ListItem.Label2,, • ]$INFO[Container(1508).ListItem.Property(DateTime),, • ]$INFO[Container(1508).ListItem.Duration,, min. • ]$INFO[Container(1508).ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!ControlGroup(77777).HasFocus + Control.IsVisible(1508) + !String.IsEmpty(Container(1508).ListItem.StartTime)">[B]$INFO[Container(1508).ListItem.Label,, • ]$INFO[Container(1508).ListItem.StartTime,, • ]$INFO[Container(1508).ListItem.Duration,, min. • ]$INFO[Container(1508).ListItem.Genre][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <!-- normal widgets -->
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.TvShowTitle))">[B]$INFO[Window(Home).Property(ListItem.TvShowTitle),, • ]$INFO[Window(Home).Property(ListItem.Year),, • ]$INFO[Window(Home).Property(ListItem.Premiered),, • ]$INFO[Window(Home).Property(ListItem.Duration),, min. • ]$INFO[Window(Home).Property(ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Year))">[B]$INFO[Window(Home).Property(ListItem.Year),, • ]$INFO[Window(Home).Property(ListItem.Duration),, min. • ]$INFO[Window(Home).Property(ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Artist)) + !String.IsEmpty(Window(Home).Property(ListItem.Album))">[B]$INFO[Window(Home).Property(ListItem.Artist),, • ]$INFO[Window(Home).Property(ListItem.Album),, • ]$INFO[Window(Home).Property(ListItem.Duration)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.StartDateTime))">[B]$INFO[Window(Home).Property(ListItem.Label),, • ]$INFO[Window(Home).Property(ListItem.StartDateTime),, • ]$INFO[Window(Home).Property(ListItem.Duration),, min. • ]$INFO[Window(Home).Property(ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Property(DateTime))) + !String.IsEmpty(Window(Home).Property(ListItem.Label2))">[B]$INFO[Window(Home).Property(ListItem.Label2),, • ]$INFO[Window(Home).Property(ListItem.Property(DateTime)),, • ]$INFO[Window(Home).Property(ListItem.Duration),, min. • ]$INFO[Window(Home).Property(ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.StartTime))">[B]$INFO[Window(Home).Property(ListItem.Label),, • ]$INFO[Window(Home).Property(ListItem.StartTime),, • ]$INFO[Window(Home).Property(ListItem.Duration),, min. • ]$INFO[Window(Home).Property(ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <!-- skinhelper fallback -->
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.TvShowTitle))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.TvShowTitle),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Year),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Premiered),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, min. • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Year))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Year),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, min. • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Artist)) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Album))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Artist),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Album),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.StartDateTime))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Label),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.StartDateTime),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, min. • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Property(DateTime))) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Label2))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Label2),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Property(DateTime)),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, min. • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.StartTime))">[B]$INFO[Window(Home).Property(SkinHelper.ListItem.Label),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.StartTime),, • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Duration),, min. • ]$INFO[Window(Home).Property(SkinHelper.ListItem.Genre)][/B][CR]$VAR[HomeMenuWidgetInfoPlot]</value>
        <value>$VAR[HomeMenuWidgetInfoPlot]</value>
    </variable>

    <variable name="HomeMenuWidgetInfoPoster">
        <!-- animated poster if exists-->
        <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.AnimatedPoster)]</value>
        <!-- use episode thumb for episode widgets if widget style is poster -->
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Art.Thumb)) + String.Contains(Window(Home).Property(widgetstyle),poster) + String.Contains(Window(Home).Property(ListItem.dbtype),episode)">$INFO[Window(Home).Property(ListItem.Art.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb)) + String.Contains(Window(Home).Property(widgetstyle),poster) + String.Contains(Window(Home).Property(SkinHelper.ListItem.dbtype),episode)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Thumb)]</value>
        <!-- use thumb if widget style is square -->
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Art.Thumb)) + String.Contains(Window(Home).Property(widgetstyle),square)">$INFO[Window(Home).Property(ListItem.Art.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb)) + String.Contains(Window(Home).Property(widgetstyle),square)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Thumb)]</value>
        <!-- use thumb for weather widget -->
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Thumb)) + String.Contains(Window.Property(ListItem.DBTYPE),weather)">$INFO[Window(Home).Property(ListItem.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb)) + String.Contains(Window.Property(SkinHelper.ListItem.DBTYPE),weather)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Thumb)]</value>
        <!-- use poster image if widget style is landscaped-->
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Art.Poster)) + String.Contains(Window(Home).Property(widgetstyle),landscape)">$INFO[Window(Home).Property(ListItem.Art.Poster)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Art.Fanart))">$INFO[Window(Home).Property(ListItem.Art.Fanart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Art.Thumb))">$INFO[Window(Home).Property(ListItem.Art.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(ListItem.Icon))">$INFO[Window(Home).Property(ListItem.Icon)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Poster)) + String.Contains(Window(Home).Property(widgetstyle),landscape)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Poster)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Fanart))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Fanart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Thumb))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Thumb)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Icon))">$INFO[Window(Home).Property(SkinHelper.ListItem.Icon)]</value>
    </variable>

    <variable name="ActualIcon">
        <value condition="String.IsEqual(Skin.String(HomeLayout),bingie) + !String.IsEmpty(ListItem.ActualIcon)">$INFO[ListItem.ActualIcon]</value>
        <value>ListItem.Icon</value>
    </variable>
</includes>
